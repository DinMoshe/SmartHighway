{"version":3,"sources":["../../src/Errors.ts","../../src/HttpClient.ts","../../src/ILogger.ts","../../src/Loggers.ts","node_modules/process/browser.js","../../src/Utils.ts","../../src/FetchHttpClient.ts","../../src/XhrHttpClient.ts","../../src/DefaultHttpClient.ts","../../src/TextMessageFormat.ts","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/isarray/index.js","node_modules/buffer/index.js","../../src/HandshakeProtocol.ts","../../src/IHubProtocol.ts","../../src/Subject.ts","../../src/HubConnection.ts","../../src/DefaultReconnectPolicy.ts","../../src/ITransport.ts","../../src/AbortController.ts","../../src/LongPollingTransport.ts","../../src/ServerSentEventsTransport.ts","../../src/WebSocketTransport.ts","../../src/HttpConnection.ts","../../src/JsonHubProtocol.ts","../../src/HubConnectionBuilder.ts","../../src/index.ts","signalr_connect.js"],"names":["process","module","exports","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","setTimeout","e","clearTimeout","runTimeout","fun","call","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","nextTick","args","Array","arguments","i","push","Item","array","prototype","apply","title","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","negotiateUrl","connection","signalR","HubConnectionBuilder","withUrl","configureLogging","LogLevel","Information","build","start","console","log","err","onclose","values","numCarsDict","lights","state_to_color","laneNames","lightId","directions","Object","entries","xs","direction","lightElem","document","getElementById","oppositeDirection","content","createTextNode","innerHTML","fontElem","createElement","appendChild","setAttribute","toLowerCase","laneDiv","laneId","numCars","laneElem","querySelector","s","main","simulate","simulateUrl","$","ajax","type","data","num_times","window","onload","btn","onclick"],"mappings":"AUAA,ACAA,ACAA;AFCA,ACAA,ACAA,ARDA;AMEA,AGFA,AFEA,ACAA,ARDA,AwBDA,IxBCIA,OAAO,GAAGC,MAAM,CAACC,OAAP,GAAiB,EAA/B,EAEA;AMAA,AGFA,AFEA,ACAA,ARCA;AMAA,AGFA,AFEA,ACAA,ARCA;AMAA,AGFA,AFEA,ACAA,ARCA;AcNA,AHAA,AbAA,AiBAA,ATMA,AGFA,AFEA;ASNA,AZGA,AUFA,AlBDA,AMMA,ALNA,AuBGA,APAA,ASAA,AXFA,AbAA,AiBAA,AMEA,AtBHA,AkBGA,ACEA,ANDA,APJA,AcKA,AhBFA,AGIA,AGFA,AFEA,APCA,IAAIC,gBAAJ;AgBPA,AFIA,AlBJA,AcEA,AbFA,ACEA,AiBAA,AhBFA,AMAA,ACOA,AGFA,AFEA,APCA,AwBPA,IxBOIC,EwBPEuD,YAAY,GAAG,CxBOrB,0BwBPA,EACA;ARAA,AZCA,AUEA,AZCA,AkBAA,APFA,ASDA,AXEA,AUFA,AJAA,ACEA,ANNA,APGA,AcGA,AhBFA,AGKA,AGFA,AFEA,IOHM,oCAAoC,GAAG,CAAC,CAAD,EAAI,IAAJ,EAAU,KAAV,EAAiB,KAAjB,EAAwB,IAAxB,CAA7C;AEFA,AFIA,AJJA,ACGA,AbHA,AiBAA,AhBCA,AaJA,ANSA,AGFA,AFEA,APCA,AwBNA,IbEY,EaFNC,GxBMGvD,MWJT,CaFgB,GAAG,IAAIwD,ExBMvB,GAA4B,EwBNE,CAACC,oBAAZ,GACdC,OADc,CACL,GAAEJ,YAAa,EADV,EAEf;ARFJ,AZAA,AFGA,AkBAA,APFA,ASDA,APAA,AMAA,AtBCA,AkBCA,ACCA,AbJA,AcIA,AhBHA,AGMA,AGFA,AFEA,APCI,AwBPe,CAGdK,GTHO,AhBCZ,ICMU,IAAI1D,EDNd,GCMU,AwBPS,CxBOC,AwBJEuD,GTHtB,ISG6B,CAACI,QAAR,CAAiBC,WAHpB,EAIdC,GxBGK,CAAN,CwBPe,EAAnB;AREA,AFEA,AJTA,AXMA,AaAA,APDA,ACOA,AGFA,AFEA,APCC,IcJD,ATJA,iBAAA,KSIA;AVFA,AUEA,AZAA,AQRA,AUQA,APAA,ASDA,AXDA,AUDA,AtBAA,AkBEA,ACRA,ANOA,APFA,AcLA,AhBAA,AGaA,AGFA,AFEA,AiBDA,CbLA,GCAA,ODAY,ACAZ,CbDA,GyBMeC,KAAf,EbLA,CaKuB,CbLA;AKCvB,AFCA,AHDI,AbAJ,AiBHA,AhBKI,AmBTJ,ANMA,APFA,AcJA,AhBAA,AGaA,AGFA,AFEA,APAA,AwBDI,CTRJ,GjBGY,E0BKJ,GxBCC7D,EeTG,AhBKR,CeDJ,AhBDA,AOHA,SNKI,GAAA,CAAwB,GgBL5B,AfSA,EeT6B,CfSG;AgBLhC,AZDA,AUII,AZZJ,AQkBA,AURA,APAA,ASCA,AXFI,AIHA,AMCJ,AtBKI,AkBHJ,ALFA,APFA,AJAA,AKUA,AGFA,AFEA,APAI,AwBDI,EbLJ,EKAJ,IhBMU,EwBDIqD,CVFV,ATPJ,COEA,AZQctD,CWNV,CAAA,GXMM,CAAU,CgBNpB,CQKwB,CAAC8D,IbLrB,CAAA,AaKU,EnBTd,AmBSQ,GnBTR,CAiBC,CSVG,CAAY,IHHZ,CAAA,GAAA,CAAA,CAAA,CGGA,EAAkC,AHHlC,MXMM,CAAN,KWNA;AKAJ,AFIQ,AZZR,AQkBA,ACTI,AIHA,AhBMA,AaCA,ANEJ,AGFA,AFEA,APAC,AwBDOC,ETRJ,ELYJ,AcJQA,KVFK,EFCT,AYCW,CAACC,GAAR,CAAY,EZDhB,CGPA,CDMI,ACNJ,CLYJ,AELI,EEDuB,WAAW,EUE9B,CTRJ,CAAA,CDMuC,KCNvC,CAAA,GDMuB,ACNvB,CAAA,CAAA,CDMuD,ECNvD,MAAA,GDMkE,CAAA,MAAX,CAAW,CAAE,IAAF,CAAX,CAAhC,GAAqD,oCAAxE;AEJR,AZTA,AUcK,AJKL,AURA,APXA,ASYA,AxBJA,AiBAI,AMRJ,AJAA,ALeQ,APNU,AJHlB,AKWA,AGFA,AFEA,AiBDK,C1BRL,COCkB,CmBId,CAGE,KZDO,EdPD,A0BQCC,CRPb,EQOM,EAAY,EZDV,CdPR,AOCkB,CAAA,CPDE,AcOK,EAAjB,EPNU,GAAd,UAAoB,MAApB,EAAkC;AWAtC,AZRA,AMkBA,AbcA,AgBhCA,AFUI,AbFA,AuBRJ,AJAA,ALeK,APNG,ACQR,AGFA,AFEA,APDC,AwBAOF,EbNJ,EaMIA,ORRR,AXCe,AmBOA,CdEf,AcFgBC,CbNZ,AXMS,CWNT,CaMI,CnBPU,AmBOEC,GAAZ,GnBPO,GMCX,ANDuB,CWD3B,ALEI,GKFJ,SLEI,CAAA,GAAA,ANDwC,CMCxC,ANDyC,CMCzC,GAAA,WNDI,CMCJ;AKDQ,AFMD,AJGX,AUPA,AECA,AXDI,AbFA,AiBDA,AMAJ,AtBKW,AMHN,AJXL,AKmBA,AGFA,AFEA,APDI,AwBAI/D,EVFG,AhBNP,AiBDA,AhBKO,CMLO,CgBAZ,AGSEA,ExBAA,GgBRI,ClBAR,CYSJ,AZTI,CCIO,CAAA,CyBIO,CAAC4D,GRRP,ClBAR,AiBDA,CjBCA,AiBDA,ASSc,CRRe,CjBItB,AyBIe,CzBJf,CeEA,CAAA,CENC,AKDgB,AtBKjB,AyBIO,C1BRd,A0BQI,CdCR,AZTI,CuBDmC,AtBKnC,EWKJ,AZTI,CY2DH,AZ3DG,CYSJ,AZTI,CgBMO,AJIP,CIJO,AOPX,CvBCI,CiBDA,CAAA,ChBKW,IDJX,KCIA,EgBLA,AhBKgC,CgBLhC,GAAA,CAAA,CAAA,EhBKA,CgBLA,ChBKgD,CAC/C,CADM,CeEA,GAAP,KCPA,KDOoC,YAApC,EAA8D;AELvD,AFMH,AhBNJ,AiBDA,AMCJ,AtBJI,AaWO,AXjBX,AKmBA,AGFA,AFEA,APDQ,AwBAH,EZDM,MZCC,CgBRD,AJOA,CAAA,CEDI,IdEI5D,CgBRR,AFMS,GENsB,AJO/B,CAAA,GIPA,CJOA,CZCC,EcFG,AFCX,CED4B,EdEE,OYDlB,GED4B,AdEpC,CcFqC,AFCzC,CZC0C,CYDvB,gBEDR,CAAP;AEYP,AFXI,AjBgBL,AuBlCA,AEAA,AXaI,ACMI,APNU,ACQlB,AGFA,AFEA,APDYL,AwBAX,EbPG,ANAc,CSGP,CjBkBX,EGdYA,GYDmB,IDN3B,ACM2B,CDN3B,CCM2B,Cfe/B,Eef+B,CAAA,APNb,CAAA,COMa,CZCH,CYDG,EDN3B,ANAc,ALOaK,CWP3B,ACM2B,EPN3B,GOMgC,IZCxB,GWPR,ANAoB,CMApB,CCMI,EDNJ,ACM2B,CDN3B,ANAA,CMAA,ACM2B,CPNM,EMAjC,ACM2B,EAAA,CAAA,MAAvB,EAAuB,CDN3B,CCM2B,EAAvB,EAAuC;AFEpC,AbaX,AuBjCA,AEAA,AXaI,AbFA,AiBDA,AMCJ,ATOa,APLL,ACQR,AGFA,AFEA,APDS,EUAE,AZTP,AiBDA,EMCJ,CrBOQ,GKLI,EPFR,AcOe,CdPf,AESW,EKPE,CAAC,IOKS,CFEhB,AZTP,AiBDA,AMCJ,AhBEuB,CKOZ,AZTP,AiBDA,AVGoB,COKG,EAAA,CAAA,EAAA,APLT,CPFd,AcOS,CdPT,CYSO,ALPsB,CKOtB,ALPM,CPFb,AOEQ,CPFR,CAAA,GAAA,AOEoC,CUHpC,CAAA,KjBCA,QYSO,ELP8C,CKOrD,ALPsD,EUHtD,CAAA,GAAA,CAAA,CAAA,ELU6B,CKV7B,IVGI,EAAmE,SKOvE,EAAsE,CKVtE;ACEO,AFMX,AJGQ,AbYR,ACrBI,AiBDA,AMAJ,AtBJkB,AaYN,APLA,ACQZ,AGFA,AFEA,APDYL,AwBFX,ERPU,AjBLO,IaYN,AZEAA,GcHZ,EJGe,CbYf,AE1BkB,AMOA,CNPA,CaYE,CAAC,CPLC,CWFX,CAAA,CJOC,CAAc,CbZR,AMOA,CAAU,ALOA,EDdU,AaY1B,CZEmBE,EgBTpB,CAAA,AjBL+B,GeW1C,EENW,GAAP,EjBLkC,EAApB,CCcN,KKPM,CAAN,CWFR,ANS6B,KAAlB,CAAwB,IAAI,CAAC,SAAL,CAAe,gBAAf,CAAxB,CAAP;AMRA,AFLR,AJcK,AbgDD,AcxDA,AUHJ,AtBIA,AaKS,APLA,ACQT,AGFA,AFEA,APDS,AwBATuD,CVdA,CHMI,CGNJ,AJYW,KMPC,CAAC,AjBEb,CyBOU,C3BgDN,A2BhDOY,CHXX,CVGI,CKDc,ALCd,IaQJ,CzBPA,AyBOmB,IRTX,AnByDJ,CACoB,CmB1DK,ALCzB,CAAA,KaQ2B,G3BgD3B,EAEoB,Qc1DpB,CAAA,CdwDA,EAGoB,Ac3DpB,CAAA,CAAA,GAAA,EdwDA,EAGkD,cc3DlD;AKAQ,AnByDY,AcxDpB,AbFA,AiBDA,AMDJ,AtBNA,AagBK,ANGL,AGFA,AFEA,APDK,AwBAG,CzBlBR,CDQI,AiBDA,ChBPJ,AaYW,AZAP,CAME,IwBAQJ,C3BgDU,CC1DpB,CkBCa,AlBDb,AuBFJ,ArBYa3D,CAAP,CwBAa,CxBAH,CwBAR,I3BgDgB,AC1DpB,AiBDA,CCEQ,AlBDR,AiBDA,ElB2DoB,CmBzDK,GKH7B,CLGY,EKHZ,GxB4DwB,CC1DpB,CAAA,GAAA,AiBDA,CjBCA,AiBDA,CjBCA,GAAA,SiBDA,CAAA,GjBCA,AiBDA,CAAA,CAAA,GAAA,aAAA;ALYO,AbgDa,AC1DpB,AiBDH,AMAG,AhBII,ACQR,AGFA,AFEA,APDQN,AwBAP,CTpBD,ASkBA,CdEW,CKpBC,CfoBJA,IKPM,CRuDU,OQvDF,GKOX,AbgDa,AQvDC,CKOd,AKpBkB,AfoBL,EHgDA,CGhDGE,CKPG,CAAC,IKOpB,CAAA,ALPc,CAAY,CRuDb,OGhDhB,SKP8C,CAAC,GKO5C,CKpBC,ELoBR,SLPqB,CKOS,ALP1B,IKOJ,CKpByB,CLoBc,EKpBd,EAAA,CAA7B;ACWY,ANUJ,AbgDgB,AczDpB,AIDJ,AMDoB,ATST,APLH,ACQR,AGFA,AFEA,APDK,AwBCLuD,EbVI,ACOO,EPLH,IKOI,CbgDY,AwB3DJ,ATST,CIRK,AJQL,AYGD,CAACjB,CnBRK,CMFZ,AUFgB,AhBIH,AmBQjB,CbVI,AaUU,CRXO,CnB0DG,AwB3DW,AhBI3B,GRuDgB,AelDb,CAAA,EIRC,CNUJ,CMVsB,CLC1B,ACOO,CfkDa,AczDpB,AaUJ,EZHI,AYGwB,CAAC8B,MAAD,EAASC,CHZjB,ATSH,GAAb,EAAqB,CDPrB,CAAA,GAAA,AaUwB,CbVxB,CAAA,GAAA,AaUiD,kBbVjD;AKAY,ApBdhB,AcwBQ,AbgDH,AczDD,AbFA,AuBAA,ATSI,APLA,ACQR,AGFA,AFEA,AiBAI,E1BZA,I0BYIC,EdDI,CEFmB,CdT3B,CAAA,AOIW,CmBQD,CRXO,AJQU,EAAA,AYGd,GZHc,CFEvB,AZXJ,AcS2B,APLvB,CWHQ,AlBDZ,CcS2B,EAAA,GAAA,GdT3B,CAAA,CcSgC,EdThC,CAAA,CAAA,GAAA,EcSI,EAAuB,EAAA,GdT3B,AcS2B,EAAA,CAAA,MAAvB,EAAuB,EAAA,EAAvB,EAAuC;AIPlC,ANUL,AZXJ,AcQS,APJR,ACQL,AGFA,AFEA,APFI,AwBCc,GnBfA,GLcV,EUCI,EEHO,AYGK,CAAC,OZHE,AYGH,EAAU,CdA1B,AEHmB,EAAA,CAAA,EAAA,CAAd,AYGW,CAAP;ARTR,AnByDT,AczDI,AIFJ,AMAoB,AfapB,AGFA,AFEA,APFQ,AwBAoC,EbTxC,EIFQ,IfWA,CHgDZ,AwB3DoB,CGW8B,CAAC,EbT/C,CAAA,CXSejE,CqBXC,ENApB,CMAsC,CAAlB,CxB2DpB,G2BhDkD,CbT9C,CAAA,CXSQ,KWTR,AXSgC,CWThC,GAAA,CAAA,CAAA,GAAA,CXSI,EAAwC,GWT5C;AKCC,ApBhBL,Ac0BQ,AbIR,AcdI,AbFA,AuBCA,ATOQ,APpBM,ACyBlB,AGFA,AFEA,APFYN,AwBDK,C3BMjB,CChBI,AOZc,CWOP,AnBqBX,A2BNI,C5BxBJ,EIyBYA,EUCA,EZZR,AcQY,CdRZ,EFdJ,KgBsBwB,CdRpB,AcQqB,APpBP,CPYd,AOZc,IOoBN,AZGkB,EYHE,CdR5B,AEW6BM,CFX7B,GAAA,CAAA,CAAA,CYYsB,EZZtB,EYYQ,CLxBM,ALuBN,GKvB4B,CKwBJ,AZZhC,GOZc,IKwByB,MAAP,KAAkB,WAAlB,IAAiC,IAAI,YAAY,MAA7E,EAAsF;Ad1B9F,Ac2BY,AZZR,AcQY,APpBE,ACyBlB,AGFA,AFEA,APFS,AwBDL,EnBtBc,GLqBV,CwBCAkE,EZFQ,GZGD,KYHS,CAAC,EPpBP,CAAA,AmBsBI,EZFN,CAAe,AYEN,GZFT,SPpBE,GAAkB,MAAM,CAAC,YAAP,CAAoB,iBAAiB,CAAC,mBAAtC,CAAlB;AWed,ApBlBJ,Ac4BY,AYjBZ,AXMI,AIJJ,AMGoB,ATQP,APNb,ACWA,AGFA,AFEA,APFYxE,AwBFc,CTZ1B,CCKI,ALDA,IXUQA,CwBFiB,CRPzB,CAAA,AKFgB,AhBEpB,CTlBA,Ac4BkB,CKfN,CSYa,CbRrB,CAAA,EfjBJ,EAAA,Ec4B4B,GMVxB,ANU2B,AWZX,CLEZ,AhBSsB,CWV1B,AIJJ,CJII,AUDiD,AhBErD,CKUmC,AKfT,AfcOG,MWV7B,CAAA,GDW2B,ACX3B,CDW0C,ACX1C,CKCI,ALDJ,CKCI,ENUuB,ACX3B,CDWQ,GVDA,GgBTR,ALDA,EKCI,EKF4D,IAAhD,ELEhB,EAAU;ApBlBiB,Ac6BnB,AYjBZ,AXMC,AbFG,AiBFA,AMqGH,AT1FQ,APxBT,AC6BA,AGFA,AFEA,APFS,AwBH2B,CbtBpC,ANFA,CTD+B,AEgB3B,CabQ,ANFZ,CiBWM,GEagC,ERPlC,CNWc,AZbd,CFhB2B,AEgB3B,CFhB2B,EeGR,KbanB,CAAA,CkBEA,ApBlB2B,EAAA,A0BYN,CZiBO,EYjBJ,CZiBO,Ed7BJ,CAAA,AEgB3B,CAAA,GAAA,CAAA,CAAA,CYayC,CAAC,CZb1C,EabQ,ID0BuB,CAAmB,GZblD,GabmB,GAAA,EAAA,CAAvB,yBD0BwE,mBAArC,CAAvB;AMVJ,ApBXJ,ACkEJ,AyB7DI,AxBIA,AiBFA,AMGA,ATQC,ATvBL,AG4BA,AGFA,AFEA,APFK,AwBJoB,EFZrB,APEA,CHKO,AZGP,AwBEA,CrBtBJ,AH0BM,GsBhBG,EAAE,EtBgBEE,CAAP,CgBVS,ChBUC,EedZ,CCII,ADJJ,AZZJ,UmBUoB,IPEhB,COHwB,APGxB,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;ACKC,ANUO,AYhBR,APEA,AZbJ,AG6BA,AGFA,AFEA,APFQL,AwBJJ,EFZA,EtBgBIA,CgBZM,CQQNyE,CFZC,EAAE,CZgBK,KcJC,GAAG,IxBIM,EUAI,CVADtE,EsBhBT,EZgBe,CAAC,CAAxB,CYlBgB,CZkBW,WVA/B;AUCQ,AYhBZ,AxBGA,AcUO,ATzBX,AG8BA,AGFA,AFEA,APFK,AwBLgB,EFXjB,AxBGA,AcUO,IUbH,EAAE,CVaC,CdVP,AcUO,ATzBX,CLeI,GYakB,CcLU,CrBvBhC,EO4B0B,AP5B1B,CLeI,AcUO,CIVG,AlBAV,AcUO,GFGW,CAAU,EYhBb,AxBGf,CAAA,CcUO,CYFS,C1BRhB,CAAA,AcUA,CdVA,GAAA,EwBNwB,IxBMxB,EcUA,KFGkB,CAAN;AACH,AYhBT,AxBGH,AiBFG,AHYI,AT1B2B,AG+BnC,AGFA,AFEA,APFC,AwBN+C,C1BtBhD,AESC,CsBGG,APCA,AZd+B,CLCvB,CESZ,GUa8F,CAQlF,CELmB,EdzBX,AKDe,CAAA,CmBapB,AVagB,EUbd,AVac,AYH4B,CTTvD,CAAA,CHY2B,CAAA,EAAA,EAAA,ET1BI,CS0BJ,CT1BI,EqBuBf,ETThB,AHYgC,CGZhC,CODsB,AnBbS,CAAA,CLCvB,KiBaR,AHYI,CGZJ,CHY2B,CdzBX,CwBQQ,APKxB,AHY2B,CGZ3B,CjBbgB,AiBahB,CHY2B,CdzBX,CAApB,AiBaI,AHY2B,CAAA,MAAvB,CGZJ,CHY2B,EAAA,EAAvB,EAAuC;AIXjC,AZZd,AM6BY,Ab2CZ,AyB7DI,APCH,AHWY,ANMb,AGFA,AFEA,AiBRoB,CTdpB,COII,CNCA,ADLQ,ClBiEZ,EyB7DQ,EAAE,EVYS,IfiDnB,E2BnDgC,CTdN,CHgBC,GAAA,EAAA,CAAA,EUZR,AVYQ,CAAd,KYHO,CFdQ,cPChB,cAAc,GAAA,EAAA,CAA1B;ACSI,AZfJ,APuEA,AyB5DI,AnBZA,AG8BJ,AGFA,AFEA,APHA,AwBNkD,ERL9C,AMJA,ElBXJ,IYeI,CAAA,AMJO,AtBeFI,EsBfI,AnBZT,KqBqB0D,GxBM9D,CAAoBC,CI1BpB,EYeI,AhBWJ,CgBXQ,AbhBJ,CAAmB,AH2BE,IsBfH,EnBZlB,EAAkC,GmBMV,GNUpB,CAAA,SAAJ,EAAI,SAAJ,EAAW;AZff,APuEA,AyB3DI,AVWQ,ATxBR,AG+BJ,AGFA,AFEA,APHI,AwBRgB,EFPhB,CEOA,GxBQIT,CsBfC,CnBbL,CagBA,AMHO,CVWK,EfgDhB,CMxEI,GACI,ESuBgB,CAAC,EIRrB,CbfI,AH2BgB,CG3BhB,ImBYY,AVWR,ATvBJ,AH2BqBK,CG3BrB,CSuB2B,GUlBP,AnBLpB,KAAO,AH2BX,EAAqC,EG5BrC;AaiBI,AZhBR,ARMI,AcuBQ,Ab0CZ,AyB1DI,ADGO,ATQK,ANOhB,AGFA,AFEA,APHQ,EsBfJ,ADGO,MTQK,ERxBhB,AM6BkB,AYhBN,C1BPR,ACiEJ,CyB1Dc,CNGC,GZhBf,AQwBwB,CSRb,ATQc,CIRL,AZhBpB,AiBgBW,EzBVP,CAAY,ACiEhB,Ga1CgC,Ab0ChC,CAmFC,AelIe,EIRR,ANa2B,AWbxB,CAAA,ECHY,G1BPnB,EAAkC,G0BDV,GZwBqB,AWbtC,GXayC,AWbhD,CzBVA,AcuBQ,EdvB4C,OyBU/B,KAArB,EAAoC,MAApC,EAAmD;ALClD,AZjBkC,AM8B3B,AYhBR,ADGI,ATQK,ATxBL,AG+BR,AGFA,AFEA,APHQ,AwBPJ,EpBtBmC,AkBcnC,EnBbI,CacO,CNeH,AYhBJ,CEQC,CFRC,CnBbE,CAAC,CCD0B,AJ6BxBA,CI7BwB,CoBsBxB,CAACsE,ErBrBR,CO6Be,EP7BD,CO6BI,CVDD,AwBPV,CxBOWlE,CwBPDmE,ErBrBjB,AH4BiB,CUCO,AYhBb,CZgBc,AVDF,CAAN,CI7Bc,AJ6B/B,EI7B+B,EoBsBxB,CAAX,GpBtBmC,CAAA,AoBsBCC,CdQd,CAAoB,IcRA,CdQpB,AcRqBC,CdQK,IAA1B,EAAgC,AcRlB,CAAeN,MAAf,CAApC,EdQgE,AcRL,CdQM,KAAX,CAAiB,CAAjB,EAAoB,cAApB,CAAhC,CAAd;AN3BR,AM4BQ,AbuDD,AyBjFiB,ADapB,ATQC,ANOT,AGFA,AFEA,APHK,AwBPG,CFlBR,CzBiFW,CG5Dc,CAKrB,EUAQ,EWbA,CGKC,G3B+DF,CAAA,A2B/DM5C,CAAC,CHLC,EGKE,CAAb,CdQiB,CMhBV,AKGH,AGKYA,CAAC,CdQI,AbuDlB,CAAA,C2B/DiBmD,CHLC,CxBoElB,A2B/DmB,CAAC7D,E3B+D3B,GavDmC,CAAC,AWbhC,AGKA,EHL+B,AGKAU,CAAC,EAAhC,C3B+DO,C2B/D4B,E3B+DvC,CavDyB,CbuDD,EavDyB,KbuDjD,EAA6C,OavDrB,GAA2C,UAAU,CAAC,KAAX,CAAiB,cAAjB,EAAiC,MAA5E,GAAqF,IAArG;AdzBR,Ac0BK,AbuDD,AwBpEI,ATQP,ATzBA,AGgCL,AGFA,AFEA,AiBVY,GZHD,EFFH,GdbJ,E4BkBYoD,CdQD,AbuDA,CwBpEG,CzBbd,GAAA,ACiFgB,AwBpEE,GGKG,C5BlBrB,ACiFW,CAAS,AwBpEN,CAAU,AGKAJ,O3B+DJ,CAAA,EAAA,A2B/Dc,CAAChD,C3BgExB,A2BhEuB,CAA1B,M3B+DY,EACF,oCwBrEJ,CAAN;ALJG,ANkBH,AbwDA,AyBxEZ,ADGS,AlBhBL,AG+BJ,AGFA,AFEA,AiBVY,GRVR,GnB0EQ,GyBxEZ,CZgBkB,AcRFqD,E3BgEE,EAAE,IaxDM,CbuDJ,A2B/DG,EdQY,CYhBrC,AEQ4BC,CFRL,EZgBX,EYhBZ,EAAmC,CEQC,CAACC,cAAT,CAAyB,SAAQH,SAAU,IAAGL,OAAQ,EAAtD,CAAhB;ARPZ,AZdI,ARGI,Ac2BI,AbwDA,AyBxER,AVWO,ANOX,AGFA,AFEA,APJI,AwBNQ,EZGD,If6DC,AG1DJ,CAAC3E,CJzBK,CoBWd,AnBwEe,Ae7DJ,CFKO,AELP,AYHKoF,CpBtBZ,APsFW,MDnFQ,EgBsBZ,ChBtBe,AgBsBf,GZGc,CgBdzB,ANgBgC,GAAG,AcRF,CpBtB7B,AJ4B0BlF,CI5BP,AQyBZ,ChBtBe,A4BmBU0E,C5BnBC,CgBsBjC,GRzBA,AM8BuC,CAAC,CN9BN,GRG9B,A4BmBsC,CAAC,CZG1B,CFKc,CAAiB,AVF3C,CwBN0ChD,CAAL,CAAlC,CxBMsC,CAAC5B,CYH/C,EAA+C,aZG3C,KAAgEK,UAApE,CUEkE,CVFc,cUEjD,CAAvB;AMpCZ,AZMI,ARII,ACgFc,AyBrElB,ADGI,ATQA,ANOR,AGFA,AFEA,APJQL,AwBNI,CR7BZ,EAAA,CpBUQ,AIyBAA,CHsDgB,CAAT,CAAP,COnFJ,AiBkBQ,CzBdJ,AyBcK,ATQA,CYHGqF,E5BnBR,CQJJ,CiBkBI,EjBjBA,AiBiBY,CGKG,C5BnBf,AgBsBA,ChBtBA,AgBsBe,CZGC,AwBNEH,EpBtBlB,CAAA,ARGA,AgBsBA,AZGmB7E,CJzBnB,AgBsBoB,GRzBpB,CAAA,ARGA,A4BmB0B,CAACiF,C5BnBrB,EQHN,AQyBA,CZGA,II5BO,IADX,CRII,C4BmBkB,CAAyB,G5BnBxB,A4BmB0BN,I5BnB7C,K4BmBuD,OAAMI,iBAAkB,OAAMX,cAAc,CAACH,MAAM,CAACK,OAAD,CAAP,CAAkB,EAAnG,CAAd;A5BlBJ,Ac0BI,AbyDP,AyBxED,ADGQ,ATQJ,AT1BG,AGiCX,AGFA,AFEA,APJQ,AwBNIM,ErBvBD,CNiFA,CD7EH,E4BmBIA,G5BnBA,CAAC,Ac0BG,CEJD,AZGA5E,EqBXI,EAAP,ATQO,AT1BR,AqBuBU,CrBvBV,AqBuBWkF,I5BnBd,CIyBiB,CAAC9E,CJzBA,Cc0BI,CP9BnB,AH6Bc,AwBNb,CrBvBD,CH6BoB,CAAN,AwBNU,CdOA,AVD3B,CUC4B,AP9BzB,AqBuBC,CdOA,Ed1BJ,Ac0B+B,AP9BnC,CPCoD,CAKhD,MgBoBO,CAAwB,CT1BvB,GS0BD,EAA8B,ET1BzC,EAAgC,IS0BrB,CAAP;ARxBA,ARKA,AcwBQ,AYfZ,ADGK,ATQJ,AT3BD,AGkCJ,AGFA,AFEA,APJK,AwBNO,GZAD,GURD,ElBdE,ADFR,EqBwBY+E,GFRC,AnBhBb,CO+BkB,CN7BH,CkBcC,AnBhBhB,EO+BsB,AcPF,EpBtBZ,ADFR,CAAgC,AqBwBTN,CrBvBnB,CO8Bc,CAAU,CN7BH,IoBsBM,CAACO,KFRG,ClBd3B,AkBc4B,IlBdI,AkBcA,CAAC,EEQlB,CAAuB,IdO5B,CAAN,CcPW,CAAf,CFR4B,EAAD,CAAnC,ClBdiD,MAA7C,EAAqD;AACjD,AM6BC,AbuEF,ASpEX,AGFA,AFEA,AiBVYD,E3B8ED,IOpGC,AoBsBAA,CdEG,CAOH,GN/BI,CAAC,APoGN,CAAA,C2B9ES,CAACE,OpBtBT,APoGD,CAAA,EOpGmB,CoBsBlB,C3B8ED,A2B9EsBL,EpBtBC,CPoG9B,I2B9EQ,M3B8EI,GAAZ,EAAyB,OAAzB,EAA8C,OOpGpB,CAAoB,MAApB,CAAlB;AACH,ARID,Ac2BI,AbqEJ,AyBvFJ,ADII,ATOR,ANQA,AGFA,AFEA,APLI,AwBLQG,I5BlBJ,CQNA,CkBeA,AtBcA,AwBLIA,EHLA,CzBbA,AgBoBZ,ChBpBa,CQJE,APoGA,EyBvFA,CDIG,AGKE,CpBtBD,AoBsBEG,C3B8ED,Ae5EpB,GhBpBQ,AyBae,CxBmFR,AyBvFP,CzBuFgB,COpGE,ARID,CyBajB,ECJmB,ADIE,EGKjB,CAAsB,C3B8EV,CAAA,CDhGhB,CCgGgB,EACT,C2B/EH,CpBtBO,AkBaf,CESuClB,CFTH,GlBbK,APoGrB,EACF,Q2B/EmC,CpBtB1C,AoBsB2CH,EpBtBA,IoBsBM,CAACK,OAAD,CAAP,CAAd,CAAgCiB,WAAhC,EAA/B;ApBrBA,APqGA,AyBxFJ,ADII,AT/BZ,ATWQ,AGmCR,AGFA,AFEA,APLQ,AwBLIX,CZpCZ,EAAA,GRcY,APqGA,AwBpFA,AGKAA,ErBzBA,GCGI,AkBaD,ClBbE,APqGC,AwBpFA,ExBoFE,CwBpFC,AlBpBF,AqByBE,CrBzBD,AqByBES,EFTd,EzBuFc,EOpGV,GAAkB,EDHlB,AqByBA,CAAsBF,CpBtBA,EDHC,IkBoBH,CGKpB,ErBzB8B,CAAC,IkBoB/B,OlBpBuB,CAAoB,MCGzB,CAAkB,ADHxC,EAAwD,ICGlC,CAAlB;AACH,ARGJ,ACkGO,AyBxFP,ADII,AlBpBG,AGmCZ,AGFA,AFEA,APLQ,AwBLC,GFXL,ElBbW,AiBOwC,CxBgG3C,AwBlFJ,GxBkFO,AyBxFJ,ElBbI,APqGA,AG1EAxF,EG9BI,OAAO,CAAC,MAAR,AH8BY,CG9BG,AH8BFS,GAAD,CG9BO,CH8BD,CAAN,CAAvB,eG9B0B,EAAf,CAAP;ACIA,AM6BA,AbqEU,AyBrFd,AnBhBC,AGmCT,AGFA,AFEA,APLK,AwBLA,GxBED,AwBpBiD,CxBuB/C,AwBJF,C3B0EoB,CAAT,CAAP,GapEU,AYhBJ,CtBcFH,CI3BM,AJ2BZ,EsBdY,AtBcJ,EI3BQ,GkBaR,CAAU,ClBbN,CAAU,EM6BI,GAAG,cAAc,GAAG,AYhBN,CZgBlC,GYhBE,CAAN,ElBbU,CAAN;AACH,ARET,Ac2BY,AbwEP,AyBxFA,AhBmBL,AGFA,AFEA,APLQ,AwBJJ,G3BwEO,GalEC,EVFA,CJzBZ,Qc2BuB,Cd3BvB,Ec2B0B,QAAQ,CAAC,SAAT,CAAmB,CAAnB,EAAsB,cAAtB,CAAd;AdjDZ,AckDY,AYhBX,ADIO,AlBpBA,AGmCR,AGFA,AFEA,APLY,AwBHR,C5B7CJ,CAA+B,IckDnB,CdlDZ,CAAA,AyBsCc,AlBpBF,CAAC,OkBoBS,AlBpBF,CAAC,EOgCI,AWZA,GXYI,CPhCrB,EAAqB,KOgCQ,CAAC,MAAT,GAAkB,cAAnB,EWZe,CXYsB,IWZxC,CAAwB,GXYwB,CAAC,CWZjD,CAAjB,OXYyD,CAAmB,cAAnB,CAArC,GAA0E,IAA1F;AACH,AbsFE,AyBrGX,AnBjBY,AGmCZ,AGFA,AFEA,APLY,AwBHR,E3B2FO,GapHgC,CAgCnC,MboFG,CAAA,AMtHQ,AH8BAN,OG9BO,CAAC,CNsHhB,CAAA,IMtHQ,CAAe,CNsHvB,AGxFwB,CAACU,EHwFhC,AMtHkC,EH8BnB,CAAsB,EG9BP,CAAU,CH8BzB,EAA4BD,CHwF7B,EGxFC,CHwFf,CGxFgD,CHwFrB,AGxFZ,CAAP,MHwFR,EAAgD,EMtHlB,CAAf,CAAP;ACEP,APqHG,AwBlGA,AlBpBC,AGmCT,AGFA,AFEA,APLS,AwBFL,KxBDI,CAGE,EqBVI,GxBkGC,EGxFCH,CAAN,EHwFU,AGxFF,GqBVO,CxBkGV,CAAS,CwBlGI,EAApB,KxBkGgB,CAAA,EAAA,EACT,OADS,EACF;AOpHlB,APqHQ,ASpFZ,AGFA,AFEA,APLY,AwBFR,M3B2FQ,MAAM,EAAE,QADE;ADnHtB,Ac8BQ,AbuFI,AyBxGZ,ADIQ,AlBpBA,AGoCR,AGFA,AFEA,APLY,AwBFR,IFbJ,EzBwGY,EavFE,APjCF,CNwHG,AwBpGe,AlBpBjB,ENwHE,EwBpGe,ArBWXN,EqBXW,CXaR,APjCF,CAAC,CkBoBS,CXaL,AWbK,ClBpBtB,CkBoBsB,ClBpBJ,EmBgB1B,KtBemC,CAACU,CqBXN,GAAA,ArBWX,CAAsB,IAAtB,EAA4BD,CqBXvC,EAAsB,ArBWX,EqBXW,ArBWsB,CAAjC,CAAP,CqBXkB,OXaa,GWbb,CAAA,CXaL,CAAwB,IWbzC,EAAsB,EAAA,EAAtB,CXaiB,CAAjB,AWbgC;AzBhBxC,ACkHsB,AyBtGtB,ADIa,AlBnBD,AGoCZ,AGFA,AFEA,APLS,AwBFL,I5B1BJ,CCiHwB,CAAT,CAAP,GwBjGW,GlBnBA,GPGnB,CyBgB0B,GAAA,AlBnBA,CAAC,MAAR,CAAe,EkBmBR,CAAA,ClBnBY,CkBmBZ,CAAb,GlBnBqB,CAAU,iBAAV,CAAf,CAAP;ACED,ARCX,Ac8BQ,AbwFH,AyB1GL,ADKY,AlBnBH,AGoCT,AGFA,AFEA,APLK,EI9BM,CPiHA,KalFG,EWbI,ECLlB,IZkBsB,GN/BX,AM+Bc,CN/Bd,GM+BkB,AWbE,CXaD,EWbI,GjBlBvB,AM+Bc,CN/Bd,AM+ByB,AWbE,CAAC,GjBlB5B,EiBkBuB,CjBlB9B,AiBkByC,CXaD,CAAC,CAAD,CAAnB,CAAjB,EWb0B,CAAtB,EjBlBI,OAAZ,EAAgC;AAC5B,ARAR,AC+HI,AyBnHJ,AhBuBA,AGFA,AFEA,APHC,UJhCD,C0BYA,K1BZA,EAAA,a0BYA,GAAA,CA4KC;AlBvLO,ARD0B,Ac+B1B,AWbI,AlBlBJ,AGoCR,AGFA,AFEA,AiBRI,E5B5B8B,I4B4B1BoF,EpB3BI,AM8BA,EWbI,CzBlBkB,AOAnB,CPAmB,C4B4BnB,EpB3BI,ADDA,CCCC,AM8BA,AcHFX,CdGG,AWbE,IXaf,CP/BO,CO+BY,AP/Bc,CPAP,A4B4BR,CAACC,C5B5BO,CQCtB,GiBiBwB,CjBjBD,AiBiBE,CzBlBH,CAAA,AOAQ,EkBkB1B,GjBjB0B,CAAC,AoB2BzB,CHV4B,AlBlBL,AqB4BC,ErB5BS,KqB4BjC,CHVN,AlBlB6B,AqB4BrC,EpB3B+B,AiBiBqB,AlBlBC,CCCF,OAA/C,EAAwD;AACpD,ARGR,Ac2BQ,AYsBD,ADnCK,AlBlBJ,AGoCZ,AGFA,AFEA,APJA,EsBqBW,OtBrBFxE,CGhCS,EO+BA,CN9BC,ADDE,CkBkBC,EXaA,AP/BE,EkBkBE,EjBjBA,ADDE,CCCD,AM8BT,CAAU,AYsBjB,CAAA,ADnCW,CAAU,ArBchC,CAAyBC,EI/BN,CAAe,GJ+BlC,CI/BsC,AkBoD3B,CAAA,AtBrBsB,CGhCT,EAAZ,MkBkBU,CAAN,MCmCL,ClBpDuB,EAAf,AkBoDf,ClBpDQ,SkBoDgB,OAAxB,CZtBc,CAAN,AYsBoD;AlBnDvD,AM8BA,AYsBD,ADnCK,AlBjBD,AGmCZ,AGFA,AFEA,APJI,AwBLA,MrB1BQ,AH+BJX,CwBLC,ErB1BM,CAAC,GqB0BD,CrB1BH,AqB0BI6F,CF0BJ,AnBpDS,KqB0BN,ErB1Ba,AqB0BJC,CrB1BK,CH+BH,CsBqBlB,CAAe,GnBpDX,AH+BmBxF,AwBLhB,CAAX,CrB1BkC,EmBoD9B,CE1B4BsE,CF0BJ,GnBpDa,CAAC,CqB0BJ,CxBKtC,AwBLuCC,CrB1B/B,CH+BiC,CsBqBrC,AnBpD4C,IAAxC,AqB0BwB,CAAeP,WAAf,CAAhC,EAA4D;ArBzBpD,AGmCZ,AGFA,AFEA,APJQ,AwBLAyB,IAAAA,ErB1BI,GAAG,CAAC,EqB0BA,GAAGH,OAAO,CAACI,ErB1Bf,GAAsB,OAAO,CAAC,AqB0BvB,CAAuB,IAAGH,MAAO,EAAjC,CAAX,CrB1B0B,KAA4B,SAA5B,GAAwC,IAAxC,GAA+C,OAAO,CAAC,eAA7E;ACCJ,AM6BA,AbkGJ,AyB3EI,ADpCI,AlBhBA,AGmCZ,AGFA,AFEA,APJQ,AwBLAE,IdGA,AcHAA,ErB1BI,ECAA,AkBoDA,ClBpDC,ADAE,CAAC,CH+BDzF,CwBLC,CAAC2F,CHVG,AGUZ,EpB1BY,AkBoDA,ClBpDC,AkBoDA,EZvBE,GAAG,CN7BlB,AJ+BmB,CsBqBP,AtBrBQtF,CI/BC,AkBoDrB,CnBpDI,CmBoDmB,ADpCE,AlBhBA,CkBgBC,EXa1B,AVEmB,CUxCgB,AVwCnC,CUAA,AWfI,alBhBA,EAAyC,gBAAzC,EAL6C,CAM7C;ACAA,AM+BJ,AYqBI,ADpCI,AfmBhB,AGFA,AFEA,APJK,GAJ4B,CAK7B,OsBoBa,ElBpDE,AiBgBE,ICoCT,GlBpDc,AkBoDA,ClBpDC,MAAR,AkBoDP,ClBpDsB,IAAI,KAAJ,CAAU,CiBgBX,UAAjB,SjBhBkB,CAAf,CAAP;AACH,AkBoDA,ADpCW,AlBhBR,AGmCZ,AGFA,AFEA,AiBVQ,KFyBA,CnBlDI,EqByBAoF,CrBzBG,CAAC,CmBoDD,IAAI,ADpCM,CGSL,IAAI,EF2BE,EE3BlB,ErBzBI,AqByBiB,CrBzBI,EmBoDd,KAAmB,ADpClB,CAAyB,MlBhBjC,CmBoDG,CnBpDkC,CmBoDD,IDpC5B,qBlBhBR;APER,Ac6BI,Ab+FG,AyBzEC,ADpCQ,AlBfR,AGkCZ,AGFA,AFEA,AiBVYA,E3BoGD,I2BpGCA,IF2BM,AnBnDA,CPAd,Ac6BW,CAAC,Ab+FL,CAAA,C2BpGS,GrBxBK,AqBwBFd,CF2BG,EnBnDE,CmBmDC,CzByElB,CD5HP,AC4HO,CD5HK,Cc6BD,AcLgB,CAACO,CdKD,AP7BI,CAAC,MmBmDM,CAAC,AnBnD/B,CPAR,EAAwD,AC4HjD,C2BpGY,CAAuB,C3BoG1C,Ca/FW,AYsB2B,CZtBlC,AYsBI,CE3BW,CAAX,M3BoGe,GAAvB,EAAkC;AO7H9B,AM+BH,Ab+FG,AyBzEI,AhBjBZ,AGFA,AFEA,APLI,AwBLQO,GdtCD,GV2CH,AwBLIA,CxBKH/F,CI/BG,CAAC,EP8HE,AyBzEE,EzByET,C2BpGY,CAAC0F,CpB1BD,CAAC,AkBqDT,GlBrDJ,AkBqDkB,ElBrDA,EkBqDI,CtBtBH,EwBLf,CAAsB,ExBKFvF,EwBLpB,EAA4B0F,MAA5B,IF2Bc,CAAkB,ItBtBnC,IsBsBiB,AtBtB6B,CsBsB3C,AtBtB4C7F,kBAAhD,KAAuEM,YAA3E,EAAyF;AI9BjF,AP8HP,AyBzEI,ADrCO,AlBfJ,AGmCZ,AGFA,AFEA,APLQN,AwBLI4F,G3BkGD,CG7FH5F,CsBmBO,CExBH4F,IrBzBI,CmBoDD,ElBrDI,AiBgBE,AGUF,CAACH,GrBzBR,EAAa,CCDC,CAAC,CJ+BD,GAAGnF,AwBLjB,CAAoByF,CpB1Bb,CAAe,IAAI,EoB0B1B,GpB1BsB,AJ+B1B,CI/BoC,CiBgBX,UAAjB,MjBhBkB,CAAf,CAAP;AACH,ARDO,Ac+BhB,AYuBY,ADrCQ,AlBfJ,AGmChB,AGFA,AFEA,APLQ,AwBLC,KAJD,G5BvBQ,AOEA,CO6BhB,EYuBiB,AtBtBFzF,AwBJH,GrB1BU,CkBeG,AlBfF,EmBoDX,EnBpDI,CPFA,A0BsDU,AnBpDE,GH8BD,CsBsBG,AtBtBFK,CJhCZ,Cc+BhB,CP7BgB,EACK,CPHL,AIgCW,CJhCX,AIgCR,EJhCQ,CyBiBI,CAAyB,ClBf7B,CACa,OmBmDH,CAAkB,EnBnDd,CkBcV,ICqCM,CAAd,AnBnDiB,EAAO;APHpB,AcnBhB,AbkJA,AyBxES,ADrCW,AlBdI,AGkCxB,AGFA,AFEA,APLK,AwBJOoF,CdhDZ,EAAA,GdmBgB,A4B6BJA,G3BkGZ,CM3HwB,GAAG,CAAC,AqByBR,CAACT,G5B7BL,CC+HhB,ED/HgB,G4B6BJ,GAAsB,EAAtB,CrBzBY,CAAqB,MAArB,EAA6B,GPJrC,IOI4C,CAAC,MAAD,CAApC;ACDhB,ARHoD,AC4C5D,AMvCqB,AGkCrB,AGFA,AFEA,AiBTS,C3BcT,EAAA,MM1CgB,ECCD,KAAK,UAAL,CAAgB,IAAhB,CAAqB,OAArB,CAAP;AACH,AkBqDG,ADtCQ,AlBbH,AGkCb,AGFA,AFEA,APNI,GI5CO,GJ4CH,KsBuBO,EDtCM,ECsCb,wBDtCyB,UAAjB;AzBnBZ,A0B0DC,ADtCe,AfqBpB,AGFA,AFEA,APNQ,AwBJAS,GFcG,CEdHA,I5B/BJ,I4B+BY,C5B/BZ,A4B+BaL,EHXQ,CzBpBrB,IAAA,K4B+BI,CAAsB,OAAtB,CHXY,CAAyB,AGWN,WAA/B,EHXY;AjBdT,AiBeS,AlBbR,AGkCZ,AGFA,AFEA,APNQ,AwBJAK,EpB1BG,EoB0BHA,MrBxBQ,CH4BD/F,CwBJC,CAAC0F,IrBxBM,CAAC,CCFb,CAAA,KoB0BH,CAAsB,GpB1BnB,AJ8BsB,CI9BtB,ADEC,AH4BsB/E,EG5BI,CqBwB9B,GxBIyB,CAAzB,QI9BG,GAAP,UAAuB,GAAvB,EAAkC;AAC9B,ARNA,A0BmFG,AnB3EK,AGkChB,AGFA,AFEA,APNK,AwBJGoF,EFmDG,CtBlDP,CAGE,AwBJEA,I5BhCM,AOQE,GCFD,ADEI,AH4BN1F,CG5BO,AH4Bd,AwBJU,CAACoF,CxBIF,EI9BK,CRNG,GAAG,E0BmFf,CAAA,CnB3EK,AqBwBR,CAAqBR,CpB1Bd,CAAgB,ADEI,GPRT,CAAW,C0BmF1B,CAAA,AEnD0B,CrBxBK,AqBwBJI,CrBxBK,KPRnC,A0BmFG,ElB7EI,CAAgC,AkB6E3C,GlB7EW,CAAP,ADEQ,CqBwBa,CAAyB,GAAEZ,CFmDrC,GAAf,EAA4B,GEnDiC,CAACoB,MAAD,CAAS,KAAIC,MFmD1E,CEnDkF,CFmDa,IEnDtE,CAArB;ApBzBH,ARNG,A0BmFA,AD/DQ,AlBZH,AGkCb,AGFA,AFEA,APNQ,AwBJH,GpB5BM,CRJH,IIoCI,CJpCJ,GAAA,CyBoBa,EC+DT,G1BnFJ,CAAA,IAAA,CAAA,C0BmFA,CAAe,E1BnFf,C0BmFA,C1BnFM,C0BmFc,KAApB,GD/DyB,GzBpBzB,CyBoBQ,IzBpBW,IAAnB,CAFoD,CAIpD;AACA,AyBkBY,AfsBpB,AGFA,AFEA,APNY,AwBJX,CA9CD;ApBoBA,AkB6EQ,AD9DY,AlBZR,AGkCZ,AGFA,AFEA,APNY,SI/BZ,CDGgB,GH4BG9F,EsB8CP,EnB1EW,CAAC,OmB0EhB,ClB7ER,AkB6EuB,GAAf,AnB1EI,EmB0EgB,AnB1ES,AH4BA,CAACS,IsB8C9B,AtB9CW,CAAwB,IAAxB,EAA8BE,MAA9B,CAAP;AInEZ,ARiCQ,AOOQ,AGkChB,AGFA,AFEA,APNS,AwBJT,CpBhEA,CAAuC,ERiC/B,CIgCA,CAGE,EG5BM,CPPJ,CAAC,GImCIN,CAAP,CG5Ba,AqBwBR6F,CrBxBS,AH4BL,GJnCX,A4B+BR,G5B/ByB,A4B+BH,EpBhEtB,CAAA,EDwCgB,CAAoB,GPP5B,IOOQ,GAA8B,YAAA;AmB2EtC,AD/DQ,AlBXI,AGkCpB,AGFA,ATJY,AwBJR,SFkDS,CnB1EO,EmB0EZ,CD/Da,AlBXE,CAAC,CmB0EL,GAAX,CAJ2F,AnBtE/E,CmB4EZ,mBDjEyB,KAAjB;AzBlBX,A0BoFG,ADjEY,AlBXA,AGkCpB,AGFA,ATJY,AwBJRlC,EAAAA,KAAK,GrBxBW,MAAM,CAAC,IAAI,kBAAJ,EAAD,CAAN;AkBYA,AlBXH,AGkCjB,AGFA,ATJY,AwBHX,SrB5Be,IH+BGhE,kBAAkB,CAACS,IAAnB,CAAwB,IAAxB,EAA8BE,MAA9B,CAAP;AJpCZ,A0BoFQ,AnB3EK,AGkCb,AGFA,ATJS,QsB+CG,C1BpFZ,M0BoFmB,M1BpFnB,gB0BoFY,KAAkC,QAAtC,EAAgD;A1BrGxD,A0BsGY,ADjEI,AfwBhB,AGFA,ATJK,AwBHL,C5BpDA,CAAkC,KAAlC,CAAA,C4BoDSwF,EFkDQ,MElDjB,GAAmB,YFkDP,GAA0B,QAAA,CAAA,EAAA,EAAQ,KAAK,qBAAb,EAAuC,sBAAvC,CAA1B;AACH,ADjEW,AlBVR,AGkCZ,AGFA,ATDC,AwBNG,KFgDI,CEhDAC,IrBzBQ,CmB2ED,MnB3EQ,AqByBJ,CrBzBK,EqByBF,KrBzBV,EAAqB,6BqByB7B,CADe,CAEf;AFkDQ,ADjEQ,AlBVJ,AGkChB,AGFA,QNhCgB,EkBUI,CCiEH,AnB3EE,CAAC,IkBUM,CAAC,ElBVX,CkBUI,CAAW,ClBVD,OAAO,CAAC,EmB2E1B,GAA0B,EnB3EtB,EkBUwB,ICiEF,CAAA,EAAA,EACnB,EDlEC,EAAiC,CCkE7B,qBADc,EACO,GDlEmC,aAAa,CAAC,IAAzC,GAAgD,YAAjF;ACmEJ,ADlEI,AlBVP,AGkCb,AGFA,ATFA,AwBLIC,EAAAA,CAAC,CxBKDzF,AwBLE0F,IFmDU,AEnDZ,CxBKK,AwBLEF,GxBKC,EAAZ,GsB8CyB,EAAE,CEnDvB,EAAoB;A5BpCxB,A0BsF6C,ADpFjC,Af4CZ,AGFA,ATFA,AwBLIG,IxBKA1F,AwBLA0F,GFgDkC,CAA1B,AEhDJ,EAAE,ExBKE,GAAG,AwBNS,KxBMxB;AJzCA,A0BwFS,AnB5EG,AGkCZ,AGFA,ATFA,AwBLIC,I5BrCJ,AI0CI1F,AwBLA0F,ErBzBQ,EqByBJ,CrBzBO,CAAC,AqByBN,I5BrCV,EOYY,AH8BZ,GG9ByB,YAAA;APZzB,AyBsBY,AlBTI,AGkChB,AGFA,ATFA,AwBLMC,IxBKF1F,EqBrBQ,AGgBN0F,MrBzBc,EH8BN,CwBLC,EHhBQ,ArBqBN,AwBLA,CHhBO,ArBqBN,CG9BS,AH8B3B,CG9B4B,EkBShB,CAAiB,QlBTb,EAAyB,GkBS7B;AzBtBZ,A0B0FQ,ADnEC,AlBTW,AGkCpB,AGFA,AeTU,U5BrCV,AOcoB,CmB4EL,IAAP,C1B1FR,COc2B,CPd3B,AOc4B,WAAR,CAAoB,OAApB,GAA8B,IAA9B;APdY,A0B2F3B,AnB5EY,AGkCjB,AGFA,ATFA,AwBVwB,E5BnCQ,C0ByErB,AEtCP,MxBUKzF,EJ7CuB,CAAA,UAAA,EAAA,AI6ChC,GAA2B,GJ7CK,CAAA;AAK5B,A0BwFA,ADpEI,AfyBR,AGFA,ATFI,AwBLH,MxBKO,CAACH,IqBrBM,IrBqBP,IAAa,CAACC,EqBrBd,UrBqBJ,EAAgC;AqBpB/B,AlBTW,AGkChB,AGFA,ATFQ,GqBrEG,SlBuCS,GAAG,CAAC,MAAJ,IAAc,GAAd,IAAqB,GAAG,CAAC,MAAJ,GAAa,GAAtC,EAA2C;AkBWvD,AlBVgB,AGkCpB,AGFA,ATFK,AwBLL4F,MAAM,CAACC,GrBzBa,GqByBpB,GAAgB,CrBzBW,CAAC,IAAI,MqByBL,kBrBzBC,CAAiB,GAAG,CAAC,MAArB,EAA6B,GAAG,CAAC,UAAjC,EAA6C,GAAG,CAAC,QAAJ,IAAgB,GAAG,CAAC,YAAjE,CAAD,CAAP;AACH,AGkCjB,AGFA,AePI,MAAIC,GrB3BQ,AqB2BL,GAAG3B,GrBzBS,KqByBD,CAACC,cAAT,CAAwB,aAAxB,CAAV;ArBxBgB,AGkCpB,AGFA,ATHIrE,AwBJA+F,ExBIA/F,AwBJA+F,GAAG,CAACC,IrBzBY,AH6BR,GAAG,AwBJX,GrBzBsB,AqByBRV,CrBzBS,CH6BvB,GG7B2B,GqByB3B,crBzBuB,CAAc,GAAG,CAAC,UAAlB,EAA8B,GAAG,CAAC,MAAlC,CAAD,CAAN;AACH,AGkCjB,AGFA,AePID,EAAAA,IAAI;A5BrCJ,A0BwFO,AnB3EE,AGkCb,AGFA,ATJI,AwBHH,CAJD,CFsDW,ItB/CHpF,CGtCI,IPHR,OIyCgB,CAACG,EJzCjB,CAAY,A0BwFL,CAAA,EtB/CP,EAAyB,KsB+ClB,CAAA,C1BxFP,EAAuD,Y0BwFhD,GAAP,UAAuB,QAAvB,EAA6C;AACzC,AhBzCR,AGFA,ATJQL,IAAAA,KAAK,GAAGE,GsB+CJ,StB/CgB,CsB+CpB,AtB/CqBI,CsB+CN,KtB/CP,CAAoBN,EsB+C5B,EAAyB,CtB/CjB,CAAR,QsB+CA;AnB1EI,AGkCZ,AGFA,ATJK,GAFD,GG1BQ,GAAG,AH4BJ,CG5BK,OAAJ,GAAc,YAAA;APfV,A0B2FR,ADnEG,AlBRK,AoBrEhB,AjBuGA,AGFA,ATJQG,EqBpBG,ErBoBHA,IJ5CQ,AOgBA,CmB2EH,InB3EO,CAAC,AH4BH,GsB+CV,ADnEG,ArBoBU,CqBpBV,ArBoBW,CAAd,CJ5CQ,A0B2FQ,AnB3ER,CAAY,GAAZ,CPhBA,AOgBgB,EkBQrB,CCmEH,ADnEG,EzBxBK,CAAA,EAAA,OyBwBL,GAAP,AlBRqC,OAAzB,EAAkC,CkBQ1B,OAApB,EAAuC,oBlBRmC,GAAG,CAAC,MAAhC,GAAsC,IAAtC,GAA2C,GAAG,CAAC,UAA/C,GAAyD,GAA3F;APhBA,A0B4FR,ADnEA,Af0BR,AGFA,ATJK,MJ7CW,K0B4FD,ADnEA,ICmEP,G1B5FQ,GAAA,oBAAA,OyByBiB,KAAlB,CAAwB,IAAI,CAAC,SAAL,CAAe,OAAf,CAAxB,CAAP;AzBzBmD,A0B6FtD,ADnEA,AlBTW,AoBrEhB,AjBwGA,AGFA,GasCW,ADhEA,KlBPK,MAAM,CAAC,IAAI,iBAAJ,CAAc,GAAG,CAAC,UAAlB,EAA8B,GAAG,CAAC,MAAlC,CAAD,CAAN;AACH,AGmCb,AGFA,ATLI,MAAIH,CG/BI,IH+BC,CAACK,MAAV,EAAkB;AJ9ClB,A0BgHO,ADpFC,AE/EZ,AjByGA,AGFA,ATLQE,EsBiEG,ADpFC,ErBmBJA,IJ/CJ,KAAA,CI+Cc,EJ/Cd,CyB4BQ,CAAA,EzB5BR,E0BgHO,CAAA,IDpFC,CAAA,ICoFD,CAAA,cDpFC,GAAR,KCoFO,GAAP,EDpF4B,OAA5B,CCoF8B,CDpFwB,2BCoFtD,EAAoF;AAChF,ADpFA,AlBTI,AGmCZ,AGFA,ATLK,MG5BO,EmB6FA,CDpFC,AlBTE,CAAC,GmB6FC,MnB7FL,GAAgB,MmB6FpB,CDpFA,CCoF0B,ADpFA,IlBTN,GkBSa,CAAC,MAAlC,EAA0C,yCAA1C;AzB5BA,A0BiHI,AnB7FI,AoBtEhB,AjByGA,AGFA,ATLC,QJhDa,AOoBE,ImB6FE,CnB7FE,CAAC,EmB6FC,C1BjHC,GAAG,AOoBV,CmB6FE,AnB7FU,CmB6FA,EnB7FZ,CAAgB,KPpBN,CAAW,SAA7B,GOoBiC,OAAzB,EAAkC,WmB6FhC,CAAN,gBnB7FI;APnBR,A0BiHC,ADpFD,Af0BR,AGFA,IbrDQ,IyB6BI,CzB7BJ,GAAA,GyB6BW,CAAC,EzB7BZ,CAAA,IAAA,CAAA,IAAA,AyB6BI,EzB7BE,GyB6BuB,SzB7B7B,AyB6BA,EAAwC,GzB7BrB,IAAnB,CAFmD,CAInD;AACA,AyB2BI,AlBVI,AoBtEhB,AjB0GA,AGFA,ATLA,QG7BgB,CH6BPA,EqBnBQ,GlBVK,CAAC,IAAI,AH6B3B,GAAsB,SqBnBV,CAA0B,OAAO,AlBVtB,CkBUuB,ClBVxB,CAAN,UkBUJ,EAAgD,yCAAhD;ACqFJ,ADpFC,AlBVI,AGoCb,AGFA,ATLI,MAAIN,CGhCI,CmBiGA,CAAC,KtBjET,EAAc,qBsBiEV,EAAmC;A1B/GnC,A0BgHI,ADpFP,AEjFL,AjB2GA,AGFA,ATLQ,GqBzBI,CzBtBJ,KAAI,CAAC,C0BgHI,Q1BhHT,GAAiB,I0BgHb,GAAuB,E1BhH3B,E0BgH+B,8CAAJ,EAAvB;AACH,AnB9FG,AGoCZ,AGFA,ATLK,KsB+DG,CnB5FI,GAAG,CAAC,CmB8FD,GnB9FH,CmB8FO,AnB9FE,KmB8FG,CAAC,CnB9FG,CAAC,KmB8FV,CAAc,CnB9FZ,IAAmB,EAA5B,qBmB8FO,CAAJ,EAAiD;A1BhH3D,A0BiHO,ADpFA,AlBVH,AoBvET,AjB2GA,AGFA,EYxBY,GlBjEG,CAAP,KmBqJS,MDpFL,CAAA,QCoFA,CDpFA,CAAA,CCoFuB,IAAI,cDpF3B,GAAR,UAA4B,OAA5B,EAAsD,UCoFvB,CAA2B,4BAA3B,CAAvB;AACH,ADpFD,AlBVH,AGoCL,AGFA,ATNI,GGjGO,EmBiKI,CtBhEPO,GqBlBK,ECoFE,EtBlEA,GAAGb,UAAU,CAACS,EqBlBrB,CAA0B,OAAO,CAAC,IrBkBd,CAAxB,OqBlBI,EAAgD,yCAAhD;AzB7BR,A0BkHY,ACtKZ,AjB4GA,AGFA,ATNIH,EAAAA,OJhDJ,CIgDY,CsBkEK,EtBlEF,IAAX,EJhDJ,O0BkHY,GAAuB,4BAAvB;A1BnIZ,A0BoIS,ADpFD,AlBXR,AGqCA,AGFA,ATLI,CJnEJ,CAAgC,IImExBQ,CJnER,CAAA,AyBgDY,ClBXZ,AH8BW,GAAGT,GqBnBK,CAAC,CrBmBD,CAACK,EqBnBR,ElBXZ,EH8BI,CqBnByB,SAArB,EAAgC;AAC5B,AlB3FZ,AoBSA,AjB4GA,AGFA,CNnHA,CAAmC,UkB2FjB,IAAI,KAAJ,CAAU,ElB3F5B,CAAA,sCkB2FkB,CAAN;ACqFJ,ADpFC,Af0BT,AGFA,ATNI,SAAMI,EsBkEK,CtBlEX,EAAW,CsBkEP;AACH,ADpFA,AEnFL,AjB6GA,AGFA,ATNQP,GsBoDG,AD5EC,CrBwBJA,YAAY,GAAGF,KAAf;AsBoEJ,AhB3DJ,AGFA,ATNQA,IAAAA,KAAK,GAAG,EAAR;AqBjBI,AEpFZ,AjB8GA,AGFA,EYxBY,eAAA,CAAA,SAAA,CAAA,mBAAA,GAAR,UAA4B,OAA5B,EAAsD;AAClD,Af0BR,AGFA,ATPQ,QqBjBI,GrBiBG,EAAEG,EqBjBE,CAAC,MAAR,CrBiBG,GqBjBe,ArBiBAM,GAAtB,EAA2B,EqBjBE,CAAC,KAA9B,EAAqC;AACjC,AEpFZ,AjB8GA,AGFA,ATPY,UAAIP,EqBjBE,IAAI,KAAJ,CAAU,ArBiBhB,EAAkB,uCqBjBZ,CAAN;AACH,Af0BT,AGFA,ATPgBA,QAAAA,YAAY,CAACC,UAAD,CAAZ,CAAyBO,GAAzB;AMUhB,AGFA,ATPa;AsBmEF,ADnFH,Af0BR,AGFA,ATPS,EsBkEE,MDnFC,CAAC,OAAO,CAAC,KCmFV,CAAA,ADnFC,IAAmB,KCmFpB,CAAA,CDnF2B,CAAC,GCmF5B,EDnFH,CCmFJ,CDnF0C,WCmF1C;AACI,ADnFI,Af0BZ,AGFA,WYxBiB,oBAAL,CAA0B,OAAO,CAAC,KAAlC,EAAyC,yCAAzC;ACoFJ,ADnFC,Af0BT,AGFA,ATRQP,IAAAA,UAAU,GAAG,CAAC,CAAd;AsBoEA,AhBzDR,AGFA,ATRQM,IAAAA,GAAG,CsBmEG,EtBnEAT,KAAK,CAACK,MAAZ,OsBmE2B,GAAG,KAAK,qBAAL,IAA8B,EAA5D,CAHJ,CAKI;ADpFA,Af0BR,AGFA,ATRK,SqBhBQ,oBAAL,CAA0B,OAAO,CAAC,YAAlC,EAAgD,yCAAhD;ACqFA,ADpFH,Af0BL,AGFA,GYlCY,KC8FA,qBAAqB,CAAC,MAAtB,KAAiC,SAArC,EAAgD;AAC5C,AhB1DZ,AGFA,ATTIH,EAAAA,YAAY,GAAG,IAAf;AsBsEQ,ADpFA,Af0BZ,AGFA,ATTID,EqBfQ,ArBeRA,IsBqEQ,ItBrEA,GAAG,IqBfH,CAAA,ArBeR,SsBqE6B,ADpFrB,CCoFsB,ADpFtB,MCoFA,GAA+B,KAAK,MAApC,ADpFA,GAAR,UAA6B,KAA7B,EAAyC,YAAzC,EAA6D;ACqFxD,ADpFD,Af0BR,AGFA,ATTIH,EAAAA,GsB4DA,CAWI,EDtFI,OAAO,ErBeA,CAACU,EqBfR,KAAiB,ArBeV,CAAf,OqBfQ,IAA6B,KAAK,KAAK,EAA3C,EAA+C;AAC3C,Af0BZ,AGFA,ATTC,YqBfiB,IAAI,KAAJ,CAAU,YAAV,CAAN;AACH,Af0BT,AGFA;Aa6DQ,ADpFH,Af0BL,AGFA,ATTAxB,GqBnBY,IrBmBL,CsBqEK,AtBrEJ2B,CsBqEK,KAAK,EtBrElB,CsBqEQ,EAAe,AtBrEJ,UAAUf,GAAV,EAAe;AsBsEtB,AhB1DZ,AGFA,ATTI,MAAIgB,IAAI,EsBqEM,CtBrEH,GsBqEO,CtBrEHC,IsBqED,CAAU,AtBrEb,CAAUC,SAAS,CAACT,MAAV,GAAmB,CAA7B,CAAX,oEsBqEc,CAAN;AACH,ADrFT,Af2BA,AGFA,SYzBA,eAAA;AA3GA,AfuIA,AGFA,ATVI,CqB3HJ,EAAA,GrB2HQS,SAAS,CAACT,MAAV,GAAmB,CAAvB,EAA0B;AsBsEtB,AhBzDR,AGFA,ATVQ,QsBqEM,CtBrED,IAAIU,CAAC,GAAG,CsBqEG,AtBrEhB,EAAgBA,CsBqEG,AtBrEF,GAAGD,CsBqEG,QtBrEM,CAACT,MAA9B,EAAsCU,CAAC,EAAvC,EAA2C,QsBqExB,CAAmB,KAAK,GAAxB,EAA6B,qBAA7B,CAAnB;AAEA,AhB1DR,AGFA,ATVYH,MAAAA,IAAI,CsBsED,AtBtEEG,CAAC,GAAG,CAAL,CAAJ,GAAcD,SAAS,CAACC,CAAD,CAAvB,QsBsEiB,MAAd,CACH,UADG,EAEH,KAAK,MAAL,IAAe,oBAAW,QAFvB,EAGH,KAAK,QAAL,IAAiB,IAAI,gCAAJ,EAHd,EAIH,KAAK,eAJF,CAAP;AAKH,AhB9DL,AGFA,ATVS,GsBoDE;AbzCX,ATVK;AsB0EL,Ab/DA,Sa+DA,oBAAA;AA5KA,Ab8GA,ATXIf,CsBnGJ,CtBmGIA,CsBnGJ,ItBmGS,CAACgB,IAAN,CAAW,IAAIC,IAAJ,CAASrB,GAAT,EAAcgB,IAAd,CAAX;ASYJ;AACA,ATZI,MAAIZ,KAAK,CAACK,MAAN,KAAiB,CAAjB,IAAsB,CAACJ,QAA3B,EAAqC;AajIzC,AJ8IA,ATZQN,IalIF,AbkIEA,UAAU,CAACY,UalIQ,AbkIT,CAAV,EalI8B,KAAK,IAA3C;AACA,AS0MA,Ab5DA,ATZK,IalIC,KS0MN,QAAA,CAAkB,MAAlB,EAA6B,KT1MI,GAAW,KAAK,IAAjD;AAEA,ASyMI,Ab5DJ,ATZC,CAXD,EAaA,MsBsEW,MAAM,CAAC,GAAP,KAAe,SAAtB;AACH,Ab5DD;AI7IA,AJ8IA,II9IY,kBAAZ;AJ+IA,ATZA,SAASU,IAAT,CAAcrB,GAAd,EAAmBsB,KAAnB,EAA0B;AkBzI1B,ACAA,AVsJA,ATZI,OAAKtB,GAAL,GAAWA,GAAX;AapIJ,AKLA,ACAA,AVsJA,ATZI,CarIJ,GKLA,ACAA,GnB0ISsB,IarIG,CbqIR,GAAaA,KAAb,EmB1IJ,ONKA,AKLA,ELK8B;AAC1B,AKNJ,ACAA,AVuJA,ATZC;AapIG,AKPJ,ACAA,AVwJA,EIjJI,UKPJ,ACAA,QNOI,CAAA,cAAA,CAAA,GAAA,cAAA;AACA,AIRJ,ACcI,ACFA,AV6IJ,ATbAD,IAAI,CAACE,MkB9HD,ACFA,GnBgIJ,CAAeT,GAAf,GAAqB,QmBhIjB,CAAY,GnBgIiB,GkB9H7B,CAAY,GCFZ,EAAoC,KDEpC,EAAoC,WCFpC,EAAsG,KDEtG,CCFA,CDEsG,CCD1F,KDCZ,EACY,UCHZ,EACwC,KDCxC,EACwC,aCHxC,EACoF,ODCpF,ACFA,EDGwF,ACFmB,eDC3G,EACkH,OADlH,EACyI;AACrI,ACFA,AV4IR,ATbI,OAAKd,EkB7HI,ACFA,CnB+HT,CAASwB,ImB/HL,CnB+HJ,CAAe,CmB/HG,CDEd,ElB6HJ,CkB7HsB,ClB6HD,CmB/HjB,InB+HsBF,IkB7HtB,ClB6HJ;AapIA,AIRJ,ACgBQ,AjBlBR,AkBgBQ,AV4IR,ATbC,CAFD,CanII,OKQS,ACFA,WNNT,CAAA,MKQI,ACFA,GDE0B,ACFA,GNN9B,CAAA,GAAA,WKQI,ACFA,CNNJ;AACA,AIRJ,ACgBQ,ACFA,AV4IR,IQ1JA,KCgBa,ACFA,MDEL,GAAc,MDhBtB,ACgBQ,ECFA,GAAyB,iBAAzB;ACYR,AH1BA,ACiBQ,AjBnBR,AkBiBQ,AV4IR,ATdAlC,IoBnHM,GpBmHC,CAACqC,CkB5HK,ACFA,InB8Hb,GAAgB,CoBnHG,GAAG,GAAtB,EpBmHA,CkB5HQ,GAAyB,ACFzB,GAA4B,cDE5B,MCFA;ACaR,APnBI,AITJ,ACkBQ,AjBnBD,AkBiBC,AV4IR,ATbArC,EatII,EZVS,GDgJN,CAACsC,CkB7HK,ACFA,ElBjBO,ADgJpB,CiB/IA,EhBD+B,ADgJjB,EAAd,GmB/HQ,CNPJ,CAAA,AZVG,CkBiBmB,EDElB,GAAuB,KLT3B,AMOI,CNPJ,GAAA,MKSI,KLTJ;AACA,AIYA,ACHI,AjBlBR,AkBiBQ,AV2IR,ATbAtC,OAAO,CAACuC,CkB7HK,ACDA,EFIT,CjB0HJ,GAAe,EAAf,CmB9HQ,GAAiB,IAAjB,MFIJ,ACHI,CDGQ,ECHsB,QDGlC,EAAoC,YCHhC,MDGJ,EAAsG,MAAtG,EAAuH,iBAAvH,EAAmJ,eAAnJ,EAA6K,OAA7K,EAAoM;AGOxM,AHNQ,ACHA,ACDA,AV2IR,ATbAvC,IoBpHA,GpBoHO,CAACwC,CiB1HK,ACHA,ACDA,MnB8Hb,CkB7HQ,ACDA,ECUR,ApBoHkB,CiB1HV,ACHe,ACDA,CnB8HvB,EiB1H0B,AjB0HJ,CmB9Hd,GDCA,MDGA;AGMR,APlBI,AIaI,ACFA,ACFA,AV2IR,EIpJI,OIaS,ACFA,ACFA,OAAL,EDEA,CCFe,CNTnB,CAAA,AKWqB,IAAjB,CCFA,CFIA,GAA0B,MJb9B,CAAA,GAAA,QIaI,OJbJ;AOkBJ,APjBI,AIaI,ACFA,ACFH,AV2IL,ATdAxC,OAAO,CAACyC,CiBzHK,ACFA,GEMb,GHJQ,CCFA,AlB2HR,EiBzHsB,CCFC,AlB2HJ,EAAnB,EkB3HQ,CDEA;AG4BJ,AH3BI,ACFH,AjBtBL,AQ+JA,IR/JA,GAAA,EgBwBa,EG2BT,OH3BI,GAAiB,IG2BrB,AH3ByB,CG2Bb,GAAZ,EAAyB,OAAzB,EAA6D,iBH3BxC,EAAjB;AG2BqB,APxCzB,AIcI,AhBzBR,AkBqBiB,AV2IjB,ATdA,EavII,AMUa,MC8BY,CH1BhB,AjByHJC,IAAT,EoB/F6B,CpB+Fb,CAAE,GoB/FW,APxCzB,AMUa,CNVb,AMUa,IC8BY,CAAA,AH1BrB,EG0BqB,CH1BI,CEJhB,CAAA,INVb,CAAA,EMUa,CNVb,EMUA,KFII,KEJiB,ENVrB,CMUA,EAAkC,cAAlC,EAAgE;AC8BvC,APvC5B,AIcO,ACFS,AjBxBjB,AQiKA,CIhKA,CKuBiB,CLvBL,GOkDiB,GHzBhB,GhB1Bb,CmBmD6B,GAAA,EAAA,GPlDC,GIyBtB,GAAuB,ACFd,CAAA,SAAA,CAAA,IDET,GCFS,GAAb,OLvBQ,GKuBa,GAArB,EAAkC,ULvBR,GAAA,CKuB1B,CLvB0B,CAA9B,AKuBoE;AE2BH,APrCjE,AIaQ,AhB3BR,AQkKA,ATdA1C,OAAO,CAAC2C,CiBzHK,CjByHb,CCpJA,EDoJaD,CCpJb,EgB2BQ,ChB3BR,ADoJA,CClIC,CgBSsB,OAAf;AAEA,ARsIR,ATdA1C,OAAO,CAAC4C,CiBxHK,OAAL,GAAe,AjBwHvB,GAAsBF,EiBxHd,EjBwHR;AoB/GY,AHPJ,AhB9BU,AQmKlB,ATdA1C,ECrJkB,GAAA,CAAA,CDqJX,CAAC6C,CoBhHI,AHPC,GjBuHb,GAAeH,CCrJG,EgB8BV,ChB9BJ,ADqJJ,EiBvHyB,IAAjB,GGOI,CnBrCiB,EmBqC0C,CnBrCnE,EAAmC,IAAnC,EAA+C,GmBqCoB,CAAQ,CAAnE;APvBZ,AIiBQ,AhB9BA,AQmKR,ATdA1C,IaxIA,GbwIO,CCrJK,ADqJJ8C,CiBvHK,EhB9BE,ADqJf,GAAcJ,EiBvHN,AhB9BY,CYapB,CbwIA,CiBvHuB,ChB9BX,GgB8BJ,ChB9BoB,GAAG,KAAK,SAA5B,EAAuC;AmByC3B,AP5BpB,AIkBK,AhB9BO,AQmKZ,ATdA1C,OAAO,CAAC+C,CoB7GY,GnBxCF,IAAI,CmBwCF,GAAgB,CnBxClB,CmBwCE,AnBxCQ,ADqJ5B,GAAyBL,IAAzB,GCrJoC,IAAR,GAAY,yBAAtB,CAAN;ACPZ,AkBqDqB,APlCrB,AZXS,AQmKT,ATdA1C,IE7JA,GF6JO,CAACgD,CoBxGa,GPlCrB,OXnBA,MkBqDqB,CpBwGrB,EoBxGgD,CAA3B,ApBwGQN,IAA7B;AE7JA,AW+EI,AI3DA,AhBXC,AQmKL,ATdA1C,EiB1II,ChBfc,IDyJX,CiB1IH,AjB0IIiD,CiB1IJ,EJ2DA,Cb+EJ,GAAeP,IAAf,IiB1II,CJ2DA,AI3DW,CJ2DS,UAApB,EAA6C,MAA7C,CI3DW,CJ2DmD,AI3DnD,QJ2DX,CI3DA,CJ2DsF,CI3D3E,aAAX,CJ2DA,CI3DsB,CJ2D8F;AX/ExH,AkBwDQ,APuBJ,AI5DA,AEOI,AVmJR,ATdA1C,OAAO,CahFH,AbgFIkD,EE/JR,GW+EI,EOvBQ,ClBxDZ,AW+EI,EX/EJ,EW+EI,GMrDQ,AnBqIZ,EoBvGQ,CAAe,ApBuGGR,GoBvGlB,CpBuGR,CoBvG4B,ED9BpB,CAAe,EC8Bf,CD9BA,EAAoB,KAApB;AjB1B6B,AgB6B7B,AjBnBU,AQoKlB,ATdA1C,EEhKqC,ADUnB,GAAA,CAAA,CDsJX,CAACmD,CiB5IJ,EfpBiC,CAAA,IDUnB,GAAd,EgBUA,ECSQ,IhB7ByB,AFgKrC,EEhKqC,ADUR,CDsJCT,ECtJ1B,CiBmBI,CAAe,AjBnBmB,ADsJ1C,CEhKqC,CAAA,CgB6B7B,CjBnBJ,CiBmBwB,CjBnB0B,IiBmB9C;AE6BA,APbI,AIxBJ,AhBVA,AkBgBA,AVoJR,QRpKY,CmB+CC,APbD,AZlCC,GAAD,CgBUG,EGqCP,CnB/CY,EmB+CE,AHrCF,ChBVG,CAAC,EYkCZ,CMlBA,ENkBwB,AZlChB,CYkCR,AZlCkB,CgBUf,CAAe,KhBVV,AkBgBZ,ClBhBA,AkBgBe,CFNf,ChBVgC,OmB+CL,KD/B3B,EC+BkC,AD/BH,CC+BI,MAArB,CAAd,QD/BA;AjBpBJ,AkBoDI,AHrCH,ACQG,AjBlBI,AQoKZ,ATdA1C,KiB9I0B,EjB8InB,CAACoD,CoBvGK,ElBpDT,CDKc,ImB+CV,AnB/Cc,CDsJtB,EoBvGuB,CpBuGH,CCtJF,CAAU,CiBkBhB,CE6BgB,ElBpDxB,CAAmB,GF2JOC,ECtJM,CCLhC,AgBuBI,CE6Be,AF7BA,AlBoIH,CE3JkB,AkBoDC,CnB/CX,ADsJQ,EoBvGb,CAAf,AnB/CgC,SiBkBhC,EAA+B,gBAA/B,MjBlBU,CAAN;ACLR,AkBsDI,APmBA,AZnEC,AkBeD,AVqJR,ATfsC,IoBrG9B,IlBtDJ,CF2JyC,EoBrG9B,ApBqGuB,EE3JlC,CkBsDc,CPmBN,CXxEJ,IeYkB,CGyCD,ClBrDjB,CAAA,AiBoBI,ECiCiB,APmBrB,CAAe,CXxEf,AkBqDA,ADjCA,CjBpBA,AiBoBS,IjBpBT,IWwEA,CXxEO,CWwEoB,GXzE/B,CiBqBI,EAAyB,MNoDzB,oBMpDA,EAAyC,gBAAzC;ACkCA,AF/BA,AjBjBH,AQoKL,AThBiD,CAAjD,ECxJkB,CmBoDV,OAAO,CAAC,WF/BJ,IAAJ,CAAS,CE+BT,GAA4B,OAAO,CAAC,EF/BpC,EAAyB,aE+BG,KAA8B,QF/B1D,CE+B4B,CF/Ba,EE+B6B,KAA1C,GAAkD,MF/B9E,CE+BqF,CAAC,iBAAtF;AlBrDA,AWwEA,AI7DkB,AESlB,AVsJR,GQ/JI,CfXI,KAAI,CAAC,KWwED,CXxEJ,CiBoBK,EjBpBS,IiBoBd,CAAY,CjBpBZ,AWwEA,CAAe,CMpDf,CAAgB,INoDhB,EAAuB,QAAvB,IMpDyB,KAAzB,EAAgC,oCAAhC;ACkCA,AF9BA,AjBjBU,AQoKlB,AThBArD,ECpJkB,GAAA,CAAA,CDoJX,CoBrGK,ApBqGJsD,ECpJU,GAAd,EmB+Ce,ApBqGnB,EkBnIa,ACFD,CnBqIM,IoBrGQ,ADhCT,CCgCU,AF9BnB,AjBjBe,CiBiBH,EjBjBhB,CiBiBI,CAAgB,AjBjBS,ADoJLD,IAAV,ECpJd,ADoJ8B,ECpJY,EmB+ClC,EnB/CR,EAAsD,AkBe9C,CCgCmC,GF9Bd,GCFrB,CAAA,CDEJ,CE8BI,CF9B4B,GE8BoB,OAAO,CAAC,eAAR,GF9BpD,EE8BgF,CF5BhF,QE4BA,EAA2F;AlBpD3F,AkBqDI,APkBJ,AI3CS,AhBtBT,AkBcI,AVsJZ,AThBI,EiB9Ha,IGyBL,ElBrDA,AF0JF,IAAI/C,CoBrGK,CAAC,ClBrDD,AWuEP,EbmFF,CAAU,EE1JR,Ee4BK,CAAA,Ef5BY,AWuErB,CAAe,GOlBX,GAA0B,AHzBrB,CAAA,CJ2CT,EXvEA,AWuEyB,EXvES,CkBqDG,CAAC,AHzB7B,GAAb,GJ2CI,MbmFE,CiB9He,AjB8HrB,EoBrGkC,CHzBlC,EAAkC,EGyB4B,SAA5B,GAAwC,AHzB1E,EAAgE,EGyB9B,GAA+C,OAAO,CAAC,eAAjF;AlBpDA,AkBqDH,AF7BD,AjBlBA,AkBaI,AVuJZ,AThBC,CAFD,IoBrGQ,GnB7CI,EAAE,CmB+CC,EnB/CE,CkBaL,CAAA,CAAA,CDKC,AjBlBQ,GiBkBb,GAAW,AjBlBP,CAAJ,EiBkBA,AjBlBsB;ACLlB,AkBqDA,APkBJ,AZjEI,AkBac,AVuJ1B,SInGa,GOlBK,AnB/CA,ImB+CI,AnB/CA,CiBmBV,ECNc,CAAA,CCkCR,AnB/CA,CmB+CU,AF5BX,AjBnBW,aAAW,CYiE/B,GAAmC,AZjEf,GiBmBhB,AjBnB+B,OiBmB/B,CAAA,EjBnBgB,GAA0B,GAA1B,EYiEpB,CZjEiD,GAAvC,CAAN,sBmB+CM,CAAN;AlBpDA,AkBqDH,APkBD,AK/CI,AjBlBH,AkBYiB,AVwJ1B,AThBAN,OAAO,CAACuD,CanFK,CXvEK,CF0JlB,GAAc,OE1Je,GAAG,EF0JN,KE1Ja,SWuE/B,GAAuC,OXvEf,KAA+B,UAA/B,GAA4C,EWuEpE,qBXvEwB,GAAsE,OAA1F,CAH8B,CAK9B;AWuEJ,AKjDI,AjBjBP,AkBWqB,AVyJ1B,ATjB4B,GCxJV,MYuEL,AbiFsB,GAAP,EkBlIhB,ACNoB,CNuDxB,AKjDI,CAAA,ELiDU,CMvDe,KNuD7B,aMvDwB,EAAN,CAAA;AjBfd,AkBoDJ,APmBA,AKjDkB,ATmJ1B,ATlBwC,CAAxC,KEvJY,EkBoDA,CPmBC,EXvEG,CAAC,GAAL,EWuEJ,CXvEe,CgBsBG,CLiDF,AKjDE,GhBtBE,AkBoDD,GAAQ,EPmB3B,EOnBA,IlBpD+B,CAAC,cAAD,CAAZ,CAA8B,SAAlC,GAAX;AACA,AkBoDJ,APmBA,AKlDkB,AjBjB1B,AQqKA,MPzKY,EkBoDA,CPmBC,AZnEb,ECJgB,CAAC,ADIjB,OYmEQ,EXvEI,CWuEc,EXvEG,CkBoDA,GAAQ,IAA7B,APmBA,GXvEgC,CAAC,YAAD,CAA5B,CAP8B,CAS9B;AACA,AWqEJ,AIlDA,ACDkB,AjBnC1B,AkB4BkB,AV4JlB,ATnBAvD,CCrKA,EAAA,IDqKO,CAACwD,Ca/EK,GM1DK,CnByIlB,CkBlIgC,ElBkIhB,CmBzIO,EDOc,CCPX,EAAA,CFQd,AERc,CN0DlB,Eb+EkBC,Ca/EK,AM1DL,EAAR,AnByIF,EAAe,EiBjIvB,CAAe,GAAf,ACDwB,EDCJ,ACDF,CAAA,ELmDlB,EIlDA;AGgCA,APmBA,AJkGR,ATnBI,QoBlGQ,ApBkGF,Ca/EG,Gb+ECnD,KAAJ,CAAU,MoBlGC,EPmBb,GAAyB,COnBrB,GPmByB,COnBN,OAAO,OAAP,EpBkGrB,CAAN,EoBlG8C,WAA1C,EAAuD,GPmB9B,EAAzB;AXrEI,AkBmDA,AHhCJ,AERI,AV6JZ,ATnBC,CAFD,KEnJY,KAAI,CAAC,IiBWD,KjBXJ,AiBWA,EFQA,AERW,CjBXM,SemBrB,CAAe,CfnBiB,CAAC,YemBjC,EfnBgC,AemBD,CfnBV,CAA4B,KAAI,CAAC,QemBtD,CfnBqB,EAA4C,KAAI,CAAC,GAAjD,CAAjB,CAX8B,CAa9B;AkBkDA,APmBJ,AKtDU,ACLF,AV6JhB,SIlGa,GKtDK,ECLF,GDKO,ACLJ,EN2DX,CAAgB,AKtDE,CCLH,CDKG,ACLF,CDKE,ECLC,CAAC,CDKF,ELsDlB,AKtDU,GLsDkB,CM3DZ,CAAY,GAAZ,IAAmB,CN2DN,AM3Db,GAAuB,CN2DX,EAAU,AM3DtB,GAA6B,GAA9B,KAAqC,kBAAgB,kBAAkB,CAAC,KAAD,CAAvE,CAAP;AjBTJ,AkBkDA,APkBuC,AInD3C,AhBlBR,AkBWa,AV6Jb,ATpBAN,MEnJY,CFmJL,CAAC0D,EoBjGU,ClBlDF,CAAC,CWoEkC,Ab+EnD,GAAgB,Ea/EuC,CAAC,EOlB3B,EHjCjB,CGiCoB,GHjCxB,CAAS,AjBkIU,GEnJf,AkBkD2B,GlBlDA,IWoEY,CAAyB,GInDpE,CJmD2C,CAAA,AInDlB,CfjBiB,CAAC,IkBkDnB,KAA+B,SlBlDb,CAAtC,AkBkDoB,GAA4C,EHjCpE,EAAyC,gBAAzC,GGiCwB,GAAsE,OAA1F;AlBjDH,AkBkDG,APiBqE,AKrDrE,AjBfZ,AQwKA,ATrB6B,ICnJ7B,CCdQ,AWkFA,COjBI,GpBgGwB,CAAP,CElJd,CDDf,IiBegB,KEoCW,AFpCf,EAAW,CEoCO,WAAW,CAAC,IAAD,CAA7B;AlBjDA,AkBkDA,AHjCJ,ACHQ,AjBhBhB,AQyKA,ATtBwC,CAAxC,KEjJY,AkBkDA,KlBlDI,CAAC,EgBcD,GDGH,ACHM,GDGX,CfjBI,AgBcW,CAAC,CEoCK,AHjCV,CfjBU,CgBcF,CEoCK,AHjCxB,ACHoB,GhBdM,CAAC,GgBcX,ChBdK,AgBcO,ChBdI,EkBkDG,AFpCnB,CEoCoB,ClBlDf,CAAjB,CgBc+B,CAAnB,GAAuB,GAAvB,GEoCmB,AFpCU,CEoCzC,EFpCW,KAAqC,kBAAgB,kBAAkB,CAAC,KAAD,CAAvE,CAAP;AhBbJ,AkBkDH,APgBD,AIhDA,ACJK,AjBjBb,AQ0KA,MPvKY,GWkEC,EXlEG,CAAC,ADHjB,KgBqBa,EJgDL,CAAgB,GIhDhB,CAAY,GJgDZ,AIhDA,CAAgB,EJgDU,CXlEtB,GAA2B,MWkEJ,KAAD,CIhDD,CJgDe,EXlEpC,EekBJ,EAAgC,qCAAhC,GAEA;AfnBC,AWiE4C,AZrErD,AQ2KA,WR3KA,EYqEqD,KAAI,CAAC,AZrE1D,GAAA,CAYC,YYyDoD,CAAsB,KAAtB,CAAA;AOd7C,APcyE,AI7CzE,AEXA,AV+JR,KIvGQ,GOdI,CAAC,OH/BD,GEXJ,CAAA,KC0Cc,KH/BI,CG+Bd,IAAoB,AH/BD,OG+BQ,SAAP,KAAqB,MH/BP,KG+BlC,CH/BA,GG+BwD,CAAC,AH9BxD,OG8B+D,AH9BxD,CG8ByD,SAArE,EAAgF,EH9B3E,KAA0B,WAA1B,IAAyC,OAAO,IAAI,cAAJ,GAAqB,YAA5B,KAA6C,QAD3F,EACsG;AG+BlG,AH9BA,AhBzBR,AkBYI,AVgKR,ER5KI,ImBuDQ,EnBvDR,CAAA,ImBuDe,CAAC,MH9BF,GG8BN,AnBvDR,CgByBkB,AhBzBA,EmBuDU,GH9Bd,CAAU,EhBzBxB,EAAkB,CmBuDV,UnBvDR,EAA2B,2EgByBb,CAAN;AfrBP,AkBoDI,APcD,AI5CC,AEdD,AViKR,KWvHQ,IPgBK,AZtET,EmBwDW,GD5CA,CC4CI,GPcX,AM1DW,GN0DM,AZtErB,EYsEI,EM1DO,CAAkB,KC4CL,KD5CM,CC4Cf,IAAmB,CAAC,CD5CN,EAAU,IC4CG,CAAC,CD5Cd,EAAgB,MC4ClC,EAA2C;AlBlDtD,AkBmDQ,APcJ,AKpDA,AjBlBA,AkBYI,AViKZ,SIvGa,COdG,GnBxDD,CkBYH,EN0DJ,CM1DO,EN0DQ,AKpDf,CAAA,AjBlBc,AkBYJ,CN0DV,EM1Da,CAAC,CC4CV,CnBxDG,CmBwDkB,InBxDA,AkBYf,CAAY,OlBZtB,AkBYU,EAAqB,IAArB,CAAN;AC6CI,APcR,AI5CM,ACTN,AjBjBH,AkBYO,AViKZ,KR/K+B,GmB0Df,CPcH,GI5CC,EAAA,CG8BS,CAAC,CH9BM,CEdd,MN0DR,COdQ,EPce,AM1DnB,CC4CwB,CPc5B,cOdQ,MH9BF,EAAC,IAAI,GAAA,EAAA,CAAA,CAAA,CAAL,EAAO,KAAK,GAAA,EAAA,CAAA,CAAA,CAAZ;AG+BD,APcL,AI5CM,ACVN,AT6JR,SIvGa,GI5CC,ECVC,IAAI,CDUE,ChB7BU,EgB6BV,GCVN,CAAkB,ILsDzB,AI5Ca,EAAA,CJ4CgB,CI5ChB,CJ4Cb,CKtD0B,CDUb,EAAA,EAAA,EAAA,ACVY,CDUN,CCVgB,GDUtB,CAAA,ECVY,CDUC,CCVe,IDU5B,EAAkB,EAAlB,GAAuB,KAAK,OAA5B,CAAP;AftBG,AkBqDR,APcD,AI3CM,ACXF,ACLA,AVkKZ,EP1KiB,OWmEJ,GI3CC,KfxBG,CAAA,AgBaD,ACLE,KFgBO,CCXH,CCLG,CFgBgB,CfxBxB,AgBaQ,ChBbR,AiBQW,CN2DpB,GXnES,AWmEmB,AKtDxB,CCLoB,CN2DxB,AM3DyB,CjBR7B,SiBQwB,CjBRN,AiBQsB,OjBRxC,EAAsC,MiBQd,CAAgC,GAAhC,CAAhB;AN4DJ,AI3CI,AhBhCmB,AQkL/B,GRlLI,MY2ES,KI3CD,OJ2CJ,GAAoB,CAApB,AI3Ce,EAAE,KAAK,SAAL,CAAe,MADC;AG+BjC,APcA,AI3CI,ACZA,AjBjBR,AkBYQ,AVmKZ,ER/KI,MmB0DQ,AnB1DR,CmB0DS,APcA,AZxET,KgB6BQ,ICZI,ACLA,GFiBG,EAAA,AhB7Bf,CAAkB,AkBYA,CC8CA,ED9CG,GFegB,CG+B7B,CFzCkB,AjBjB1B,AkBYQ,EN4DJ,AZxEc,CmB0DU,EPcS,AKvDN,KEyCI,APc/B,KZxEJ,EAA6B,ImB0DD,KAAuB,MFzCL,IAAtC,CEyCA,CFzC4C,GEyCc,CAAC,OAAO,CAAC,WAAvE,EAAoF;AAChF,APcJ,AI3CI,ACZI,AT8JhB,MWrHY,GPcC,AZzET,ImB2De,CAAC,AH7BR,ECZI,KDYG,AhB9Bf,CiBkBkB,CDYD,ACZE,CLuDf,COdI,EPcmB,AKvDJ,CEyCO,CHhCO,GCTlB,CAAU,MEyCrB,MPcqC,CAAC,YAA1C,kDKvDe,CAAD,CAAN;AE0CP,APcD,AI3CI,ACZI,AjBlBR,AkBaI,AVmKZ,KWvHQ,IPgBK,EOdE,EnB3DA,CgB8BH,CG6BO,GD9CH,ElBbM,IAAP,EYyEP,GAAyB,AI3CN,AhB9BI,EmB2DH,AH7BC,GJ2CrB,AM5DiB,EFiBS,CG6Bf,AnB3DJ,GkBaH,CC8C0B,AnB3DK,CmB2DJ,AD9CN,OC8Ca,CAAC,UnB3De,CmB2D/C,EAA6C,CnB3DpD;AmB4DI,APeJ,AIjDiC,ACP5B,AjBlBR,AkBaW,AVmKhB,KRlLiC,IY4EpB,COfG,GHlCF,IGkCS,GD9CD,MN6Dd,CM7DqB,EN6DI,CM7DD,EAAhB,EC8CA,APesB,KOfO,GPeZ,CAAc,OOfnC,EAA8C,GPezB,CAA2B;AOd5C,APc8C,AJuG9D,MIvG8D,EOd9C,EPckD,EAAE,GOd7C,CAAC,InB9DS,OmB8DjB,GAAsB,QPc0C,SOdhE;AACH,APa+C,AI1CpD,ACZI,ACNU,AVoKtB,KIxGiC,CAAzB,UI1CI,ECZI,ECNM,EAAA,GAAA,IDMV,CDYc,KAAK,sBElBT,KFkBwB,MAAtC,EAA8C;AG8B7C,APaJ,AI1CO,AhBnCqB,AkBgBX,AVqKtB,GRrLI,WgBmCQ,MEnBW,KFmBA,CAAC,AEnBD,GAAA,EAAA,CAAA,CAAA,CAAD,IFmBV,GAA2B,aAA3B;Af/BJ,AWoCJ,AIJK,ACbG,AjBnBR,AkBYkB,AVsKtB,ERlLI,MAAA,CAAA,SiBmBY,ECPa,GlBZzB,CAAkB,CkBYO,GAAA,EAAA,CAAA,ClBZzB,AkBYyB,CAAP,CDOG,AjBnBH,QAAlB,CiBmBY,CjBnBY,GiBmBU,gBAAS,WAAnC,EAAgD;AhBlBpD,AkB6DA,APzBJ,AKjBY,AT+JhB,SWrHa,AnB9DT,OCCQ,AgBmBI,GE0CR,EnB9DJ,CmB8DsB,ClB7DP,CAAC,GgBmBO,EE0CM,CAAC,AF1CJ,IAAI,ChBnBtB,IAAuB,AgBmBG,CE0CZ,AF1Ca,IE0CS,ElB7DN,CAAC,CkB6DS,UlB7DjB,CAAoB,GgBmBzB,CAAgC,GhBnBtD,AgBmBsB,EhBnBkC,AgBmBG,gBE0CnB,CAAsB,KAAK,MAA3B,CAAxC;AlB5DI,AkB6DJ,APzBJ,AIJkB,ACd+C,AjBnB7D,AkBYQ,AVuKhB,SWrHa,InB9DE,CAAC,EkBYA,EDOqD,CDc/C,AhBjCD,CCCH,AegCI,GErBC,CjBXD,AkB6Dd,ADlDgB,GCkDI,CnB9Db,EkBYQ,CAAP,ClBZkB,CiBmBkD,AjBnBjD,CkBYH,CDOsD,GjBnB9C,CkBYxB,CDO0E,CAAC,ChBlBzE,EAAN,KDDJ;ACEC,AkB4DmB,APxBxB,AILkB,ACd6C,AjBlB9D,AQmLL,KRrL4B,YiBoBE,CAAd;AE2CR,APvBJ,AINkB,ACbT,ACNG,AVuKhB,cQpJ4B,CCfhB,IDeqB,ChBlCL,AkBeR,CDMD,MCNH,EAAa,IFmBD,EAAN,CAAA;Af7Bd,AkB2DA,AF1CQ,ACNI,AVuKpB,SWvHa,OlB3DD,CAAC,CiBWO,MjBXA,CAAC,AiBWM,CCgDnB,ADhDoB,GCgDK,ElB3DzB,EAAqB,CkB2DrB,ADhDmB,CAAP,GAAoB,KAAG,OAAvB;AjBVR,AkB2DJ,AF1CQ,AjBvBY,AkBiBX,AVuKjB,GRxLI,MmBiES,OAAL,CDvDyB,CASjB,CC8CO,ClB3DL,AgBiBI,IhBjBA,EkB2Dd,CF1CqB,EhBjBX,CAAU,AgBiBI,KAAI,CAAC,UAAL,CAAgB,GhBjB9B,CAAN,WgBiBoB,CAAgC,GAAhC,CAAhB;AhBhBP,AkB4DD,AP1BU,AIPJ,AhB/Bd,AQsLA,EIhJkB,OO0BL,AnBhEb,GgB+Bc,GJOI,CAAA,CIPC,AhB/BnB,CmBgEQ,EHjCc,CGiCG,CP1BP,AIPI,CAAA,EGiCd,AP1BJ,EIPkB,EAAR,MJOW,UAArB,EAA8C,MAA9C,EAA+D,QAA/D,EAAuF,eAAvF,EAAqH;AO2BjH,AP1BA,AIPA,ACXQ,AjBjChB,AQmMA,CRnMA,EAAA,MmB6Ea,EP1BE,IAAI,CO0BX,CHjCK,EGiCU,CF5CD,GE4Cd,IF5CqB,CLkBd,CAAkB,CKlBe,EAAhC,EDWR,CAAuB,IJOhB,EAA8B,KIPrC,CJOO,CIP6B,CJOS,IIP7C,IJOO,EAAgD,eAAhD,CAAP;AXlCA,AkB6DH,AP1BA,AIJS,ACdE,ACLA,AVuKhB,GIlJkB,SIFJ,If/BF,AgBiBI,ACLA,CjBZH,Ee+BQ,GAAM,CCdJ,ChBjBH,AgBiBI,ChBjBH,Ae+BS,AEnBL,GjBZjB,Ae+BsB,AEnBF,EjBZF,AgBiBV,ECLgB,CFmBL,ACdM,GDcG,CEnBA,CAAC,EFmBG,ACdxB,CDcyB,GAAL,EAAtB,YEnBc,CAA8B,GAA9B,EAAmC,SAAnC,EAA8C;AjBX9D,Ae+BJ,AEnBY,AVuKpB,iBQpJa,CEnBO,EjBZF,Ge+BV,Cf/Bc,Ae+BF,CEnBO,EFmBnB,AEnBmB,CFmBH,Cf/BN,CAAU,KiBYD,CAAA,EAAA,EAAO,MFmBD,Cf/Bf,AiBYS,CjBZf,CiBYkC,EFmBtC,EAAgC,CEnBU,CAAC,OAAxB,6BFmBiD,OAApC,GAA2C,GAA3E;Af9BC,AkB+DQ,APGb,AInCqB,ACfH,ACNoD,AVyK1E,EWpHiB,APGb,MAAA,CAAA,OOHa,CAAA,ADrDW,CAAZ,CFqBS,CAAA,ACfH,EAAA,CLkDlB,CAAI,CKlDc,CE+CL,CAAA,KAAA,GAAb,EPGI,CAAA,OOHe,EPGnB,EAAI,OAAJ,CKlDkB,CLkDT,COHT,EAAkD;APElD,AIlCqB,ACfH,AjBrBtB,AkBkBa,AVuKb,oBSpKuB,MAAA,GAAA,EAAA,CAAA,CAAA,CAAD;AhBdR,Ae6BW,ACfH,AjBpBhB,AQyLN,SInHI,AZtEE,GCMQ,Ee6BiB,KAAK,CCfP,CLkDzB,CZtEE,CAAwB,EiBoBD,EhBdA,ADNvB,CiBoBuB,CDeE,AhBnCU,CCMT,Ae6Be,ACflB,CAAA,CAAA,CDeE,ACfT,ChBdc,Ae6Be,Kf7BV,Ee6BV,EAA6B,AhBnCtD,EAA0D,SgBmCjC,CAAN,CAAA,Ef7BO,EAAlB,EAGN;AW8DA,AZtEJ,AkBkBQ,AVuKZ,MRzLQ,MAAM,CYsEC,EZtEE,EAAb,CYsEgB,AMpDJ,CAAC,SAAL,EAAgB,GNoDpB;AX7DA,AW8DH,AKnDW,ACDA,AVuKhB,KIrHa,WX5DD,AgBWI,OhBXG,AgBWI,ChBXH,AgBWI,MAAD,CAAP,GAAgB,ChBXxB,EAAyB,EgBWjB;AhBVJ,AewBE,ACZE,AjBrBZ,AkBmBY,AVuKhB,MR1LQ,MgBiCM,EfxBF,EgBYI,ACFA,GlBnBK,CYoER,AInCS,AhBjCA,CCSH,CAAC,CewBK,ChBjCJ,CgBiCI,AhBjCrB,AkBmBqB,CFcA,CCZE,AjBrBE,CkBmBD,EFcH,ACZK,EDYhB,AEdkB,CjBVpB,CAAoB,AgBYE,GCFE,CAAC,CDEC,CAAC,ChBZ3B,GAA8B,YAAA,EiBUd,CAA8B,GDE5B,ACFF,CDEkC,ACF9C,GDEc,EAAqC;AhBXnD,AkBwDR,AF7C6D,AjBpB7D,AkBmBK,AVuKb,IR1LQ,MAAM,EmBiEN,CnBjES,GCSD,EgBWqD,QE6C/C,GAAG,ElBxDM,CAAC,CgBWoD,EAAE,EhBXtE,GgBW0E,AjBpBhD,CiBoBiD,EE6CpD,CnBjEO,CAAC,EmBiEJ,QnBjEnC,CiBoB2D,kBE6CT,MAAlD;AlBvDQ,AWyDH,AIlCL,ACboG,ATuK5G,GIxHI,aXzDY,AeuBJ,ECbgG,GhBVvF,GAAG,AeuBJ,CAAC,ACb8F,EAAA,ChBVvF,OeuBhB,ACbuG,CAAA,EAAA,EDa/E,ACbsF,GDalH,EAAiC,CfvBjB,CgBU2F,ChBVnG,CgBUsH,KAAI,CAAC,OAAxB;AhBTtG,AkBwDL,APOJ,AIxCQ,ACduD,AjBnB3D,AkBoBI,AVuKZ,EIlHI,MAAA,AZzEQ,CYyER,MXlEQ,EgBYkB,CAAd,ACCA,CFaC,GhBjCT,CmBkEI,APOR,CAAI,AZzEoB,CgBiChB,CAAY,CGiChB,CAAS,CHjCL,CAAgB,EEbE,KNqDtB,AMrD2B,CNqD3B,IOPA,EAAyB,GPO7B,CIxCiC,CJwC7B,IIxCI,EAAgC,QJwCxC,CMrD8C,CNqD9B,KOPZ,AD9CI,EC8CqC,AD9CS,gBC8ClD,sBHjCyF,QAAQ,CAAC,UAA9D,GAAwE,GAAxG,EAD6B,CAG7B;AfxBH,AW2DL,AKlDS,AjBnBD,AkBoBI,AVuKhB,MR3LY,MAAM,IAAI,AkBoBN,SAAS,CAAC,OlBpBW,GkBoBrB,GAAuB,WlBpBe,CAAC,CkBoBvC,GlBpBsC,CAAhC,GAAsC,GAAhD;AmBmEJ,AHhCI,AhBlCH,AkBoBI,AVuKb,eUnMiD,CA8BrC,CC4CC,EHhCI,IGgCT,CAAY,GAAZ,CAAgB,CHhCZ,GAAkB,IAAI,UGgCD,KAAzB,EAAgC,AHhCV,CAAc,QAAQ,CAAC,UAAT,IAAuB,EAArC,EAAyC,QAAQ,CAAC,UGgCK,AHhCvD,CAAlB,0BGgCwF,cAAf,CAA7C,GAA2E,IAA3G;AlBrDI,AesBA,ACfA,AjBnBP,AQ2LL,GRhMI,MAKO,GCYC,CDZG,KiBmBC,CDeC,ChBlCK,CCYD,GAAQ,ADZd,EgBkCH,EftBA,CesBe,AhBlCI,KgBkCnB,GhBlCD,EAA8B;AmBmEjC,AHhCC,ACfO,AjBnBR,AQ2LR,IR3LQ,KYqEJ,CZrEU,GgB4BN,AhB5BS,GmBkEL,AF/CI,GDeD,EGgCE,APGb,MKlDuB,CAAC,QE+ChB,CF/CI,GAAwB,AjBnBE,CmBkEV,GnBlEc,CAAC,KiBmBN,CAAD,AjBnBhC,EiBmBgD;AhBPhD,AkBsDwB,APIxB,AInCI,ACfQ,ACCR,AVuKZ,aItHe,CMjDH,EjBTA,EW0DQ,CInCH,GCfO,ChBRL,AiBSE,CjBTD,AiBSE,EFcV,CCfgB,CLkDb,AKlDc,CDeF,CEdf,CjBTJ,AW0D0B,EX1DL,AeuBjB,AEdmB,GNiDQ,CKlDnB,EAAoB,ICCR,GNiDE,CAAgB,EMjDnB,EAAc,QNiDX,IAAgC,IAAnD,GAA2D,IAAlE;AXzDU,AkBqDV,APKH,AInCI,ACfe,AjBpBhB,AkBqBQ,AVuKhB,KIxHoB,GZpER,MCYM,AkBqDiD,ED5CnD,KAAI,ClBrBZ,AkBqBa,CjBTM,CgBQC,AjBpBA,ECYE,EiBSd,CAAY,GAAZ,CjBTqB,AiBSL,CjBTM,OAApB,UiBSuB,WAAzB,EAAsC,4BAA0B,GAA1B,GAA6B,GAAnE;AjBRJ,AkBqDA,AF7CgB,AjBpBhB,AQ4LZ,MR5LY,MAAM,ECYN,EDZU,IYmEF,EK/CQ,ChBRP,AkBqDT,CAAA,ElBrDY,CgBQQ,CAAC,KjBpBI,CiBoBT,CAAY,ChBRN,CAAC,ADZb,CiBoBM,CAAgB,CjBpBH,GAA7B,MCYuB,QgBQkB,KAAzB,EAAgC,oCAAkC,0BAAc,CAAC,CAAC,IAAhB,EAAsB,KAAI,CAAC,iBAA3B,CAAlC,GAA+E,GAA/G;AhBPZ,AkBoDJ,AH7BJ,AhBnCC,AkBoBO,AVwKhB,gBPhLgB,AiBQA,CFeH,IEfO,CAAC,IFeb,GAAiB,EfvBM,AiBQf,CjBRgB,EeuBF,AEfG,GjBRjB,CeuBS,CAAU,IEfnB,CFewB,GAAf,EAAoB,WAApB,CAAjB;AG6BI,APEQ,AK9CQ,AjBnBvB,AkBoBW,AVwKhB,GI3HI,aM7CY,EC2CG,IF5CS,ACCN,GC2CI,AD3CD,CC2CE,CF5CK,CAAC,CCCjB,GC2CG,CAAe,IAAI,AF5CV,CAAe,CAAC,CAAC,EE4CX,CAAU,CF5ChB,wEE4CM,CAAf,CAAP,CAAA;AlBnDI,AkBoDP,APML,AKlDqB,ACCT,AVwKhB,EIvHI,MAAA,CAAA,OX1DY,AiBSA,KjBTI,AgBKI,ChBLH,AgBQK,CLkDtB,AMjDmB,CNiDf,IX1DQ,CAAY,AgBQK,GhBRjB,CAAgB,CgBQN,EAAc,CLkDhC,CAAA,SAAJ,EAAI,EX1DiC,OAAzB,AW0DZ,EX1D8C,AW0DnC,4BX1DC;AWyDZ,AKhDwB,AjBpBxB,AkBqBS,AVwKb,SR7LW,MAAP,AkBgBQ,ODIgB,KAAI,CAAC,KAAL,CAAW,KAAX;AhBRZ,AkBqDR,AnBhEP,AQ6LD,SIzHI,OXzDY,CkBqDH,IlBrDQ,AWyDjB,GXzDoB,IAAI,IkBqDpB,GAAoB,alBrDJ,EAAR;AACH,AkBoDe,APKpB,AKjDoB,AjBlB5B,AkBoBY,AVwKZ,aIzHe,CM/CH,CjBdsB,EAInB,CWyDK,KM/CC,CAAC,EjBdY,CAAtB,CW6DG,CAAgB,EM/CnB,GAAoB,EN+CjB,IAA2B,EAAlC,EM/CyB,KAAD,EAAa;AjBTpC,AkBmDD,APMH,AKjDoB,ACET,AVwKhB,KI3He,eM7CK,KAAK,GAAQ,IAAjB,CAD6B,CAE7B;AC0CR,AHjCH,ACXgB,AT0KrB,GQ/MiB,cGiFJ,oBAAL,GAA4B,KAAK,aAAL,CAAmB,cAAnB,CAA5B;AACA,APKJ,AKjDa,AjBpBX,AkBsBU,AVwKhB,SR9LM,QiBUU,EEsDR,CAAA,AD1CY,MlBtBd,CAA4B,AkBsBP,IlBtBrB,EAA6C,IkBsB/B,KAAsB,WAAtB,IAAqC,KAAK,YAAY,UAA1D,EAAsE;AC0C9E,AHhCU,AhB/Bd,AkBsBgB,AVwKpB,EQ/JkB,IhB/BR,IAAI,GAAG,IAAI,CkBsBD,IFSF,CAAA,AETO,GAAG,ClBtBX,CAAe,GkBsBC,CFSf,AhB/BD,AkBsBiB,CFShB,AhB/Bd,CAD+C,CAG/C,EkBoBgB,UFSF,GAAd,YAAA;AGgCI,AF1CQ,ACEC,AVwKjB,cWhIc,EF1CE,CCAA,EC0CG,IDxCI,IDFI,CAAC,OAAZ,GAAsB,CE0C9B,CAAA,QF1C+B,CAAD,EAAgB;AAClC,AjBnBhB,AkBqBgB,AVwKpB,MR7LQ,GAAG,GAAG,EAAV,IkBqBgB,IDFM,CCED,GAAG,CDFG,GAAG,ACEF,IDFM,CCEV,CAAU,GDFJ,CAAU,CAAC,CAAC,IAAF,IAAU,gBAApB,CAAd,SCEQ,CAAR;AlBpBhB,AkBqBa,AVwKjB,ER7LI,IAAI,CAAC,OAAL,CAAa,UAAC,GAAD,EAAI;ACSE,AkBkDf,AFxCY,AjBlBZ,AQ6LR,QR7Lc,CYoEV,EZpEa,CmB0DT,EAAA,AnB1DY,CmB0DZ,EnB1De,ECQA,AkBkDf,APUQ,CX5DO,ADRG,EYoEtB,AKlDoB,AjBlBJ,EYoEO,CZpEI,GiBkBX,AjBlBA,EiBkBY,CjBlBK,EAA7B;ACQe,AW6Df,AKlDgB,AjBlBhB,AkBqBQ,AVwKhB,IR7LQ,GAAG,GYoEC,CZpEG,IYoEE,CM/CD,CFKJ,ChB1BQ,EiBkBI,CjBlBT,CgB0BE,AELK,CAAC,ClBrBG,CiBkBE,CAAC,CjBlBA,CAAC,AkBqBR,CAAN,CN+CJ,CKlDY,CAAW,GLkDE,CZpEX,CiBkBF,AjBlBe,EAAb,CAAX,EgB0BH,ChB1B8B,GAAlC,GgB0BI,CAAA,GJ0C2C,CAAC,YAA5C,IAA4D,KAAK,eAAL,KAAyB,kBAAkB,CAAC,YAA5G,EAA0H;AX7D3G,AW8DX,AI3CA,ACPS,AjBlBhB,AkBqBQ,AVwKb,GRhMI,EAL+C,CAU/C,QCIyB,AW8DX,CMzDN,GCgDA,APSU,CX9DY,AgBUd,IE2CH,APSC,CAAU,CKlDD,GhBZE,CAAe,OAAO,CAAC,CkBqDxC,ElBrDiB,EAA6B,CkBqDnB,qEPSrB,CAAN;AX7DI,AkBoDuB,APU9B,AI5CG,ACNY,AT2KxB,cPvLgB,AekBJ,CAAA,CAAA,EflBQ,EAAE,AgBYE,MAAM,ChBZD,AgBYE,ChBZD,IgBYA,CAAN,EhBbkC;AAE1C,AekBG,ACNE,AjBjBjB,AkBoBQ,AVwKZ,SR5LW,GAAG,CAAC,CCKC,AiBeJ,CCoCA,IlBnDS,AekBF,AhBvBR,CgBuBQ,AhBvBG,CCKC,ADLZ,CmBwDC,CAAA,AnBxDa,AkBoBJ,CAAC,ElBpBM,CAAC,ICG6B,EDHjC,AkBoBb,GlBpB0B,AkBoBJ,ClBpBvB,CAAP,QkBoB+B,OAAD,EAAsB;AjBdxC,AkBkDJ,APYJ,AI7CW,ACLF,AjBjBhB,AkBoBe,AVwKhB,ER1LA,QYiEY,CAAC,GX9DG,AW8DR,EAAU,AM/CF,CDVA,ICUI,CAAC,GjBfM,EAAE,CiBeb,CAAY,GAAZ,CAAgB,CjBfI,CAAC,eAAR,CiBeY,IjBfgB,CiBezC,EAAgC,CjBfnB,GAAmC,SAAnC,GAA+C,aAHlB,ciBkB+B,0BAAc,OAAO,CAAC,IAAtB,EAA4B,KAAI,CAAC,iBAAjC,CAAzC,GAA4F,GAA5H;AjBdA,AkBiDJ,APaA,AI9CO,ARuKnB,cPvLgB,AW8DE,AI9CO,EGiCb,CAAA,CAAA,APaU,CI9CQ,EfhBP,EAAA,AW8DL,CAAU,OX9DL,CAAA,KegBE,EAAN,CAAA,4BJ8CD,CAAN;AX7DQ,AkBkDF,APYT,AKlDO,AjBhBhB,AkBkBgB,AVyKhB,YWrIkB,IFtCF,GEsCS,CDpCL,ECoCQ,GDpCJ,CAAC,CDFE,CAAC,IhBZQ,EgBYpB,CCEA,EDFqB,ACED,YDFC,ShBbd,0BkBmDL;AlBjDE,AkBkDR,AFtCQ,ACEA,AVyKpB,iBWrIiB,CFtCG,ICEI,CCoCZ,AFtCY,CEsCA,AFtCC,GEsCb,CAAgB,EFtCR,CAAY,GAAZ,CAAgB,ChBZI,UkBkDH,KAAzB,EAAgC,AFtCC,OEsCjC,GAEA,CFxCQ,EAAsC,sBAAoB,KAAI,CAAC,GAA/D;AhBdG,AWiEf,AIjDI,AECY,AVyKxB,WIzHa,IXjEU,EAGA,EeaX,CAAA,AECY,CNgDhB,CAAgB,EX9DM,CAAC,AiBcH,CAAC,GNgDrB,GXjEe,AWiEW,CXrEwB,EWqElD,AMhDgB,CAAe,OAAO,CAAC,IAAvB;AjBZR,AkBkDJ,APWP,AIlDO,ACDQ,AjBjBd,AkBoBe,AVyKrB,KI5Ie,IZjDT,KCOU,IgBUI,CEwCR,ADvCQ,CjBXE,AkBkDV,ADrCU,EjBbE,ADPlB,CiBiBkB,AjBjBM,CiBiBL,EjBjBnB,CkBoBuB,ClBpBS,CCOP,CAAC,EiBaV,EAAc,CDHhB,ChBnBsC,EgBmBnB,WAAnB;AhBTJ,AkBiDJ,AHvCA,ACAQ,AjBjBhB,AkBoBoB,AVyKxB,SR7LW,GAAG,ECOE,AeUG,EAAA,AhBjBD,CgBiBC,CfVC,AgBUA,EhBVE,AWyCP,AM5BS,CFHL,EAAP,AhBjBa,CgBiBb,ACAc,CCGE,CjBvB8B,AiBuB7B,CDHA,IAAT,ACGI,CAAW,ElBpBjB,GkBoBM,ElBpBiB,WAA9B,KACF,GAAG,YAAY,WAAf,IACG;ACMI,AkBgDJ,AFtCQ,AjBfP,AQ2Lb,ER3La,GAAG,CAAC,QCKD,AkBgDE,GnBrDL,CiBeO,CEsCG,EnBrDS,CCKR,EAAE,ADLS,CiBeR,AjBfS,KmBqDxB,CAAA,ClB3D8C,IDM1B,CAAgB,IAAhB,KAAyB,aAH9C,CAAP;ACSY,AWuCD,AK7BE,AjBfhB,AkBiBuB,AV0KxB,GI/II,WXvCY,GgBKA,GhBLM,EAAE,eAAe,CAAC;AAZkB,AWwEtD,AIjDI,ACAK,AjBdb,AkBgBqB,AV0KrB,aPnM6B,CAAN,CAAA,AgBLX,CA4BE,GDAN,CAAA,GCAa,CAAP,EAAU;AEmCZ,AHnCJ,ACCQ,ACEC,AV0KjB,gBS5KgB,MAAM,CAAC,CAAD,CAAN;AEmCJ,AHpCJ,ACEQ,ACEH,AV0Kb,YW1IY,EAAA,AHpCG,CGoCH,AD1CA,GFMJ,CGoCI,AHpCJ;AfvBI,AgB0BC,AjBhBP,AQ4LN,SR5LM,GCVM,QAAQ,ADUd,CAA4B,ECVX,EAAA,CAAA,CDUjB,EAA6C,CCV5B,EAAX,UDUN,EAAoE,UAApE,EAA4F,GAA5F,EAAyG,kBAAzG,EAC4B,OAD5B,EAC2D,iBAD3D,EACuF,eADvF,EACiH,cADjH,EAC+I;AmBkDzI,AFlCH,ACEG,AV0KZ,aSjOe,CAAP,ACuDI,CDvDJ,IEuFI,CAAA,GDhCS,CAAC,OAAV,GAAoB,UAAC,KAAD,EAAkB;ACgCtC,APeD,AM9CK,AV0KhB,EI5HW,aAAA,CAAA,SAAA,CAAA,KAAA,GAAP,YAAA;AOfQ,APgBJ,AIrDH,AEOW,AV0KhB,GQvLkB,MJ2DL,KOhBM,OAAO,APgBlB,COhBmB,EPgBC,IOhBT,CAAe,APgBD,IOhBK,KAAJ,CAAU,OAAV,CAAf,CAAP,CAAA,KPgBgB,EAApB;AACA,AM9CQ,AV0KhB,WI5He,KAAK,IM9CA,MAAJ,EN8CR,AM9CoB;AN+CvB,AIrDO,ACEP,ACKe,AV0KpB,EQjLY,CJkDD,AKvHM,eC4EG,IFPR,CAAA,AEOY,CAAC,KAAL,CAAW,EFPnB,CAAA,EEOQ,eFPR,GAAR,UAA0B,OAA1B,EAAgD,KAAhD,EAAoE;AGoCzD,AHnCP,AEOS,AV0KjB,QQjLY,CAAC,OGmCM,AHnCC,CAAC,AEKL,IC8BQ,ED5BD,CFPf,EAAsB,UGmCX,KAA2B;AAAA,APmB5B,AIrDN,ACEK,AjBlBT,AkBuBY,AV0KpB,EI5HkB,AKnDD,IDFL,IhBhBJ,GgBgBW,CAAC,CJqDF,CAAA,CZrEH,GAAG,CgBgBN,ChBhBJ,AkBuBgB,EFPM,CJqDZ,CAAA,AIrDN,CCEK,ACKY,CDLZ,ECKoB,IAAjB,CADG,CAEH,CDNH,CAAA,IAAA,GAAb,MLmDc,GAAd,CKnDkB,IAAlB,EAA2B,KLmD3B;AXlEQ,AkB+CG,AHjCN,ARiLT,cWhJ8E,CnBjDtE,CCEQ,KAAJ,EAAW,YDFf,OAAA,CAAA;ACGQ,AkBgDE,AnBnDV,AkBwBY,AV0KpB,gBW/IkB,IlBhDI,EiBqBE,CC2BC,ElBhDT,CkBgDY,GD3BG,UAAP,KAAsB,WAAtB,IAAqC,KAAK,YAAY,UAA1D,EAAsE,+CC2BxE;AlB/CL,AkBgDD,AHnCJ,ACCA,AjBlBA,AkByBgB,AV0KxB,QQlLY,ICCA,AjBlBJ,CgBiBA,ACCK,AjBlBL,CAAA,CgBiBW,GCCD,ECOM,CC2BP,ID3BY,EC2BjB,CAAY,AD3BQ,CDPxB,EEkCI,AFlCmB,CEkCH,CD3BS,CAAC,KAAd,WC2Ba,KAAzB,EAAgC,OAAhC;AACA,AHnCA,ACCA,AjBlBU,AkByBD,AV0KrB,iBSjLY,AjBlBU,CiBkBV,AjBlBU,CkBuBF,IC6BR,CAAA,CD3Be;AjBrBf,AkBgDA,AHlCA,ACAA,AjBlBU,AkB0BE,AV0KxB,MQlLY,OAAO,CAAC,GfdH,GiBsBO,CFRZ,CAAgB,CfdhB,CAAY,CiBsBK,EjBtBjB,CACI,AiBqBgB,IAAI,KFRxB,AEQoB,CAAU,GFRK,KfbtB,OADb,Aec6C,EfZzC,GeYJ,oBEQoB,CAAR,MjBpBoB,GAA5B,GAA6B,GAFjC;AAIA,AkB4CA,APgBJ,AIjDI,ACDA,AjBlBU,AkB2BD,AV0KrB,YSnLmB,AjBlBS,IYoEhB,EX5DM,AkB4CC,CFlCO,CAAC,ChBVf,AW4DK,IOhBS,CAAC,AFlCR,CAAe,GjBlBY,CiBkBR,CEkCnB,AnBpDG,CmBoDY,AnBpDZ,GYoEV,AKlDsB,CEkCI,AFlCM,ILkDP,COhBH,CAAU,OAAV,CAAf,CAAP,CAAA,MPgB2C,CAAC,YAAhD,EAA8D,SKlDpC,CAAf,CAAP,CAAA;AEmCH,APgBG,AIjDH,ACDA,ATmLT,KQ1LwE,CAShE,eJgDI,CAAA;AAAA,AMxCQ,AV0KpB,kBU1KoB,MAAM,CAAC,KAAD,CAAN;AjBnBR,AW2DA,AKjDJ,AjBpBM,AkB8BG,AV0KjB,URxMc,KiBoBN,AjBpBW,CCUH,AW2DG,AKjDX,EjBpBc,EAAA,CAAA,EYqEI,CAAC,CX3Df,ADVU,ECUK,ADVb,GYqEK,CAAe,IAAI,KAAJ,CAAU,uEAAV,CAAf,CAAP,CAAA;AX1DI,AW2DP,AIhDD,ACFA,ACWK,AV0Kb,QQnLY,MfXI,CeWG,AEPP,CFOQ,OAAR,CAAgB,EfXA,CAAC,SAAD,CAAZ,EeWJ,CAAJ,EAAsC;AfVjC,AeWD,ACHJ,AjBnBA,AkB+BC,AV0KT,UStLe,GCnEA,ClBgDH,AkBhDJ,CAAA,IlBgDA,EAAW,aiBmBQ,KAAK,MAAjB,EAAyB,KAAzB,EAAgC,KAAK,UAArC,EAAiD,KAAK,GAAtD,EAA4D,KAAK,kBAAjE,EAAqF,IAArF,EAA2F,KAAK,iBAAhG,EAAmH,KAAK,eAAxH,EAAyI,KAAK,OAA9I,CAAP,CAAA;AEmCA,APiBA,AIhDI,AhBtBA,AQyMZ,YRzMY,CgBsBO,IG+BN,APiBA,EZtEM,CgBsBO,CAAC,EhBtBR,EAAA,GgBsBA,AhBtBA,CgBsBgB,ChBtBhB,EYsEX,AZrEQ,EmBoDR,AnBpDQ,CYqEe,AZrEd,EmBoDgB,IAAzB,GH/BW,CAAP,KhBrBI,CAAA,EYqEiC,CAAC,AZrEf,UYqE3B,EZrEqC,KAD1B,IAAA,CAAP;ACWA,AW4DJ,AIhDC,AhBpBA,AQuMT,gBP/LgB,CW4DH,MX5DU,AW4Df,CX5DgB,AW4DJ,GAAZ,CAAgB,OX5DZ,EAAyB,SW4DJ,KAAzB,EAAgC,yBAAhC;AX3DQ,AeYX,ACLA,ATwLL,GQjMY,ACIK,WhBFD,OAAO,CAAC,WAAR,CAAoB,OAApB,GAA8B,IAA9B;AACH,AiBkBR,AV6KL,GU1QiB;AFwFC,ACLP,ATwLX,EQnLkB,ACLP,oBDKO,CAAA,ICLP,CAAA,IDKO,CAAA,IAAA,ACLP,CAAA,EDKP,ECLO,GAAP,KDKmB,GAAnB,EAAgC,ECLhC,SDKA,EAAwD;ACJpD,ACWG,AV6KX,EU7KW,ODXE,KAAL,MCWG,CAAA,SAAA,CAAA,IAAA,GAAP,UAAY,IAAZ,EAAqB;ADVjB,AjBjBE,AkB4BF,AV6KR,QU7KY,ElB5BF,CiBiBK,CjBjBL,CkB4BO,ElB5BS,GiBiBJ,CAAC,GCWX,IDXG,ACWe,EDXtB,GCW2B,ElB5BS,EAAlC,EAAC,GkB4BmB,ClB5Bf,AkB4B8B,GlB5B9B,EAAA,CAAA,CAAA,CAAL,EAAO,AkB4Ba,KlB5BR,AkB4BsC,GlB5BtC,EAAA,AkB4B2C,ClB5B3C,CAAA,CAAZ,iBkB4BkD,CAA0B,IAA9E,EAAoF;ACoBvF,APoBO,AKlDP,AjBjBD,AkB4BQ,AV6KZ,GW5LiB,AFCN,OjBdP,CkB4Ba,MlB5BN,AkB4BC,ClB5BA,AkB4BY,CNuCZ,CAAA,CMvCA,ClB5BD,AkB4BiB,ClB5BxB,GAAgB,KAAhB,SkB4BiC,KAAzB,EAAgC,0CAAwC,0BAAc,IAAd,EAAoB,KAAK,iBAAzB,CAAxC,GAAmF,GAAnH;ANuCA,AZjER,AkB2BQ,AV6KZ,URxMI,CkB2Ba,KlB3BP,CAAC,GAAP,AkB2BQ,ClB3BG,AkB2BY,IAAf,CAAoB,IAApB,SlB3BY,KAApB,EAA2B,MAAI,aAAJ,GAAiB,4BAAjB,GAA8C,aAAa,CAAC,OAAD,EAAU,iBAAV,CAA3D,GAAuF,GAAlH;AmB+CO,APkBC,AKhDA,AjBfF,AkB0BE,AV6KZ,EW1JW,AF9BC,QjBfF,GkB0BS,CNqCD,EOlBP,CAAA,EPkBY,CMrCG,CAAC,ClB1BL,GAAG,CmB6Cd,CAAA,AF9BC,CAAA,ACWO,EAAP,CCmBD,CPkBO,EOlBd,APkBQ,CAAA,EKhDA,CAAA,AjBf0B,CAAC,IiBe3B,CE8BI,EF9BZ,AjBfkC,CAAb,CmB6CrB,EAAsC,AnB7CQ,MiBehC,CAAd,EAAuB,IjBfF,GAAyC,MAAxD;ACKF,AkByCA,AF9BA,AjBfa,AkB0BZ,AV6KT,QW1JY,AF9BA,KE8BK,AF9BA,GhBXL,CAAC,ADJQ,CAAA,MiBeb,ChBXa,CAAC,AgBWQ,EhBXtB,AkByCI,ElBzCc,GkByCM;AlBxCpB,AkBwCoB,AF7BpB,AjBhBS,AQwMrB,WSxLiB,ShBXC,EgBWN,CAAiB,ChBXP,IgBWV,ahBXM,CAAc,QAAQ,CAAC,UAAvB,EAAmC,QAAQ,CAAC,MAA5C,CAAN;AACH,AkBuCD,APiBI,AK7CA,AjBjBS,AkB4Bb,AV6KR,MW5JgE,KF5B/C,ACWF,CNkCH,AZ9De,EY8Df,CAAA,GMlCU,CNkCV,AMlCW,GDXX,AjBjByB,CAAC,EiBiBP,ACWhB,CAAe,ClB5BH,CAAgB,GAAhB,EAAqB,CiBiBpC,4BCWG,CAAP;ACkBI,AnB7CJ,AkB4BH,AV6KL,GUrLW,SlBpBH,GmB6CW,InB7CJ,EAAA,CmB6CW,CAAC,KnB9CqB,CmB8C7B,CAAe,IAAI,KAAJ,CAAU,qEAAV,CAAf,CAAP;AlBtCE,AkBuCL,APiBG,AK7CA,AjBjBJ,AQyMR,USxLgB,EhBXF,ADNN,GiBiBa,EL6CJ,EXxDI,ADNN,EAAA,CCMS,AgBWZ,EAAkB,KjBjBf,CAAA,EY8DH,AZ9DG,EAAO,CY8Da,KXxDO,CAAC,ADN5B,EAAmB,MCMQ,EAAW,EWwDA,CAAC,GZ9DvC,CCM6C,ADRZ,CCQa,IWwDjD,QXxD8B,CAA5B;AACU,AWwDZ,AK7CI,AjBjBR,AkB4BG,AV6KX,EU7KW,UlB5BH,CiBiBa,IL6CJ,AIjDE,EfPK,CAAA,AgBWR,ACWL,CDXkB,ACWlB,CFfa,ACIR,EjBjBI,EAAA,IkB4BT,CFfoB,AEepB,GNkCC,CMlCD,ENkC0B,CIjDN,AhBhBiB,AkB+B5C,CFf2B,EJiDnB,SMlCR;AjBtBoB,AkBwChB,APiBI,AIlDmB,ACKlB,AjBjBL,AkB4BA,AV6KR,QW5JY,ADjBA,CCiBC,GnB7CL,CkB4BS,CCiBC,GPiBD,KMlCT,CCiBA,APiBI,CAAY,AMlCI,CCiBC,EPiBjB,AZ9DW,CY8DK,CZ9DL,iBY8Dc,KAAzB,EAAgC,uCAAhC;AXzDY,AkByCZ,AHlCmB,ACMtB,AjBtBuC,AkBiCpC,AV6KZ,WW5JiB,AnBlDU,CAAN,CAAA,CCSS,AeOC,CAAA,CAAA,IGkCnB,ClBzCY,CAAA,CkByCK,IAAI,kBAAJ,CAAuB,KAAK,SAA5B,CAAjB;AACH,AHjCqB,ACKzB,ACWO,AV6KZ,GSjMY,EE8B8B,CASlC,aHnCsB,CAAA;AAAA,AEiBlB,AV6KZ,WU7KiB,KAAL,CAAW,SAAX;AjB1BE,AeSgB,ACM9B,AjBxBU,AkBoCD,AV6KT,SSzLA,CjBxBU,ECSI,EeSsB,IhBlBlB,CCSG,AeSoB,EhBlBpB,CCSG,CDTH,CCSG,ADTH,CCSG,GDTH,CCSG,CDTd,CCSI,EeSsB,CCMpC,CDN8B,CAAA;AfPtB,AkB2CA,AFzJR,AjB0GI,AQ2MJ,CSrTA,EAAA,OjB0GI,CmB+CW,KAAK,AnB/CV,CAAC,ECIH,CAAA,ADJJ,CAAW,ImB+CA,CAAe,IAAf,CAAoB,IAApB,CAAP,GnB/CgB,KAApB,EAA2B,MAAI,aAAJ,GAAiB,iDAAjB,GAAmE,QAAQ,CAAC,UAA5E,GAAsF,GAAjH;ACII,AkB4CH,ADjBG,AV6KR,GWvKW,QDNI,OAAO,CAAC,OAAR,EAAP;AjB3BA,AWyDI,AIlDU,AEqBjB,AV6KL,GUrLW,SFbW,EfPP,GWyDE,AIlDU,CfPR,EeOW,EAAA,CAAA,IAAA,EAAR,GJkDV,GAAuB,OXzDpB,CACH,QAAQ,CAAC,CWwDgC,CAAC,IXzDvC,EAEH,MWuDA,EXvDQ,CAAC,UAFN,EAGH,OAHG,CAAP,CAAA;AkB8CS,APYL,AIlDI,ARkMhB,EW5JiB,cAAA,CAAA,APYA,AIlDI,MJkDT,CAAY,EOZP,CAAA,APYL,CAAgB,GOZX,GAAb,AHtCY,CAAuB,SGsCjB,EPYe,AIlDrB,EAAoC,CGsChD,EAA+B,APYvB,EAAgC,AIlD5B,kEJkD4F,GAAhE,GAAiE,IAAjG;AACA,AM7BA,AV6KZ,EU7KY,iBN6BA,CAAA,AM7BA,CAAA,SAAA,CAAA,KAAA,GAAR,UAAc,KAAd,EAAwC;AN6BhC,AM5BJ,AV6KR;APvMK,AWsDO,AM3BJ,AV6KR,GP1RiB,KiB6GL,KAAK,CN2BE,OAAO,CAAC,AM3BnB,EAAoB,IN2BT,CAAe,GAAf,CAAP,CAAA;AZ9DX,AkBoCW,AV6KZ;APvMW,ADRX,AkBmCY,AV6KZ,EPxMW,SiB2BM,MjB3BN,CAAA,EiB2BC,CAAe,MjB3BhB,CAAA,AiB2BC,GAAyB,YjB3B1B,AiB2B0B,CAAQ,CAAjC,CjB3BR,UAAuB,GAAvB,EAAkC;AAC9B,AeGkB,ARqM1B,QPxMY,IeGc,GfHP,GAAW,CeGG,CfHzB,EeG+B,GAAG,GAAA,KAAH,GAAS,IAAI,CAAC,GAAL,EAAtB;AGoClB,AHnCY,AEuBR,AV8KZ,WU9KiB,KCYL,CHnCa,GEuBb,CCYK,ADZU,EFvBP,CAAY,GAAZ,CAAgB,EEuBxB,GAA2B,GCY3B,KAAoB,IDZO,CFvBM,AEuBE,CAAnC,IFvBQ,EAAgC,sCAAoC,OAApC,GAA2C,GAA3E;AfHZ,AkBsCwB,AHlCK,AhBb/B,AQkNN,QPzMY,CDTN,UgBa+B,CAAA,ChBb/B,CAAuB,ECSR,IDTf,ECSM,ADT4C,ICSzB,KAAK,GAA5B,EAAiC;AAC7B,AkBqCJ,AHlC6B,AhBZjC,AkBmCQ,AV+KZ,MRlNQ,KkBmCS,ClBnCH,EmB8CqD,GnB9ChD,GkBmCP,CAAe,KlBnCvB,EAA0B,AkBmClB,GAAyB,YAAA,CAAQ,CAAjC;AjBzBA,AkBqCA,AHnCyB,AhBX7B,AQkNR,WPzMiB,ADTF,GCSH,AeE+B,CfFtB,ADTF,IgBW6B,EGmC/B,IlBrCL,CAAoB,CkBqCpB,CAAY,AnB9CT,CCSH,AeE+B,AhBXV,CgBW0B,CfFtB,AkBqCzB,CAAgB,CHnCe,CAAoB,OfFzB,AeEK,CfFN,CeEmC,CfF/B,CAAJ,EAAK,ADTA,GmB8CL,IHnCM,CGmC/B,AHnCyB,CAAA,CGmCO,CnB9C7B,CAAP,+BmB8CmE,KAA/B,GAAoC,wEAApE;AlBrCmC,AkBsCnC,AnB9CP,AkBkCO,AVgLZ,WUhLiB,IjB1B8B,KiB0BnC,CAAe,CjB1B2B,CkBsC1C,CAAA,ClBtC6C,CAAC,AiB0B9C,CjB1B+C,IAAF,CAAO,IAAP,CAAV;AAAsB,AkBsCzD,APYP,AMvBO,AVgLZ,GI5KkB,IX/BN,IiB2BK,SAAL,GAAiB,SAAjB;AjB1BH,AkBqCG,AHpCc,AhBRtB,AkBkCK,AVgLT,MRlNQ,MgBQkB,AhBRZ,KAAK,CmB4CA,EHpCe,ChBR9B,EgBQiC,AhBRZ,EmB4CC,AHpCW,CGoCV,AHpCU,IAAA,EAAX,CGoCP,EAAP,CAAA;AACH,APaS,AZzDV,AQkNR,EIzJkB,SZzDH,IYyDG,CAAA,SAAA,CAAA,KZzDQ,QYyDR,AZzDV,GYyDJ,YAAA;AXlDI,AeEY,AhBRf,AkBkCG,AVgLR,SUhLa,EjB5BE,IiB4BP,CF1BgB,AE0BJ,EjB5BZ,CiB4BA,CAAgB,IF1BQ,CAAC,UAAT,GE0BS,EF1Be,GAA5B,AE0BZ,EF1B6C,AE0Bb,uCAAhC;AjB3BH,AkBsCG,AHpCgB,AR0MxB,GPnNW,akB6CC,GHpCiB,EGoCZ,IHpCO,CAAY,GAAZ,CAAgB,MGoC5B,KAAoB,OHpCiB,WAAzB,EAAsC,oDAAtC;AGoCQ,AHlCR,AhBTpB,AkBiCI,AViLR,MRlNS,EkBiCG,IlBjCe,CAAC,AkBiCX,GlBjCb,EAA6B,CgBSJ,CEwBrB,EAAkB,IFxBF,GAAe,KAAf;AfHxB,AkBqCQ,AHjCa,AhBTb,AkBiCI,AViLZ,SP7MA,CiB4BgB,ClBjCD,EgBKK,CGqCgD,CDT/C,ElBjCb,EgBSmB,IAAI,CfJ/B,GiB4BgB,CAAkB,GFxBK,CAAC,CEwBxB,MAA6B,GFxBd,EEwBmB,CAAC,EFxBI,GAA5B,EAAiC,CEwBf,KAAmB,KAAnB,IAA4B,KAAK,CAAC,IAAN,KAAe,IAAxE,CAAJ,EAAmF;AjBzJ/F,AkBmKY,AHjCY,AhBTnB,AkBiCW,AViLhB,CP3UA,CAAqC,WiB0JhB,MFxBQ,CEwBb,CCSC,ADTY,GjB1J7B,CAAA,AekIwB,AEwBS,CFxBG,CGiCxB,CAAY,CHjCA,CAAgB,AEwBX,CCSjB,ADT2B,CCSX,gBHjCqB,EGiCZ,GHjCb,EGiCZ,AHjC4C,EGiCZ,cDTiC,KAAK,CAAC,IAA5C,GAAgD,IAAhD,ECSoC,CDTiB,ICShD,CDTqD,CAAC,CCSlB,KDTzC,GAAiE,IFxBK,AEwBhF,CAAb,OFxBqG,CAAC,UAA9D,GAAwE,GAAxG,EADoC,CAGpC,iCG+BZ;AACA,ADTC,AViLb,OUnLY,MAEO,IAAI,KAAK,CCShB,CAAA,UDT4B,KAArB,EAA4B;ACSnC,AH/BY,AhBVpB,AkBiCY,AViLhB,SRlNW,IAAI,AkBiCM,MFvBQ,CEuBb,CAAa,KlBjClB,AkBiCK,ClBjCa,EgBUL,GAAkB,ChBV/B,CAAP,EgBU0C,iBAAJ,CAAc,QAAQ,CAAC,UAAT,IAAuB,EAArC,EAAyC,QAAQ,CAAC,UAAlD,CAAlB;AG+BZ,AH9BY,AhBVvB,AkBiCY,AViLb,OUnLmB,MAEA,KCOA,CH9BU,IG8BL,GH9BA,GAAe,KG8B3B,AH9BY,CG8BZ;AlBrCZ,AkBsCS,APSD,AIvCa,AhBTrB,AkBgCgB,AViLhB,SPhNA,IeE2B,AE6BN,INgBR,EIvCc,CEuBX,OjB/BhB,CAA4B,QAA5B,CW+CQ,CX/CwC,EW+CZ,SAA5B,CX/CR,EAAyF;AACrF,AW+CI,AIvCgB,AEuBX,AViLb,MPhNQ,OAAJ,IW+CS,yBAAL,GAAiC,KAAjC;AORA,APUM,AIxCU,AEuBf,AViLT,YIhKc,KOVD,CH9Be,QAAQ,CAAC,CJwCP,GAAG,COVzB,EH9BgB,CG8BI,APUS,CIxCS,MJwCb,CAAY,UAAC,OAAD,EAAU,MAAV,EAAgB;AXhDzD,AkBsCwB,APWhB,AIxCgB,AhBX5B,AkBkCK,AViLL,GUtMY,ClBbZ,MCEY,IWiDA,KAAI,CAAC,CIxCgB,CfT7B,CDFJ,IgBW4B,CAAY,GAAZ,CAAgB,KJwChC,GAAyB,OAAzB,GIxCyC,KAAzB,EAAgC,4CAA0C,0BAAc,QAAQ,CAAC,OAAvB,EAAgC,KAAK,iBAArC,CAA1C,GAAiG,GAAjI;AfRpB,AkBqCA,APYI,AZpDZ,AQoNA,SPjNa,KWiDD,KAAI,CAAC,EXjDT,eWiDI,GAAyB,MAAzB;AXhDA,AkBsCJ,APWC,AIzCmB,AhBZ5B,AkBoCY,AViLZ,EUjLY,IjBhCA,MDJZ,CCImB,AW8Cc,CAAnB,EX9CQ,CkBsCT,GH9BmB,AEwBpB,CAAA,GjBhCkB,CAAC,AeQM,GG8B7B,EDNI,CCMe,ADNf,GFxBgB,CG8BG,ClBtCT,AeQ0B,EfRpC,IkBsCe,CAAY,ADN3B,GAAR,OCMoC,GDNf,ICMc,CDNnC,CCM2C,CDNX;AjB/BxB,AkBsCA,APYJ,AI1CwB,AhBT5B,AkBiCI,AViLR,WRlNI,AkBiCW,KAAK,GNkBZ,CAAA,AMlBgB,GFxBa,IEwBN,GlBjC3B,CAAY,CgBSgB,AEwBI,CFxBW,AEwBV,KlBjCjC,EAAiC,CgBSkB,AEwB/B,CFxBgC,IEwBN,ElBjC9C,CgBS4B,ChBTmC,KkBiCpD,IAAgD,OAAO,KAAK,CAAC,IAAb,KAAsB,QAA7E;ACOI,APWJ,AIzCqB,AhBTrB,AkBiCH,AViLL,GUnLY,MlB/BC,KmBuCD,EnBvCJ,GmBuCQ,AnBvCO,CmBuCN,MnBvCT,amBuCI,GAA2B,OAA3B;AlBtCJ,AkBuCC,APUD,AIxCiB,AhBTjB,AQkNR,SPlNa,ADAA,ImBoCc,CAAnB,APaM,CXjDN,AeIgB,CGqChB,CnBzCA,EYiDW,CZjDK,CgBSO,OhBTvB,CYiDM,CAAgB,KAAhB,CAAsB,KAAK,QAAL,CAAc,cAApC,CAAN,CAAA;AXhDI,AeSgB,AhBTvB,AkBgCL,AVkLA,MPlNY,GiBgCZ,IjBhCmB,GAAG,QAAQ,CAAC,EiBgC/B,EjBhCsB,EAAV;AACA,AkBwCJ,AH/BoB,AEhJ5B,AVyVA,CUzVA,EAAA,gBC+KQ,CAAA,CH/ByB,MAAL,CAAY,GAAZ,CAAgB,kBAAS,KAAzB,EAAgC,oDAAhC;AG+BpB,APOA,AIrCiB,AhBTd,AQkNX,ERlNW,UY8CH,EAAA,CAAA,IAAA,EZ9CG,CAAA,SAAA,CAAA,OAAA,GAAP,YAAA;ACAI,AkBuCA,AH7Ba,AhBTb,AQkNR,QRlNc,CCDD,IDCM,CmBsCL,ClBvCN,CDCsB,GmBsCX,EnBtCgB,OAAL,CAAa,EmBsC7B,CAAkB,KAAlB,CAAN,AnBtCsB,CmBsCtB,AnBtC6C,OAAvB,CAA+B,KAAK,QAApC,CAAtB;ACAA,AOmNR,SPnNa,UAAL;AACA,ADAA,AQmNR,QRnNY,CCAC,IDAI,ECAT,CDAY,CAAC,CAAb,EAAgB;ACCZ,AkBmCJ,AnBnCI,AQmNZ,WRnNiB,CCAC,IAAI,EDAV,CAAa,ECAP,CAAa,MDAnB,CAAuB,KCAQ,CDA/B,CAA8B,CCAC,IDA/B,EAAqC,CAArC,aCAM,CAAN;AkBoCJ,AnBnCC,AQmNT,YWhLQ,EAAA,CAAA,IAAA;AlBnCA,AOoNR;APnNY,AkBmCJ,APSU,AZ3CV,AQmNR,MPpNY,EDCA,IY2CM,CX5CC,ADCF,GCDK,GkBmCd,CAAA,AnBlCI,CAAa,GCDK,CAAC,GW4CG,CX5CZ,CDCV,CCDA,AW4CkD,AZ3C3B,MAAvB,KAAkC,CAAlC,IAAuC,KAAK,OAAL,CAAa,cAAxD,EAAwE;ACApE,AkBkCJ,APUQ,AZ3CJ,AQmNZ,WRnNiB,GY2CD,IZ3CJ,CAAa,GY2CD,EAAE,KAAK,IZ3CnB,GAA8B,CY2ChB,CAAc,GZ3C5B,CY0CkD,AZ1Cd,UAAC,CAAD,EAAE,CAAQ,CAA9C;ACdR,AkB+CI,APWQ,AZ3CP,AQmNT,cWnLc,APWE,KOXG,EPWI,EAAE,KAAK,EOXtB,CAAA,KPWiB,CAAc;AAFuB,AIrC1C,AhBHf,AQmNL,GR5NW,UYiDO,GIrCM,CAAC,KAAK,OAAV,EAAmB;AfHnC,AW6CQ,AIzCY,ARgNxB,SPpNW,OAAP,CW6Ca,MAAL,CAAY,GAAZ,CAAgB,kBAAS,KAAzB,EAAgC,4BAAhC;AX5CX,AkB8BO,APgBI,AI1CY,AhBJxB,AQoNA,SRpNA,GmB8BQ,EAAA,CAAA,IAAA,APgBI,AI1CiB,CJ0CjB,KI1CY,CAAY,EhBJpC,CgBIwB,CAAgB,kBAAS,KAAzB,EAAgC,0DAAwD,GAAC,CAAC,OAA1F;AJ0CZ,AIzCS,AhBxBrB,AQwOA,CRxOA,EAAA,UgBqBoB,MAGO;AJyCf,AIxCY,ARgNxB,cIxKkB,IIxCU,CJwCL,EIxCM,SJwCX,CAAiB,EIxCM,GJwCD,iBAAL,AIxCX,CJwCkC,CIxCH,oBJwCpB,CAA6C,gBAA7C,CAAjB,CAAN,CAAA;AIvCgB,ARgN5B;AQ/M4B,ARgN5B,qBQhNiC,MAAL,CAAY,GAAZ,CAAgB,kBAAS,KAAzB,EAAgC,oDAAhC;AJsChB,AIrCa,AhBPzB,AQuNA,YI3KY,EAAA,CAAA,AIxCY,IJwCZ,EIrCmB;AACH,AhBP5B,AQuNA,IRvNA,aAAA;AY6CY,AIrCgB,AhBR5B,AQwNA,iBI3KiB,IIrCgB,EJqCrB,CAAY,GAAZ,CAAgB,GIrCA,GAAkB,GAAlB,SJqCS,WAAzB,EAAsC,wBAAsB,KAAK,QAAL,CAAc,IAApC,GAAwC,IAA9E,GAEA;AOnBP,AHnBuB,AhBT5B,AQyNA,GWlNiB,SnBPjB,SgBSiC,OAAL,GAAe,KAAf;AJuChB,AItCa,AhBCrB,AQ+MJ,WR/MI,MYqCa,OZrCb,CAAY,MYqCJ,SZrCR,EAAqC;AmBmBvB,APmBN,AItCS,AhBCb,AQ+MR,EW7LkB,OnBlBL,OmBkBK,CAAA,APmBD,OZrCT,EmBkBU,CAAA,AnBlBa,QYqCnB,IOnBM,GAAd,AnBlBI,UmBkBuB,KAA3B,EAAwC;APoBhC,AZrCJ,AQ+MR,SR/Ma,QYqCI,KZrCT,GAAqB,OAArB,OYqCI;AAEA,AZtCP,AQ+ML,mBIzKY,CAAA;AAAA,AJ0KZ;AI1KY,AZpCD,AQ+MX,ER/MW,YYoCO,CZpCP,CAAA,SAAA,CAAA,GAAA,CYoCC,CAAA,CZpCR,UAAW,QAAX,EAA+B,OAA/B,EAA8C;AAC1C,AQ+MR,QR/MY,QAAQ,IAAI,KAAK,eAArB,EAAsC;AmBctC,AnBbI,AQ+MZ,cR/MoB,QAAR;AmBcJ,APoBI,AZjCI,AQ+MhB,YI9KY,CZjCS,CYiCT,CAAA,IAAA,IAEA,QZnCkB,QAAd;AmBcR,APsBI,AZnCI,AQ+MhB,aR/MqB,kBAAS,KAAd;AmBcR,APsBI,AZnCQ,AQ+MpB,eR/MyB,EmBaZ,SAAL,EnBbY,CmBaK,AnBbc,KmBa/B,AnBbY,CAAyB,MAAI,IAAI,IAAJ,GAAW,WAAX,EAAJ,GAA4B,IAA5B,GAAiC,kBAAS,QAAT,CAAjC,GAAmD,IAAnD,GAAwD,OAAjF;AACA,AQ+MpB;AACA;AI7KY,AZlCI,AQgNhB,aRhNqB,GYkCL,KAAK,UZlCS,OAAd,GYkCJ,EAA+B;AAC3B,AZlCI,AQgNpB,eRhNyB,aAAL,CAAmB,IAAnB,CAAwB,MAAI,IAAI,IAAJ,GAAW,WAAX,EAAJ,GAA4B,IAA5B,GAAiC,kBAAS,QAAT,CAAjC,GAAmD,IAAnD,GAAwD,OAAhF;AYmCJ,AZlCI,AQgNpB;AWpMY,APuBI,AJ8KhB,mBWrMY,CAAA;AAAA,APwBI,AZnCA,AQiNhB,aRjNqB,OYmCC,KAAK,MZnCG,WAAd,GYmCA;AOxBJ,APyBC,AI/CD,AhBYQ,AQiNpB,cWvMkB,CnBVO,EgBZR,EGsBM,IHtBX,CAAY,GAAZ,CAAgB,AhBYR,CAAmB,IAAnB,CAAwB,KmBUhC,CAAA,AnBVoC,IAAI,EgBZf,EhBYW,GgBZpC,AhBY+C,EgBZf,ShBYI,EAAJ,GAA4B,IAA5B,GAAiC,kBAAS,IgBZ1E,GAEA,ChBUiE,CAAjC,GAAmD,IAAnD,GAAwD,OAAhF;AgBTR,AhBUQ,AQiNpB;AACA;AWzMY,AHlBA,AhBUI,AQkNhB,YW1MY,EAAA,CAAA,CHlBI,CAAC,EGkBL,GHlBU,WAAV,EAAuB;AACnB,AhBUI,AQkNpB,mBQ5NqB,YAAL;AACH,AhBUO,AQkNpB,eRlNyB,aAAL,CAAmB,GAAnB,CAAuB,MAAI,IAAI,IAAJ,GAAW,WAAX,EAAJ,GAA4B,IAA5B,GAAiC,kBAAS,QAAT,CAAjC,GAAmD,IAAnD,GAAwD,OAA/E;AACA,AQkNpB;ARhOY,AQiOZ;AInLY,AZ9BH,AQkNT,iBIpLiB,MAAL,CAAY,GAAZ,CAAgB,kBAAS,KAAzB,EAAgC,sCAAoC,GAApC,GAAqC,2CAArE;AAEA,AZ/BP,AQkNL,GRrOW,cYkDM,cAAL;AACA,AJmLZ,iBInLiB,gBAAL,IAEA;AACA,AZlCZ,AQmNA,SRnNA,aAAA;AApCA,AQwPA,CRxPA,EAAA;AYuEY,AJkLZ,mBIlLY,CAAA;AAAA,AJmLZ;AInLY,AJoLZ,cIpLkB,KAAK,UAAL,CAAgB,IAAhB,CAAqB,GAArB,CAAN,CAAA;AZjCZ,AQsNA,iBW/MY,KAAK,WAAL,OAAA,CAAA;AAAA,AnBNN,AQsNN,SRtNM,kBAAA,GAAA;AmBMM,APwBA,AI9CP,AhBiBD,AQsNJ,GQlSkB,GhB4EV,QmBKI,CAAA,CAAA,SnBLe,GAAG,sBAA1B;AY8BQ,AJyLZ;AIxLY,AI9CK,AhBgBb,AQuNJ,EQvOiB,IhBgBT,MY8BI,EAAA,AZ9BI,CY8BJ,AZ9BK,IY8BL,EZ9BR,CgBhBa,CAAA,AhBgBQ,SgBhBR,CAAA,IAAA,GAAb,UAAkB,IAAlB,EAA2B;AhBiBvB,AQuNR,IRvNQ,mBAAmB,GAAG,YAAtB;AY8BI,AZ7BP,AQuNL,kBI1LkB,GAAN;AI9CJ,ARyOR,YQzOY,CAAC,KAAK,OAAV,EAAmB;AGqBX,AHpBJ,AhBiBR,AQwNJ,SRxNW,CAAE,OgBjBD,CAAA,CGoBI,CAAA,SnBHL,EAAuB,kBAAkB,CAAC,OAAD,EAAU,SAAS,EAAnB,EAAuB,UAAU,EAAjC,EAAqC,iBAAiB,EAAtD,CAAzC,CAAP;AmBGY,AHpBJ,AhBkBX,AQwND;AWtNgB,AHpBJ,AhBoBZ,AQuNA,YQ3OmB,EGoBG,KAAK,AHpBD,CAAC,MAAR,CAAe,CGoBZ,CAAe,EHpBC,EGoBhB,EAAN,CAAA,AHpBkB,CAAU,8CAAV,CAAf,CAAP,CAAA;AACH,AR2OT;AACA;AWzNgB,AHlBR,AhBmBF,AQyNN,SRzNM,GmBDU,EAAA,CAAA,AHlBR,CAAA,GGkBQ,QnBCV,CAA6B,OAA7B,EAA8C,EAA9C,EAA0D,OAA1D,EAA2E,cAA3E,EAA6G;AgBnB3G,AhBoBJ,AQyNJ;AIhMK,AI7CG,AhBqBJ,AQyNJ,GInPkB,GZ0BV,IgBrBO,KhBqBE,GAAW,gBgBrBD,IhBqBvB,CgBrB4B,MAAjB,EAAyB,aAAzB,EAAwC,KAAK,UAA7C,EAAyD,KAAK,GAA9D,EAAoE,KAAK,kBAAzE,EAA6F,IAA7F,EAAmG,KAAK,iBAAxG,EAA2H,KAAK,eAAhI,EAAiJ,KAAK,OAAtJ,CAAP,CAAA;AJ+CJ,AZxBA,AQwNJ,MRxNU,aAAa,GAAG,OAAO,CAAC,KAAR,CAAc,GAAd,CAAtB;AACA,AQwNJ,ERxNI,SAAS,IAAO,aAAa,CAAC,CAAD,CAAb,GAAgB,GAAhB,GAAoB,aAAa,CAAC,CAAD,CAAjD;AgBvBC,AhBwBD,AQwNJ,ERxNI,CgB7Ba,QhB6BJ,IAAI,OAAK,OAAL,GAAY,IAAzB;AQyNJ;AQ/OiB,AhBwBb,AQwNJ,EQhPiB,IhBwBT,EAAE,IAAI,EAAE,KAAK,EAAjB,CgBxBa,CAAA,AhBwBQ,SgBxBR,CAAA,IAAA,GAAb,YAAA;AGiBY,AnBQR,AQwNR,IRxNQ,SAAS,ImBRI,AnBQG,EAAE,GAAA,CmBRV,CAAY,EnBQpB,CmBRQ,CAAgB,kBAAS,KAAzB,EAAgC,kDAAgD,GAAhD,GAAiD,IAAjF;AACA,AP8BC,AZtBZ,AQwNL,EIlMiB,CZxBb,MAEO,MYsBM,CAAA,CO9BI,QP8BJ,CAAA,IAAA,CO9BD,EP8BZ,YAAA;AZrBI,AQwNR,IRxNQ,SAAS,IAAI,cAAb;AACH,AQwNL;AACA;ARvNI,AQwNJ,ERxNI,SAAS,IAAI,KAAG,OAAhB;AgB7BI,ARsPR,iBQtPa,MAAL,CAAY,GAAZ,CAAgB,kBAAS,KAAzB,EAAgC,2CAAhC,GAEA;AGkBI,AP6BE,AZlBV,AQwNJ,MRxNQ,MYkBM,KO7BG,GnBWb,EAAoB,EYkBE,EO7Bd,CP6BiB,EO7BA,GP6BK,MO7BtB,MP6BE;AAEN,AIhDA,AhB6BA,AQwNR,IRxNQ,SAAS,IYmBJ,AIhDA,AhB6BQ,OgB7Bb,AhB6BkB,GgB7BH,CJgDf,GAAmB,CIhDnB,IJgDwB,EZnBxB,UYmBmB,EAAnB;AACA,AIhDA,AhB6BH,AQwNL,GR1NI,MAEO,QgB7BE,EJgDL,CAAA,MIhDA,CAAe,KAAf;AJgDA,AZlBA,AQwNR,IRxNQ,SAAS,IAAI,2BAAb;AYkBA,AZjBH,AQwNL,cIvMc,KAAK,WAAX,CAAA;AJwMR;AWtOY,AnBeR,AQwNJ,ERxNI,SAAS,IAAI,EmBfA,CnBeb,KmBfQ,CAAY,GAAZ,CAAgB,kBAAS,KAAzB,EAAgC,wFAAhC;AP8BJ,AZdJ,AQwNJ,SRxNW,GYcH,EAAA,CAAA,GZdJ,CYcI;AI7CI,AhBgCX,AQwND,mBQxPY,CAAA;AAAA,ARyPZ;AQzPY,AhBkCZ,AQwNA,SRxNA,KgBlCkB,IhBkClB,CgBlCuB,EhBkCvB,OgBlCY,CAAA;AhBmCR,AQwNJ,MRxNQ,QAAQ,CAAC,MAAb,EAAqB;AACjB,AQwNR,YRxNgB,OAAO,CAAC,QAAhB,UYYI;AIhDA,AhBqCA,AQwNZ,WRxNiB,CgBrCL,EAAA,CAAA,GhBqCA,CgBrCA,IAEA;AhBoCI,AQwNhB,eRxNuB,YAAP;AYWJ,AJ8MZ,mBI9MY,CAAA;AOhCP,APgCO,AI9CA,AhBoCA,AQyNZ,GW1QkB,QnBiDD,MgBpCA,EhBoCL,IgBpCA,CAAY,GAAZ,CAAgB,kBAAS,KAAzB,EAAgC,uDAAqD,KAAK,GAA1D,GAA6D,GAA7F;AJ8CA,AI5CM,AhBmCF,AQyNhB,YQ5PkB,EJ4CA,CZTK,IgBnCE,GAAG,AhBmCZ,EgBnCE,EJ4CN,CAAA;AO9BM,AHbA,AR4PlB,EW/OkB,UHbA,EAAA,EGaA,CAAA,AHbgB,SGahB,CAAA,aAAA,GAAd,MHbc,EAAC,EGaa,IHbb,GAAA,EAAA,CAAA,CAAA,CAAD,EGad,AHbqB,EGaqC,GHbhC,GAAA,EAAA,CAAA,CAAA,CAAZ;AACN,AhBkCA,AQ0NZ,WR1NiB,CgBlCL,MhBkCA,CgBlCO,CAAC,MAAD,CAAP,GAAgB,KAAhB;AJyCA,AIvCM,AhBiCF,AQ0NhB,YQ3PkB,GhBiCK,OAAP,GgBjCe,GAAgB;AJwCnC,AIvCI,AR2PhB,YIpNY,EAAA,AIvCI,CJuCJ,IAAA,EIvCW,EAAA,QAAA,CAAA,EAAA,EAAO,OAAP,EAAmB,KAAK,OAAxB,CADwB;AAE/B,AhBgCJ,AQ2NZ,cQ3PgB,eAAe,EAAE,KAAK;AAFS,AhBmC/B,AQ2NhB,aQ9PkB,EhBmCK,OAAO,CAAC,QAAf;AgB/BU,AhBuBlB,AQoOR,mBQ3P0B,CAAA;AGSd,AHTc,AhBiCrB,AQ2NL,GRtOI,MAWO,GmBxBC,GAAG,GAAG,KAAK,OAAX;AACJ,AHVkB,AhBkClB,AQ2NR,WR3Ne,EAAP,CgBlCwB,GGUnB,EHVwB,cAAL,EGUxB,AHVkB,CAAA,EGUQ,KAAK,OAAL,CAAa,kBAAvC;AnByBH,AQ2NL;AR1NC,AQ2ND;AQ/PkB,ARgQlB,YQhQkB,KAAK,GAAG,EAAA,CAAA,IAAA,EAAR;AACN,AhBqCZ,AQ2NA,SR3NA,QgBrCiB,ShBqCjB,GAAA,KgBrCY,CAAuB,aAAvB,EAAsC,KAAtC;AACA,AhBqCR,AQ2NJ,MR3NQ,QAAQ,CAAC,IgBrCL,CAAA,ChBqCR,EAAqB;AgBrCb,AhBsCJ,AQ2NR,WR3Ne,MmB3BC,CnB2BM,CAAC,GmB3BF,KnB2BN,CAAiB,CmB3BhB,CAAa,EnB2BrB,emB3BQ,OAAA,CAAA;AAAA,AHXJ,AhBuCP,AQ2NL,cQlQkB,KAAK,UAAL,CAAgB,MAAhB,CAAuB,KAAK,GAA5B,EAAkC,aAAlC,CAAN,CAAA;AGWI,AXwPhB,cWxPgB,CAAA,CAAA;AnB6BZ,AQ4NJ,SR5NW,SmB5BS,AnB4BhB,KmB5BqB,OAAL,CAAa,SAAb,KAA2B,8BAAkB,aAA7C,OAAA,CAAA;AAAA,AHZR,AhByCX,AQ4ND,YQrQY,EAAA,CAAA,IAAA;AGYQ,AX0PpB,cW1PoB,CAAA,CAAA,EACA;AHXR,AhByCZ,AQ4NA,SR5NA,QgBzCiB,EhByCjB,GAAA,CgBzCY,CAAY,GAAZ,CAAgB,kBAAS,KAAzB,EAAgC,8CAAhC;AGYQ,AnB8BhB,AQ4NJ,MR5NQ,QAAQ,CAAC,EmB9BQ,InB8BrB,EAAqB,GmB9BL,GAAiB,KAAK,kBAAL,CAAwB,8BAAkB,UAA1C,CAAjB,EACA;AACA,APsBf,AZOG,AQ4NR,GIhPiB,QZoBF,QAAP;AACH,AQ4NL,GR9NI,MAEO;AmB7BS,APuBR,AZOJ,AQ4NR,EInOY,SZOG,IYPH,CAAA,GOvBQ,CAAA,AnB8BZ,KYPI,CAAA,YAAA,GAAR,UAAqB,KAArB,EAAkC;AOvBlB,APwBZ,AZOH,AQ4NL,QInOY,KAAK,eAAL,KAAyB,kBAAkB,CAAC,YAAhD,EAA8D;AOxBlD,APyBR,AItCA,AhB6CX,AQ4ND,WInOiB,GOzBS,GPyBd,AItCK,CJsCO,COzBO,EPyBnB,CAAgB,CItChB,CAAY,GAAZ,CAAgB,KGaF,CAAoB,GAApB,EAAyB,CPyBd,KAAzB,CItCyB,CJsCO,IItChC,EGac,AHbkB,CGaxB,CAAA,wBPyBsD,KAA9B,GAAmC,MItCnE,GAEA,mDJoCA;AACA,AIpCA,ARuQZ,aInOmB,OAAO,CAAC,OAAR,EAAP;AACH,AJmOT;AWhQoB,AHPR,ARwQZ,iBQxQiB,YAAL;AGQQ,AP8BZ,AJmOR,QInOY,KAAK,eAAL,KAAyB,kBAAkB,CAAC,aAAhD,EAA+D;AO7BnD,AP8BR,AJmOZ,WInOiB,CO9BG,EAAA,CAAA,EP8BR,CAAY,CO9BJ,EP8BR,CAAgB,kBAAS,KAAzB,EAAgC,iCAA+B,KAA/B,GAAoC,yEAApE;AACA,AJmOZ,aInOmB,KAAK,WAAZ;AACH,AJmOT;AACA;AIlOQ,AJmOR,SInOa,eAAL,GAAuB,kBAAkB,CAAC,aAA1C;AAEA,AJkOR,SIlOa,MAAL,CAAY,GAAZ,CAAgB,kBAAS,KAAzB,EAAgC,yBAAhC;AJmOR;AWrQoB,APoCZ,AJkOR,QIlOY,KAAK,KOpCS,IAAI,KAAJ,CAAU,KPoC5B,EAA+B,uEOpCb,CAAN;APqCR,AJkOZ;AIjOY,AJkOZ;AIjOY,AIhDP,ARkRL,GQnTiB;AJkFL,AJkOZ,WIlOiB,MAAL,CAAY,GAAZ,CAAgB,kBAAS,KAAzB,EAAgC,+DAAhC;AAEA,AIjDA,ARkRZ,EQlRY,IJiDA,YAAY,CAAC,GIjDb,CAAA,CJiDkB,QIjDlB,CAAA,WJiDY,CAAZ,AIjDA,GAAR,YAAA;AJkDQ,AIjDJ,ARkRR,QQlRY,GJiDK,EIjDA,OAAT,EAAkB,SJiDd,GAA4B,SAA5B;AAEA,AIlDA,ARkRZ,UQlRgB,CJkDC,SIlDS,GAAG,CJkDjB,8CIlDA;AGQQ,AP2CR,AJgOZ,YW3QoB,CP2CD,OAAO,CAAC,OAAR,CO3CkB,CP2CzB,EO3CuD,IAA/C;AACA,AP2CX,AInDG,ARmRZ,UQnRgB,EGQI,GHRC,MGQQ,GAAG,CAAZ,AHRR,EAAqB;AACjB,ARmRhB,QQnRgB,UAAU,IAAI,aAAa,KAAK,UAAhC;AJoDR,AInDK,ARmRb,SIhOa,cAAL;AACA,AJgOR,SIhOa,gBAAL;AACA,AIpDI,ARoRZ,SIhOa,EIpDI,MAAL,CAAY,GAAZ,CAAgB,OJoDpB,GAA4B,KAAK,GIpDJ,CJoDQ,IAAI,AIpDrC,EAAgC,GJoDC,CAAU,MIpD3C,+DJoDiC,CAArC,CA9B8B,CAgC9B;AACA,AItDI,ARoRZ,WQpRiB,OAAL,CAAa,KAAK,UAAlB;AJuDJ,AItDC,ARoRT;AW9QwC,AHLnC,ARoRL,GQ7RY,wBGc4B,CA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":"signalr_connect.dcff8d4d.js","sourceRoot":"..","sourcesContent":["// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n/** Error thrown when an HTTP request fails. */\r\nexport class HttpError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // tslint:disable-next-line:variable-name\r\n    private __proto__: Error;\r\n\r\n    /** The HTTP status code represented by this error. */\r\n    public statusCode: number;\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     * @param {number} statusCode The HTTP status code represented by this error.\r\n     */\r\n    constructor(errorMessage: string, statusCode: number) {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n        this.statusCode = statusCode;\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n\r\n/** Error thrown when a timeout elapses. */\r\nexport class TimeoutError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // tslint:disable-next-line:variable-name\r\n    private __proto__: Error;\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.TimeoutError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    constructor(errorMessage: string = \"A timeout occurred.\") {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n\r\n/** Error thrown when an action is aborted. */\r\nexport class AbortError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // tslint:disable-next-line:variable-name\r\n    private __proto__: Error;\r\n\r\n    /** Constructs a new instance of {@link AbortError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    constructor(errorMessage: string = \"An abort occurred.\") {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { AbortSignal } from \"./AbortController\";\r\nimport { MessageHeaders } from \"./IHubProtocol\";\r\n\r\n/** Represents an HTTP request. */\r\nexport interface HttpRequest {\r\n    /** The HTTP method to use for the request. */\r\n    method?: string;\r\n\r\n    /** The URL for the request. */\r\n    url?: string;\r\n\r\n    /** The body content for the request. May be a string or an ArrayBuffer (for binary data). */\r\n    content?: string | ArrayBuffer;\r\n\r\n    /** An object describing headers to apply to the request. */\r\n    headers?: MessageHeaders;\r\n\r\n    /** The XMLHttpRequestResponseType to apply to the request. */\r\n    responseType?: XMLHttpRequestResponseType;\r\n\r\n    /** An AbortSignal that can be monitored for cancellation. */\r\n    abortSignal?: AbortSignal;\r\n\r\n    /** The time to wait for the request to complete before throwing a TimeoutError. Measured in milliseconds. */\r\n    timeout?: number;\r\n\r\n    /** This controls whether credentials such as cookies are sent in cross-site requests. */\r\n    withCredentials?: boolean;\r\n}\r\n\r\n/** Represents an HTTP response. */\r\nexport class HttpResponse {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     */\r\n    constructor(statusCode: number);\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code and message.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     * @param {string} statusText The status message of the response.\r\n     */\r\n    constructor(statusCode: number, statusText: string);\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code, message and string content.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     * @param {string} statusText The status message of the response.\r\n     * @param {string} content The content of the response.\r\n     */\r\n    constructor(statusCode: number, statusText: string, content: string);\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code, message and binary content.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     * @param {string} statusText The status message of the response.\r\n     * @param {ArrayBuffer} content The content of the response.\r\n     */\r\n    constructor(statusCode: number, statusText: string, content: ArrayBuffer);\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code, message and binary content.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     * @param {string} statusText The status message of the response.\r\n     * @param {string | ArrayBuffer} content The content of the response.\r\n     */\r\n    constructor(statusCode: number, statusText: string, content: string | ArrayBuffer);\r\n    constructor(\r\n        public readonly statusCode: number,\r\n        public readonly statusText?: string,\r\n        public readonly content?: string | ArrayBuffer) {\r\n    }\r\n}\r\n\r\n/** Abstraction over an HTTP client.\r\n *\r\n * This class provides an abstraction over an HTTP client so that a different implementation can be provided on different platforms.\r\n */\r\nexport abstract class HttpClient {\r\n    /** Issues an HTTP GET request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public get(url: string): Promise<HttpResponse>;\r\n\r\n    /** Issues an HTTP GET request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @param {HttpRequest} options Additional options to configure the request. The 'url' field in this object will be overridden by the url parameter.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public get(url: string, options: HttpRequest): Promise<HttpResponse>;\r\n    public get(url: string, options?: HttpRequest): Promise<HttpResponse> {\r\n        return this.send({\r\n            ...options,\r\n            method: \"GET\",\r\n            url,\r\n        });\r\n    }\r\n\r\n    /** Issues an HTTP POST request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public post(url: string): Promise<HttpResponse>;\r\n\r\n    /** Issues an HTTP POST request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @param {HttpRequest} options Additional options to configure the request. The 'url' field in this object will be overridden by the url parameter.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public post(url: string, options: HttpRequest): Promise<HttpResponse>;\r\n    public post(url: string, options?: HttpRequest): Promise<HttpResponse> {\r\n        return this.send({\r\n            ...options,\r\n            method: \"POST\",\r\n            url,\r\n        });\r\n    }\r\n\r\n    /** Issues an HTTP DELETE request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public delete(url: string): Promise<HttpResponse>;\r\n\r\n    /** Issues an HTTP DELETE request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @param {HttpRequest} options Additional options to configure the request. The 'url' field in this object will be overridden by the url parameter.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public delete(url: string, options: HttpRequest): Promise<HttpResponse>;\r\n    public delete(url: string, options?: HttpRequest): Promise<HttpResponse> {\r\n        return this.send({\r\n            ...options,\r\n            method: \"DELETE\",\r\n            url,\r\n        });\r\n    }\r\n\r\n    /** Issues an HTTP request to the specified URL, returning a {@link Promise} that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {HttpRequest} request An {@link @microsoft/signalr.HttpRequest} describing the request to send.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an HttpResponse describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public abstract send(request: HttpRequest): Promise<HttpResponse>;\r\n\r\n    /** Gets all cookies that apply to the specified URL.\r\n     *\r\n     * @param url The URL that the cookies are valid for.\r\n     * @returns {string} A string containing all the key-value cookie pairs for the specified URL.\r\n     */\r\n    // @ts-ignore\r\n    public getCookieString(url: string): string {\r\n        return \"\";\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// These values are designed to match the ASP.NET Log Levels since that's the pattern we're emulating here.\r\n/** Indicates the severity of a log message.\r\n *\r\n * Log Levels are ordered in increasing severity. So `Debug` is more severe than `Trace`, etc.\r\n */\r\nexport enum LogLevel {\r\n    /** Log level for very low severity diagnostic messages. */\r\n    Trace = 0,\r\n    /** Log level for low severity diagnostic messages. */\r\n    Debug = 1,\r\n    /** Log level for informational diagnostic messages. */\r\n    Information = 2,\r\n    /** Log level for diagnostic messages that indicate a non-fatal problem. */\r\n    Warning = 3,\r\n    /** Log level for diagnostic messages that indicate a failure in the current operation. */\r\n    Error = 4,\r\n    /** Log level for diagnostic messages that indicate a failure that will terminate the entire application. */\r\n    Critical = 5,\r\n    /** The highest possible log level. Used when configuring logging to indicate that no log messages should be emitted. */\r\n    None = 6,\r\n}\r\n\r\n/** An abstraction that provides a sink for diagnostic messages. */\r\nexport interface ILogger {\r\n    /** Called by the framework to emit a diagnostic message.\r\n     *\r\n     * @param {LogLevel} logLevel The severity level of the message.\r\n     * @param {string} message The message.\r\n     */\r\n    log(logLevel: LogLevel, message: string): void;\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\n\r\n/** A logger that does nothing when log messages are sent to it. */\r\nexport class NullLogger implements ILogger {\r\n    /** The singleton instance of the {@link @microsoft/signalr.NullLogger}. */\r\n    public static instance: ILogger = new NullLogger();\r\n\r\n    private constructor() {}\r\n\r\n    /** @inheritDoc */\r\n    // tslint:disable-next-line\r\n    public log(_logLevel: LogLevel, _message: string): void {\r\n    }\r\n}\r\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { MessageHeaders } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { IStreamSubscriber, ISubscription } from \"./Stream\";\r\nimport { Subject } from \"./Subject\";\r\n\r\n// Version token that will be replaced by the prepack command\r\n/** The version of the SignalR client. */\r\nexport const VERSION: string = \"0.0.0-DEV_BUILD\";\r\n\r\n/** @private */\r\nexport class Arg {\r\n    public static isRequired(val: any, name: string): void {\r\n        if (val === null || val === undefined) {\r\n            throw new Error(`The '${name}' argument is required.`);\r\n        }\r\n    }\r\n    public static isNotEmpty(val: string, name: string): void {\r\n        if (!val || val.match(/^\\s*$/)) {\r\n            throw new Error(`The '${name}' argument should not be empty.`);\r\n        }\r\n    }\r\n\r\n    public static isIn(val: any, values: any, name: string): void {\r\n        // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.\r\n        if (!(val in values)) {\r\n            throw new Error(`Unknown ${name} value: ${val}.`);\r\n        }\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport class Platform {\r\n    public static get isBrowser(): boolean {\r\n        return typeof window === \"object\";\r\n    }\r\n\r\n    public static get isWebWorker(): boolean {\r\n        return typeof self === \"object\" && \"importScripts\" in self;\r\n    }\r\n\r\n    public static get isNode(): boolean {\r\n        return !this.isBrowser && !this.isWebWorker;\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport function getDataDetail(data: any, includeContent: boolean): string {\r\n    let detail = \"\";\r\n    if (isArrayBuffer(data)) {\r\n        detail = `Binary data of length ${data.byteLength}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${formatArrayBuffer(data)}'`;\r\n        }\r\n    } else if (typeof data === \"string\") {\r\n        detail = `String data of length ${data.length}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${data}'`;\r\n        }\r\n    }\r\n    return detail;\r\n}\r\n\r\n/** @private */\r\nexport function formatArrayBuffer(data: ArrayBuffer): string {\r\n    const view = new Uint8Array(data);\r\n\r\n    // Uint8Array.map only supports returning another Uint8Array?\r\n    let str = \"\";\r\n    view.forEach((num) => {\r\n        const pad = num < 16 ? \"0\" : \"\";\r\n        str += `0x${pad}${num.toString(16)} `;\r\n    });\r\n\r\n    // Trim of trailing space.\r\n    return str.substr(0, str.length - 1);\r\n}\r\n\r\n// Also in signalr-protocol-msgpack/Utils.ts\r\n/** @private */\r\nexport function isArrayBuffer(val: any): val is ArrayBuffer {\r\n    return val && typeof ArrayBuffer !== \"undefined\" &&\r\n        (val instanceof ArrayBuffer ||\r\n            // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\r\n            (val.constructor && val.constructor.name === \"ArrayBuffer\"));\r\n}\r\n\r\n/** @private */\r\nexport async function sendMessage(logger: ILogger, transportName: string, httpClient: HttpClient, url: string, accessTokenFactory: (() => string | Promise<string>) | undefined,\r\n                                  content: string | ArrayBuffer, logMessageContent: boolean, withCredentials: boolean, defaultHeaders: MessageHeaders): Promise<void> {\r\n    let headers = {};\r\n    if (accessTokenFactory) {\r\n        const token = await accessTokenFactory();\r\n        if (token) {\r\n            headers = {\r\n                [\"Authorization\"]: `Bearer ${token}`,\r\n            };\r\n        }\r\n    }\r\n\r\n    const [name, value] = getUserAgentHeader();\r\n    headers[name] = value;\r\n\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) sending data. ${getDataDetail(content, logMessageContent)}.`);\r\n\r\n    const responseType = isArrayBuffer(content) ? \"arraybuffer\" : \"text\";\r\n    const response = await httpClient.post(url, {\r\n        content,\r\n        headers: { ...headers, ...defaultHeaders},\r\n        responseType,\r\n        withCredentials,\r\n    });\r\n\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) request complete. Response status: ${response.statusCode}.`);\r\n}\r\n\r\n/** @private */\r\nexport function createLogger(logger?: ILogger | LogLevel) {\r\n    if (logger === undefined) {\r\n        return new ConsoleLogger(LogLevel.Information);\r\n    }\r\n\r\n    if (logger === null) {\r\n        return NullLogger.instance;\r\n    }\r\n\r\n    if ((logger as ILogger).log) {\r\n        return logger as ILogger;\r\n    }\r\n\r\n    return new ConsoleLogger(logger as LogLevel);\r\n}\r\n\r\n/** @private */\r\nexport class SubjectSubscription<T> implements ISubscription<T> {\r\n    private subject: Subject<T>;\r\n    private observer: IStreamSubscriber<T>;\r\n\r\n    constructor(subject: Subject<T>, observer: IStreamSubscriber<T>) {\r\n        this.subject = subject;\r\n        this.observer = observer;\r\n    }\r\n\r\n    public dispose(): void {\r\n        const index: number = this.subject.observers.indexOf(this.observer);\r\n        if (index > -1) {\r\n            this.subject.observers.splice(index, 1);\r\n        }\r\n\r\n        if (this.subject.observers.length === 0 && this.subject.cancelCallback) {\r\n            this.subject.cancelCallback().catch((_) => { });\r\n        }\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport class ConsoleLogger implements ILogger {\r\n    private readonly minimumLogLevel: LogLevel;\r\n\r\n    // Public for testing purposes.\r\n    public outputConsole: {\r\n        error(message: any): void,\r\n        warn(message: any): void,\r\n        info(message: any): void,\r\n        log(message: any): void,\r\n    };\r\n\r\n    constructor(minimumLogLevel: LogLevel) {\r\n        this.minimumLogLevel = minimumLogLevel;\r\n        this.outputConsole = console;\r\n    }\r\n\r\n    public log(logLevel: LogLevel, message: string): void {\r\n        if (logLevel >= this.minimumLogLevel) {\r\n            switch (logLevel) {\r\n                case LogLevel.Critical:\r\n                case LogLevel.Error:\r\n                    this.outputConsole.error(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\r\n                    break;\r\n                case LogLevel.Warning:\r\n                    this.outputConsole.warn(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\r\n                    break;\r\n                case LogLevel.Information:\r\n                    this.outputConsole.info(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\r\n                    break;\r\n                default:\r\n                    // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\r\n                    this.outputConsole.log(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport function getUserAgentHeader(): [string, string] {\r\n    let userAgentHeaderName = \"X-SignalR-User-Agent\";\r\n    if (Platform.isNode) {\r\n        userAgentHeaderName = \"User-Agent\";\r\n    }\r\n    return [ userAgentHeaderName, constructUserAgent(VERSION, getOsName(), getRuntime(), getRuntimeVersion()) ];\r\n}\r\n\r\n/** @private */\r\nexport function constructUserAgent(version: string, os: string, runtime: string, runtimeVersion: string | undefined): string {\r\n    // Microsoft SignalR/[Version] ([Detailed Version]; [Operating System]; [Runtime]; [Runtime Version])\r\n    let userAgent: string = \"Microsoft SignalR/\";\r\n\r\n    const majorAndMinor = version.split(\".\");\r\n    userAgent += `${majorAndMinor[0]}.${majorAndMinor[1]}`;\r\n    userAgent += ` (${version}; `;\r\n\r\n    if (os && os !== \"\") {\r\n        userAgent += `${os}; `;\r\n    } else {\r\n        userAgent += \"Unknown OS; \";\r\n    }\r\n\r\n    userAgent += `${runtime}`;\r\n\r\n    if (runtimeVersion) {\r\n        userAgent += `; ${runtimeVersion}`;\r\n    } else {\r\n        userAgent += \"; Unknown Runtime Version\";\r\n    }\r\n\r\n    userAgent += \")\";\r\n    return userAgent;\r\n}\r\n\r\nfunction getOsName(): string {\r\n    if (Platform.isNode) {\r\n        switch (process.platform) {\r\n            case \"win32\":\r\n                return \"Windows NT\";\r\n            case \"darwin\":\r\n                return \"macOS\";\r\n            case \"linux\":\r\n                return \"Linux\";\r\n            default:\r\n                return process.platform;\r\n        }\r\n    } else {\r\n        return \"\";\r\n    }\r\n}\r\n\r\nfunction getRuntimeVersion(): string | undefined {\r\n    if (Platform.isNode) {\r\n        return process.versions.node;\r\n    }\r\n    return undefined;\r\n}\r\n\r\nfunction getRuntime(): string {\r\n    if (Platform.isNode) {\r\n        return \"NodeJS\";\r\n    } else {\r\n        return \"Browser\";\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// @ts-ignore: This will be removed from built files and is here to make the types available during dev work\r\nimport * as tough from \"@types/tough-cookie\";\r\n\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { Platform } from \"./Utils\";\r\n\r\nexport class FetchHttpClient extends HttpClient {\r\n    private readonly abortControllerType: { prototype: AbortController, new(): AbortController };\r\n    private readonly fetchType: (input: RequestInfo, init?: RequestInit) => Promise<Response>;\r\n    private readonly jar?: tough.CookieJar;\r\n\r\n    private readonly logger: ILogger;\r\n\r\n    public constructor(logger: ILogger) {\r\n        super();\r\n        this.logger = logger;\r\n\r\n        if (typeof fetch === \"undefined\") {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n\r\n            // Cookies aren't automatically handled in Node so we need to add a CookieJar to preserve cookies across requests\r\n            this.jar = new (requireFunc(\"tough-cookie\")).CookieJar();\r\n            this.fetchType = requireFunc(\"node-fetch\");\r\n\r\n            // node-fetch doesn't have a nice API for getting and setting cookies\r\n            // fetch-cookie will wrap a fetch implementation with a default CookieJar or a provided one\r\n            this.fetchType = requireFunc(\"fetch-cookie\")(this.fetchType, this.jar);\r\n\r\n            // Node needs EventListener methods on AbortController which our custom polyfill doesn't provide\r\n            this.abortControllerType = requireFunc(\"abort-controller\");\r\n        } else {\r\n            this.fetchType = fetch.bind(self);\r\n            this.abortControllerType = AbortController;\r\n        }\r\n    }\r\n\r\n    /** @inheritDoc */\r\n    public async send(request: HttpRequest): Promise<HttpResponse> {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            throw new AbortError();\r\n        }\r\n\r\n        if (!request.method) {\r\n            throw new Error(\"No method defined.\");\r\n        }\r\n        if (!request.url) {\r\n            throw new Error(\"No url defined.\");\r\n        }\r\n\r\n        const abortController = new this.abortControllerType();\r\n\r\n        let error: any;\r\n        // Hook our abortSignal into the abort controller\r\n        if (request.abortSignal) {\r\n            request.abortSignal.onabort = () => {\r\n                abortController.abort();\r\n                error = new AbortError();\r\n            };\r\n        }\r\n\r\n        // If a timeout has been passed in, setup a timeout to call abort\r\n        // Type needs to be any to fit window.setTimeout and NodeJS.setTimeout\r\n        let timeoutId: any = null;\r\n        if (request.timeout) {\r\n            const msTimeout = request.timeout!;\r\n            timeoutId = setTimeout(() => {\r\n                abortController.abort();\r\n                this.logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                error = new TimeoutError();\r\n            }, msTimeout);\r\n        }\r\n\r\n        let response: Response;\r\n        try {\r\n            response = await this.fetchType(request.url!, {\r\n                body: request.content!,\r\n                cache: \"no-cache\",\r\n                credentials: request.withCredentials === true ? \"include\" : \"same-origin\",\r\n                headers: {\r\n                    \"Content-Type\": \"text/plain;charset=UTF-8\",\r\n                    \"X-Requested-With\": \"XMLHttpRequest\",\r\n                    ...request.headers,\r\n                },\r\n                method: request.method!,\r\n                mode: \"cors\",\r\n                redirect: \"manual\",\r\n                signal: abortController.signal,\r\n            });\r\n        } catch (e) {\r\n            if (error) {\r\n                throw error;\r\n            }\r\n            this.logger.log(\r\n                LogLevel.Warning,\r\n                `Error from HTTP request. ${e}.`,\r\n            );\r\n            throw e;\r\n        } finally {\r\n            if (timeoutId) {\r\n                clearTimeout(timeoutId);\r\n            }\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = null;\r\n            }\r\n        }\r\n\r\n        if (!response.ok) {\r\n            throw new HttpError(response.statusText, response.status);\r\n        }\r\n\r\n        const content = deserializeContent(response, request.responseType);\r\n        const payload = await content;\r\n\r\n        return new HttpResponse(\r\n            response.status,\r\n            response.statusText,\r\n            payload,\r\n        );\r\n    }\r\n\r\n    public getCookieString(url: string): string {\r\n        let cookies: string = \"\";\r\n        if (Platform.isNode && this.jar) {\r\n            // @ts-ignore: unused variable\r\n            this.jar.getCookies(url, (e, c) => cookies = c.join(\"; \"));\r\n        }\r\n        return cookies;\r\n    }\r\n}\r\n\r\nfunction deserializeContent(response: Response, responseType?: XMLHttpRequestResponseType): Promise<string | ArrayBuffer> {\r\n    let content;\r\n    switch (responseType) {\r\n        case \"arraybuffer\":\r\n            content = response.arrayBuffer();\r\n            break;\r\n        case \"text\":\r\n            content = response.text();\r\n            break;\r\n        case \"blob\":\r\n        case \"document\":\r\n        case \"json\":\r\n            throw new Error(`${responseType} is not supported.`);\r\n        default:\r\n            content = response.text();\r\n            break;\r\n    }\r\n\r\n    return content;\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\n\r\nexport class XhrHttpClient extends HttpClient {\r\n    private readonly logger: ILogger;\r\n\r\n    public constructor(logger: ILogger) {\r\n        super();\r\n        this.logger = logger;\r\n    }\r\n\r\n    /** @inheritDoc */\r\n    public send(request: HttpRequest): Promise<HttpResponse> {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n\r\n        return new Promise<HttpResponse>((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n\r\n            xhr.open(request.method!, request.url!, true);\r\n            xhr.withCredentials = request.withCredentials === undefined ? true : request.withCredentials;\r\n            xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n            // Explicitly setting the Content-Type header for React Native on Android platform.\r\n            xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\r\n\r\n            const headers = request.headers;\r\n            if (headers) {\r\n                Object.keys(headers)\r\n                    .forEach((header) => {\r\n                        xhr.setRequestHeader(header, headers[header]);\r\n                    });\r\n            }\r\n\r\n            if (request.responseType) {\r\n                xhr.responseType = request.responseType;\r\n            }\r\n\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = () => {\r\n                    xhr.abort();\r\n                    reject(new AbortError());\r\n                };\r\n            }\r\n\r\n            if (request.timeout) {\r\n                xhr.timeout = request.timeout;\r\n            }\r\n\r\n            xhr.onload = () => {\r\n                if (request.abortSignal) {\r\n                    request.abortSignal.onabort = null;\r\n                }\r\n\r\n                if (xhr.status >= 200 && xhr.status < 300) {\r\n                    resolve(new HttpResponse(xhr.status, xhr.statusText, xhr.response || xhr.responseText));\r\n                } else {\r\n                    reject(new HttpError(xhr.statusText, xhr.status));\r\n                }\r\n            };\r\n\r\n            xhr.onerror = () => {\r\n                this.logger.log(LogLevel.Warning, `Error from HTTP request. ${xhr.status}: ${xhr.statusText}.`);\r\n                reject(new HttpError(xhr.statusText, xhr.status));\r\n            };\r\n\r\n            xhr.ontimeout = () => {\r\n                this.logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                reject(new TimeoutError());\r\n            };\r\n\r\n            xhr.send(request.content || \"\");\r\n        });\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { AbortError } from \"./Errors\";\r\nimport { FetchHttpClient } from \"./FetchHttpClient\";\r\nimport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nimport { ILogger } from \"./ILogger\";\r\nimport { Platform } from \"./Utils\";\r\nimport { XhrHttpClient } from \"./XhrHttpClient\";\r\n\r\n/** Default implementation of {@link @microsoft/signalr.HttpClient}. */\r\nexport class DefaultHttpClient extends HttpClient {\r\n    private readonly httpClient: HttpClient;\r\n\r\n    /** Creates a new instance of the {@link @microsoft/signalr.DefaultHttpClient}, using the provided {@link @microsoft/signalr.ILogger} to log messages. */\r\n    public constructor(logger: ILogger) {\r\n        super();\r\n\r\n        if (typeof fetch !== \"undefined\" || Platform.isNode) {\r\n            this.httpClient = new FetchHttpClient(logger);\r\n        } else if (typeof XMLHttpRequest !== \"undefined\") {\r\n            this.httpClient = new XhrHttpClient(logger);\r\n        } else {\r\n            throw new Error(\"No usable HttpClient found.\");\r\n        }\r\n    }\r\n\r\n    /** @inheritDoc */\r\n    public send(request: HttpRequest): Promise<HttpResponse> {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n\r\n        return this.httpClient.send(request);\r\n    }\r\n\r\n    public getCookieString(url: string): string {\r\n        return this.httpClient.getCookieString(url);\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// Not exported from index\r\n/** @private */\r\nexport class TextMessageFormat {\r\n    public static RecordSeparatorCode = 0x1e;\r\n    public static RecordSeparator = String.fromCharCode(TextMessageFormat.RecordSeparatorCode);\r\n\r\n    public static write(output: string): string {\r\n        return `${output}${TextMessageFormat.RecordSeparator}`;\r\n    }\r\n\r\n    public static parse(input: string): string[] {\r\n        if (input[input.length - 1] !== TextMessageFormat.RecordSeparator) {\r\n            throw new Error(\"Message is incomplete.\");\r\n        }\r\n\r\n        const messages = input.split(TextMessageFormat.RecordSeparator);\r\n        messages.pop();\r\n        return messages;\r\n    }\r\n}\r\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\n\r\n/** @private */\r\nexport interface HandshakeRequestMessage {\r\n    readonly protocol: string;\r\n    readonly version: number;\r\n}\r\n\r\n/** @private */\r\nexport interface HandshakeResponseMessage {\r\n    readonly error: string;\r\n    readonly minorVersion: number;\r\n}\r\n\r\n/** @private */\r\nexport class HandshakeProtocol {\r\n    // Handshake request is always JSON\r\n    public writeHandshakeRequest(handshakeRequest: HandshakeRequestMessage): string {\r\n        return TextMessageFormat.write(JSON.stringify(handshakeRequest));\r\n    }\r\n\r\n    public parseHandshakeResponse(data: any): [any, HandshakeResponseMessage] {\r\n        let responseMessage: HandshakeResponseMessage;\r\n        let messageData: string;\r\n        let remainingData: any;\r\n\r\n        if (isArrayBuffer(data) || (typeof Buffer !== \"undefined\" && data instanceof Buffer)) {\r\n            // Format is binary but still need to read JSON text from handshake response\r\n            const binaryData = new Uint8Array(data);\r\n            const separatorIndex = binaryData.indexOf(TextMessageFormat.RecordSeparatorCode);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            const responseLength = separatorIndex + 1;\r\n            messageData = String.fromCharCode.apply(null, binaryData.slice(0, responseLength));\r\n            remainingData = (binaryData.byteLength > responseLength) ? binaryData.slice(responseLength).buffer : null;\r\n        } else {\r\n            const textData: string = data;\r\n            const separatorIndex = textData.indexOf(TextMessageFormat.RecordSeparator);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            const responseLength = separatorIndex + 1;\r\n            messageData = textData.substring(0, responseLength);\r\n            remainingData = (textData.length > responseLength) ? textData.substring(responseLength) : null;\r\n        }\r\n\r\n        // At this point we should have just the single handshake message\r\n        const messages = TextMessageFormat.parse(messageData);\r\n        const response = JSON.parse(messages[0]);\r\n        if (response.type) {\r\n            throw new Error(\"Expected a handshake response from the server.\");\r\n        }\r\n        responseMessage = response;\r\n\r\n        // multiple messages could have arrived with handshake\r\n        // return additional data to be parsed as usual, or null if all parsed\r\n        return [remainingData, responseMessage];\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { ILogger } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\n\r\n/** Defines the type of a Hub Message. */\r\nexport enum MessageType {\r\n    /** Indicates the message is an Invocation message and implements the {@link @microsoft/signalr.InvocationMessage} interface. */\r\n    Invocation = 1,\r\n    /** Indicates the message is a StreamItem message and implements the {@link @microsoft/signalr.StreamItemMessage} interface. */\r\n    StreamItem = 2,\r\n    /** Indicates the message is a Completion message and implements the {@link @microsoft/signalr.CompletionMessage} interface. */\r\n    Completion = 3,\r\n    /** Indicates the message is a Stream Invocation message and implements the {@link @microsoft/signalr.StreamInvocationMessage} interface. */\r\n    StreamInvocation = 4,\r\n    /** Indicates the message is a Cancel Invocation message and implements the {@link @microsoft/signalr.CancelInvocationMessage} interface. */\r\n    CancelInvocation = 5,\r\n    /** Indicates the message is a Ping message and implements the {@link @microsoft/signalr.PingMessage} interface. */\r\n    Ping = 6,\r\n    /** Indicates the message is a Close message and implements the {@link @microsoft/signalr.CloseMessage} interface. */\r\n    Close = 7,\r\n}\r\n\r\n/** Defines a dictionary of string keys and string values representing headers attached to a Hub message. */\r\nexport interface MessageHeaders {\r\n    /** Gets or sets the header with the specified key. */\r\n    [key: string]: string;\r\n}\r\n\r\n/** Union type of all known Hub messages. */\r\nexport type HubMessage =\r\n    InvocationMessage |\r\n    StreamInvocationMessage |\r\n    StreamItemMessage |\r\n    CompletionMessage |\r\n    CancelInvocationMessage |\r\n    PingMessage |\r\n    CloseMessage;\r\n\r\n/** Defines properties common to all Hub messages. */\r\nexport interface HubMessageBase {\r\n    /** A {@link @microsoft/signalr.MessageType} value indicating the type of this message. */\r\n    readonly type: MessageType;\r\n}\r\n\r\n/** Defines properties common to all Hub messages relating to a specific invocation. */\r\nexport interface HubInvocationMessage extends HubMessageBase {\r\n    /** A {@link @microsoft/signalr.MessageHeaders} dictionary containing headers attached to the message. */\r\n    readonly headers?: MessageHeaders;\r\n    /** The ID of the invocation relating to this message.\r\n     *\r\n     * This is expected to be present for {@link @microsoft/signalr.StreamInvocationMessage} and {@link @microsoft/signalr.CompletionMessage}. It may\r\n     * be 'undefined' for an {@link @microsoft/signalr.InvocationMessage} if the sender does not expect a response.\r\n     */\r\n    readonly invocationId?: string;\r\n}\r\n\r\n/** A hub message representing a non-streaming invocation. */\r\nexport interface InvocationMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.Invocation;\r\n    /** The target method name. */\r\n    readonly target: string;\r\n    /** The target method arguments. */\r\n    readonly arguments: any[];\r\n    /** The target methods stream IDs. */\r\n    readonly streamIds?: string[];\r\n}\r\n\r\n/** A hub message representing a streaming invocation. */\r\nexport interface StreamInvocationMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.StreamInvocation;\r\n\r\n    /** The invocation ID. */\r\n    readonly invocationId: string;\r\n    /** The target method name. */\r\n    readonly target: string;\r\n    /** The target method arguments. */\r\n    readonly arguments: any[];\r\n    /** The target methods stream IDs. */\r\n    readonly streamIds?: string[];\r\n}\r\n\r\n/** A hub message representing a single item produced as part of a result stream. */\r\nexport interface StreamItemMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.StreamItem;\r\n\r\n    /** The invocation ID. */\r\n    readonly invocationId: string;\r\n\r\n    /** The item produced by the server. */\r\n    readonly item?: any;\r\n}\r\n\r\n/** A hub message representing the result of an invocation. */\r\nexport interface CompletionMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.Completion;\r\n    /** The invocation ID. */\r\n    readonly invocationId: string;\r\n    /** The error produced by the invocation, if any.\r\n     *\r\n     * Either {@link @microsoft/signalr.CompletionMessage.error} or {@link @microsoft/signalr.CompletionMessage.result} must be defined, but not both.\r\n     */\r\n    readonly error?: string;\r\n    /** The result produced by the invocation, if any.\r\n     *\r\n     * Either {@link @microsoft/signalr.CompletionMessage.error} or {@link @microsoft/signalr.CompletionMessage.result} must be defined, but not both.\r\n     */\r\n    readonly result?: any;\r\n}\r\n\r\n/** A hub message indicating that the sender is still active. */\r\nexport interface PingMessage extends HubMessageBase {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.Ping;\r\n}\r\n\r\n/** A hub message indicating that the sender is closing the connection.\r\n *\r\n * If {@link @microsoft/signalr.CloseMessage.error} is defined, the sender is closing the connection due to an error.\r\n */\r\nexport interface CloseMessage extends HubMessageBase {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.Close;\r\n    /** The error that triggered the close, if any.\r\n     *\r\n     * If this property is undefined, the connection was closed normally and without error.\r\n     */\r\n    readonly error?: string;\r\n\r\n    /** If true, clients with automatic reconnects enabled should attempt to reconnect after receiving the CloseMessage. Otherwise, they should not. */\r\n    readonly allowReconnect?: boolean;\r\n}\r\n\r\n/** A hub message sent to request that a streaming invocation be canceled. */\r\nexport interface CancelInvocationMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.CancelInvocation;\r\n    /** The invocation ID. */\r\n    readonly invocationId: string;\r\n}\r\n\r\n/** A protocol abstraction for communicating with SignalR Hubs.  */\r\nexport interface IHubProtocol {\r\n    /** The name of the protocol. This is used by SignalR to resolve the protocol between the client and server. */\r\n    readonly name: string;\r\n    /** The version of the protocol. */\r\n    readonly version: number;\r\n    /** The {@link @microsoft/signalr.TransferFormat} of the protocol. */\r\n    readonly transferFormat: TransferFormat;\r\n\r\n    /** Creates an array of {@link @microsoft/signalr.HubMessage} objects from the specified serialized representation.\r\n     *\r\n     * If {@link @microsoft/signalr.IHubProtocol.transferFormat} is 'Text', the `input` parameter must be a string, otherwise it must be an ArrayBuffer.\r\n     *\r\n     * @param {string | ArrayBuffer | Buffer} input A string, ArrayBuffer, or Buffer containing the serialized representation.\r\n     * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.\r\n     */\r\n    parseMessages(input: string | ArrayBuffer | Buffer, logger: ILogger): HubMessage[];\r\n\r\n    /** Writes the specified {@link @microsoft/signalr.HubMessage} to a string or ArrayBuffer and returns it.\r\n     *\r\n     * If {@link @microsoft/signalr.IHubProtocol.transferFormat} is 'Text', the result of this method will be a string, otherwise it will be an ArrayBuffer.\r\n     *\r\n     * @param {HubMessage} message The message to write.\r\n     * @returns {string | ArrayBuffer} A string or ArrayBuffer containing the serialized representation of the message.\r\n     */\r\n    writeMessage(message: HubMessage): string | ArrayBuffer;\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { IStreamResult, IStreamSubscriber, ISubscription } from \"./Stream\";\r\nimport { SubjectSubscription } from \"./Utils\";\r\n\r\n/** Stream implementation to stream items to the server. */\r\nexport class Subject<T> implements IStreamResult<T> {\r\n    /** @internal */\r\n    public observers: Array<IStreamSubscriber<T>>;\r\n\r\n    /** @internal */\r\n    public cancelCallback?: () => Promise<void>;\r\n\r\n    constructor() {\r\n        this.observers = [];\r\n    }\r\n\r\n    public next(item: T): void {\r\n        for (const observer of this.observers) {\r\n            observer.next(item);\r\n        }\r\n    }\r\n\r\n    public error(err: any): void {\r\n        for (const observer of this.observers) {\r\n            if (observer.error) {\r\n                observer.error(err);\r\n            }\r\n        }\r\n    }\r\n\r\n    public complete(): void {\r\n        for (const observer of this.observers) {\r\n            if (observer.complete) {\r\n                observer.complete();\r\n            }\r\n        }\r\n    }\r\n\r\n    public subscribe(observer: IStreamSubscriber<T>): ISubscription<T> {\r\n        this.observers.push(observer);\r\n        return new SubjectSubscription(this, observer);\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { HandshakeProtocol, HandshakeRequestMessage, HandshakeResponseMessage } from \"./HandshakeProtocol\";\r\nimport { IConnection } from \"./IConnection\";\r\nimport { CancelInvocationMessage, CompletionMessage, IHubProtocol, InvocationMessage, MessageType, StreamInvocationMessage, StreamItemMessage } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { IRetryPolicy } from \"./IRetryPolicy\";\r\nimport { IStreamResult } from \"./Stream\";\r\nimport { Subject } from \"./Subject\";\r\nimport { Arg } from \"./Utils\";\r\n\r\nconst DEFAULT_TIMEOUT_IN_MS: number = 30 * 1000;\r\nconst DEFAULT_PING_INTERVAL_IN_MS: number = 15 * 1000;\r\n\r\n/** Describes the current state of the {@link HubConnection} to the server. */\r\nexport enum HubConnectionState {\r\n    /** The hub connection is disconnected. */\r\n    Disconnected = \"Disconnected\",\r\n    /** The hub connection is connecting. */\r\n    Connecting = \"Connecting\",\r\n    /** The hub connection is connected. */\r\n    Connected = \"Connected\",\r\n    /** The hub connection is disconnecting. */\r\n    Disconnecting = \"Disconnecting\",\r\n    /** The hub connection is reconnecting. */\r\n    Reconnecting = \"Reconnecting\",\r\n}\r\n\r\n/** Represents a connection to a SignalR Hub. */\r\nexport class HubConnection {\r\n    private readonly cachedPingMessage: string | ArrayBuffer;\r\n    private readonly connection: IConnection;\r\n    private readonly logger: ILogger;\r\n    private readonly reconnectPolicy?: IRetryPolicy;\r\n    private protocol: IHubProtocol;\r\n    private handshakeProtocol: HandshakeProtocol;\r\n    private callbacks: { [invocationId: string]: (invocationEvent: StreamItemMessage | CompletionMessage | null, error?: Error) => void };\r\n    private methods: { [name: string]: Array<(...args: any[]) => void> };\r\n    private invocationId: number;\r\n\r\n    private closedCallbacks: Array<(error?: Error) => void>;\r\n    private reconnectingCallbacks: Array<(error?: Error) => void>;\r\n    private reconnectedCallbacks: Array<(connectionId?: string) => void>;\r\n\r\n    private receivedHandshakeResponse: boolean;\r\n    private handshakeResolver!: (value?: PromiseLike<{}>) => void;\r\n    private handshakeRejecter!: (reason?: any) => void;\r\n    private stopDuringStartError?: Error;\r\n\r\n    private connectionState: HubConnectionState;\r\n    // connectionStarted is tracked independently from connectionState, so we can check if the\r\n    // connection ever did successfully transition from connecting to connected before disconnecting.\r\n    private connectionStarted: boolean;\r\n    private startPromise?: Promise<void>;\r\n    private stopPromise?: Promise<void>;\r\n    private nextKeepAlive: number = 0;\r\n\r\n    // The type of these a) doesn't matter and b) varies when building in browser and node contexts\r\n    // Since we're building the WebPack bundle directly from the TypeScript, this matters (previously\r\n    // we built the bundle from the compiled JavaScript).\r\n    private reconnectDelayHandle?: any;\r\n    private timeoutHandle?: any;\r\n    private pingServerHandle?: any;\r\n\r\n    /** The server timeout in milliseconds.\r\n     *\r\n     * If this timeout elapses without receiving any messages from the server, the connection will be terminated with an error.\r\n     * The default timeout value is 30,000 milliseconds (30 seconds).\r\n     */\r\n    public serverTimeoutInMilliseconds: number;\r\n\r\n    /** Default interval at which to ping the server.\r\n     *\r\n     * The default value is 15,000 milliseconds (15 seconds).\r\n     * Allows the server to detect hard disconnects (like when a client unplugs their computer).\r\n     * The ping will happen at most as often as the server pings.\r\n     * If the server pings every 5 seconds, a value lower than 5 will ping every 5 seconds.\r\n     */\r\n    public keepAliveIntervalInMilliseconds: number;\r\n\r\n    /** @internal */\r\n    // Using a public static factory method means we can have a private constructor and an _internal_\r\n    // create method that can be used by HubConnectionBuilder. An \"internal\" constructor would just\r\n    // be stripped away and the '.d.ts' file would have no constructor, which is interpreted as a\r\n    // public parameter-less constructor.\r\n    public static create(connection: IConnection, logger: ILogger, protocol: IHubProtocol, reconnectPolicy?: IRetryPolicy): HubConnection {\r\n        return new HubConnection(connection, logger, protocol, reconnectPolicy);\r\n    }\r\n\r\n    private constructor(connection: IConnection, logger: ILogger, protocol: IHubProtocol, reconnectPolicy?: IRetryPolicy) {\r\n        Arg.isRequired(connection, \"connection\");\r\n        Arg.isRequired(logger, \"logger\");\r\n        Arg.isRequired(protocol, \"protocol\");\r\n\r\n        this.serverTimeoutInMilliseconds = DEFAULT_TIMEOUT_IN_MS;\r\n        this.keepAliveIntervalInMilliseconds = DEFAULT_PING_INTERVAL_IN_MS;\r\n\r\n        this.logger = logger;\r\n        this.protocol = protocol;\r\n        this.connection = connection;\r\n        this.reconnectPolicy = reconnectPolicy;\r\n        this.handshakeProtocol = new HandshakeProtocol();\r\n\r\n        this.connection.onreceive = (data: any) => this.processIncomingData(data);\r\n        this.connection.onclose = (error?: Error) => this.connectionClosed(error);\r\n\r\n        this.callbacks = {};\r\n        this.methods = {};\r\n        this.closedCallbacks = [];\r\n        this.reconnectingCallbacks = [];\r\n        this.reconnectedCallbacks = [];\r\n        this.invocationId = 0;\r\n        this.receivedHandshakeResponse = false;\r\n        this.connectionState = HubConnectionState.Disconnected;\r\n        this.connectionStarted = false;\r\n\r\n        this.cachedPingMessage = this.protocol.writeMessage({ type: MessageType.Ping });\r\n    }\r\n\r\n    /** Indicates the state of the {@link HubConnection} to the server. */\r\n    get state(): HubConnectionState {\r\n        return this.connectionState;\r\n    }\r\n\r\n    /** Represents the connection id of the {@link HubConnection} on the server. The connection id will be null when the connection is either\r\n     *  in the disconnected state or if the negotiation step was skipped.\r\n     */\r\n    get connectionId(): string | null {\r\n        return this.connection ? (this.connection.connectionId || null) : null;\r\n    }\r\n\r\n    /** Indicates the url of the {@link HubConnection} to the server. */\r\n    get baseUrl(): string {\r\n        return this.connection.baseUrl || \"\";\r\n    }\r\n\r\n    /**\r\n     * Sets a new url for the HubConnection. Note that the url can only be changed when the connection is in either the Disconnected or\r\n     * Reconnecting states.\r\n     * @param {string} url The url to connect to.\r\n     */\r\n    set baseUrl(url: string) {\r\n        if (this.connectionState !== HubConnectionState.Disconnected && this.connectionState !== HubConnectionState.Reconnecting) {\r\n            throw new Error(\"The HubConnection must be in the Disconnected or Reconnecting state to change the url.\");\r\n        }\r\n\r\n        if (!url) {\r\n            throw new Error(\"The HubConnection url must be a valid url.\");\r\n        }\r\n\r\n        this.connection.baseUrl = url;\r\n    }\r\n\r\n    /** Starts the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully established, or rejects with an error.\r\n     */\r\n    public start(): Promise<void> {\r\n        this.startPromise = this.startWithStateTransitions();\r\n        return this.startPromise;\r\n    }\r\n\r\n    private async startWithStateTransitions(): Promise<void> {\r\n        if (this.connectionState !== HubConnectionState.Disconnected) {\r\n            return Promise.reject(new Error(\"Cannot start a HubConnection that is not in the 'Disconnected' state.\"));\r\n        }\r\n\r\n        this.connectionState = HubConnectionState.Connecting;\r\n        this.logger.log(LogLevel.Debug, \"Starting HubConnection.\");\r\n\r\n        try {\r\n            await this.startInternal();\r\n\r\n            this.connectionState = HubConnectionState.Connected;\r\n            this.connectionStarted = true;\r\n            this.logger.log(LogLevel.Debug, \"HubConnection connected successfully.\");\r\n        } catch (e) {\r\n            this.connectionState = HubConnectionState.Disconnected;\r\n            this.logger.log(LogLevel.Debug, `HubConnection failed to start successfully because of error '${e}'.`);\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n\r\n    private async startInternal() {\r\n        this.stopDuringStartError = undefined;\r\n        this.receivedHandshakeResponse = false;\r\n        // Set up the promise before any connection is (re)started otherwise it could race with received messages\r\n        const handshakePromise = new Promise((resolve, reject) => {\r\n            this.handshakeResolver = resolve;\r\n            this.handshakeRejecter = reject;\r\n        });\r\n\r\n        await this.connection.start(this.protocol.transferFormat);\r\n\r\n        try {\r\n            const handshakeRequest: HandshakeRequestMessage = {\r\n                protocol: this.protocol.name,\r\n                version: this.protocol.version,\r\n            };\r\n\r\n            this.logger.log(LogLevel.Debug, \"Sending handshake request.\");\r\n\r\n            await this.sendMessage(this.handshakeProtocol.writeHandshakeRequest(handshakeRequest));\r\n\r\n            this.logger.log(LogLevel.Information, `Using HubProtocol '${this.protocol.name}'.`);\r\n\r\n            // defensively cleanup timeout in case we receive a message from the server before we finish start\r\n            this.cleanupTimeout();\r\n            this.resetTimeoutPeriod();\r\n            this.resetKeepAliveInterval();\r\n\r\n            await handshakePromise;\r\n\r\n            // It's important to check the stopDuringStartError instead of just relying on the handshakePromise\r\n            // being rejected on close, because this continuation can run after both the handshake completed successfully\r\n            // and the connection was closed.\r\n            if (this.stopDuringStartError) {\r\n                // It's important to throw instead of returning a rejected promise, because we don't want to allow any state\r\n                // transitions to occur between now and the calling code observing the exceptions. Returning a rejected promise\r\n                // will cause the calling continuation to get scheduled to run later.\r\n                throw this.stopDuringStartError;\r\n            }\r\n        } catch (e) {\r\n            this.logger.log(LogLevel.Debug, `Hub handshake failed with error '${e}' during start(). Stopping HubConnection.`);\r\n\r\n            this.cleanupTimeout();\r\n            this.cleanupPingTimer();\r\n\r\n            // HttpConnection.stop() should not complete until after the onclose callback is invoked.\r\n            // This will transition the HubConnection to the disconnected state before HttpConnection.stop() completes.\r\n            await this.connection.stop(e);\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    /** Stops the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully terminated, or rejects with an error.\r\n     */\r\n    public async stop(): Promise<void> {\r\n        // Capture the start promise before the connection might be restarted in an onclose callback.\r\n        const startPromise = this.startPromise;\r\n\r\n        this.stopPromise = this.stopInternal();\r\n        await this.stopPromise;\r\n\r\n        try {\r\n            // Awaiting undefined continues immediately\r\n            await startPromise;\r\n        } catch (e) {\r\n            // This exception is returned to the user as a rejected Promise from the start method.\r\n        }\r\n    }\r\n\r\n    private stopInternal(error?: Error): Promise<void> {\r\n        if (this.connectionState === HubConnectionState.Disconnected) {\r\n            this.logger.log(LogLevel.Debug, `Call to HubConnection.stop(${error}) ignored because it is already in the disconnected state.`);\r\n            return Promise.resolve();\r\n        }\r\n\r\n        if (this.connectionState === HubConnectionState.Disconnecting) {\r\n            this.logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnecting state.`);\r\n            return this.stopPromise!;\r\n        }\r\n\r\n        this.connectionState = HubConnectionState.Disconnecting;\r\n\r\n        this.logger.log(LogLevel.Debug, \"Stopping HubConnection.\");\r\n\r\n        if (this.reconnectDelayHandle) {\r\n            // We're in a reconnect delay which means the underlying connection is currently already stopped.\r\n            // Just clear the handle to stop the reconnect loop (which no one is waiting on thankfully) and\r\n            // fire the onclose callbacks.\r\n            this.logger.log(LogLevel.Debug, \"Connection stopped during reconnect delay. Done reconnecting.\");\r\n\r\n            clearTimeout(this.reconnectDelayHandle);\r\n            this.reconnectDelayHandle = undefined;\r\n\r\n            this.completeClose();\r\n            return Promise.resolve();\r\n        }\r\n\r\n        this.cleanupTimeout();\r\n        this.cleanupPingTimer();\r\n        this.stopDuringStartError = error || new Error(\"The connection was stopped before the hub handshake could complete.\");\r\n\r\n        // HttpConnection.stop() should not complete until after either HttpConnection.start() fails\r\n        // or the onclose callback is invoked. The onclose callback will transition the HubConnection\r\n        // to the disconnected state if need be before HttpConnection.stop() completes.\r\n        return this.connection.stop(error);\r\n    }\r\n\r\n    /** Invokes a streaming hub method on the server using the specified name and arguments.\r\n     *\r\n     * @typeparam T The type of the items returned by the server.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {IStreamResult<T>} An object that yields results from the server as they are received.\r\n     */\r\n    public stream<T = any>(methodName: string, ...args: any[]): IStreamResult<T> {\r\n        const [streams, streamIds] = this.replaceStreamingParams(args);\r\n        const invocationDescriptor = this.createStreamInvocation(methodName, args, streamIds);\r\n\r\n        let promiseQueue: Promise<void>;\r\n        const subject = new Subject<T>();\r\n        subject.cancelCallback = () => {\r\n            const cancelInvocation: CancelInvocationMessage = this.createCancelInvocation(invocationDescriptor.invocationId);\r\n\r\n            delete this.callbacks[invocationDescriptor.invocationId];\r\n\r\n            return promiseQueue.then(() => {\r\n                return this.sendWithProtocol(cancelInvocation);\r\n            });\r\n        };\r\n\r\n        this.callbacks[invocationDescriptor.invocationId] = (invocationEvent: CompletionMessage | StreamItemMessage | null, error?: Error) => {\r\n            if (error) {\r\n                subject.error(error);\r\n                return;\r\n            } else if (invocationEvent) {\r\n                // invocationEvent will not be null when an error is not passed to the callback\r\n                if (invocationEvent.type === MessageType.Completion) {\r\n                    if (invocationEvent.error) {\r\n                        subject.error(new Error(invocationEvent.error));\r\n                    } else {\r\n                        subject.complete();\r\n                    }\r\n                } else {\r\n                    subject.next((invocationEvent.item) as T);\r\n                }\r\n            }\r\n        };\r\n\r\n        promiseQueue = this.sendWithProtocol(invocationDescriptor)\r\n            .catch((e) => {\r\n                subject.error(e);\r\n                delete this.callbacks[invocationDescriptor.invocationId];\r\n            });\r\n\r\n        this.launchStreams(streams, promiseQueue);\r\n\r\n        return subject;\r\n    }\r\n\r\n    private sendMessage(message: any) {\r\n        this.resetKeepAliveInterval();\r\n        return this.connection.send(message);\r\n    }\r\n\r\n    /**\r\n     * Sends a js object to the server.\r\n     * @param message The js object to serialize and send.\r\n     */\r\n    private sendWithProtocol(message: any) {\r\n        return this.sendMessage(this.protocol.writeMessage(message));\r\n    }\r\n\r\n    /** Invokes a hub method on the server using the specified name and arguments. Does not wait for a response from the receiver.\r\n     *\r\n     * The Promise returned by this method resolves when the client has sent the invocation to the server. The server may still\r\n     * be processing the invocation.\r\n     *\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<void>} A Promise that resolves when the invocation has been successfully sent, or rejects with an error.\r\n     */\r\n    public send(methodName: string, ...args: any[]): Promise<void> {\r\n        const [streams, streamIds] = this.replaceStreamingParams(args);\r\n        const sendPromise = this.sendWithProtocol(this.createInvocation(methodName, args, true, streamIds));\r\n\r\n        this.launchStreams(streams, sendPromise);\r\n\r\n        return sendPromise;\r\n    }\r\n\r\n    /** Invokes a hub method on the server using the specified name and arguments.\r\n     *\r\n     * The Promise returned by this method resolves when the server indicates it has finished invoking the method. When the promise\r\n     * resolves, the server has finished invoking the method. If the server method returns a result, it is produced as the result of\r\n     * resolving the Promise.\r\n     *\r\n     * @typeparam T The expected return type.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<T>} A Promise that resolves with the result of the server method (if any), or rejects with an error.\r\n     */\r\n    public invoke<T = any>(methodName: string, ...args: any[]): Promise<T> {\r\n        const [streams, streamIds] = this.replaceStreamingParams(args);\r\n        const invocationDescriptor = this.createInvocation(methodName, args, false, streamIds);\r\n\r\n        const p = new Promise<any>((resolve, reject) => {\r\n            // invocationId will always have a value for a non-blocking invocation\r\n            this.callbacks[invocationDescriptor.invocationId!] = (invocationEvent: StreamItemMessage | CompletionMessage | null, error?: Error) => {\r\n                if (error) {\r\n                    reject(error);\r\n                    return;\r\n                } else if (invocationEvent) {\r\n                    // invocationEvent will not be null when an error is not passed to the callback\r\n                    if (invocationEvent.type === MessageType.Completion) {\r\n                        if (invocationEvent.error) {\r\n                            reject(new Error(invocationEvent.error));\r\n                        } else {\r\n                            resolve(invocationEvent.result);\r\n                        }\r\n                    } else {\r\n                        reject(new Error(`Unexpected message type: ${invocationEvent.type}`));\r\n                    }\r\n                }\r\n            };\r\n\r\n            const promiseQueue = this.sendWithProtocol(invocationDescriptor)\r\n                .catch((e) => {\r\n                    reject(e);\r\n                    // invocationId will always have a value for a non-blocking invocation\r\n                    delete this.callbacks[invocationDescriptor.invocationId!];\r\n                });\r\n\r\n            this.launchStreams(streams, promiseQueue);\r\n        });\r\n\r\n        return p;\r\n    }\r\n\r\n    /** Registers a handler that will be invoked when the hub method with the specified method name is invoked.\r\n     *\r\n     * @param {string} methodName The name of the hub method to define.\r\n     * @param {Function} newMethod The handler that will be raised when the hub method is invoked.\r\n     */\r\n    public on(methodName: string, newMethod: (...args: any[]) => void) {\r\n        if (!methodName || !newMethod) {\r\n            return;\r\n        }\r\n\r\n        methodName = methodName.toLowerCase();\r\n        if (!this.methods[methodName]) {\r\n            this.methods[methodName] = [];\r\n        }\r\n\r\n        // Preventing adding the same handler multiple times.\r\n        if (this.methods[methodName].indexOf(newMethod) !== -1) {\r\n            return;\r\n        }\r\n\r\n        this.methods[methodName].push(newMethod);\r\n    }\r\n\r\n    /** Removes all handlers for the specified hub method.\r\n     *\r\n     * @param {string} methodName The name of the method to remove handlers for.\r\n     */\r\n    public off(methodName: string): void;\r\n\r\n    /** Removes the specified handler for the specified hub method.\r\n     *\r\n     * You must pass the exact same Function instance as was previously passed to {@link @microsoft/signalr.HubConnection.on}. Passing a different instance (even if the function\r\n     * body is the same) will not remove the handler.\r\n     *\r\n     * @param {string} methodName The name of the method to remove handlers for.\r\n     * @param {Function} method The handler to remove. This must be the same Function instance as the one passed to {@link @microsoft/signalr.HubConnection.on}.\r\n     */\r\n    public off(methodName: string, method: (...args: any[]) => void): void;\r\n    public off(methodName: string, method?: (...args: any[]) => void): void {\r\n        if (!methodName) {\r\n            return;\r\n        }\r\n\r\n        methodName = methodName.toLowerCase();\r\n        const handlers = this.methods[methodName];\r\n        if (!handlers) {\r\n            return;\r\n        }\r\n        if (method) {\r\n            const removeIdx = handlers.indexOf(method);\r\n            if (removeIdx !== -1) {\r\n                handlers.splice(removeIdx, 1);\r\n                if (handlers.length === 0) {\r\n                    delete this.methods[methodName];\r\n                }\r\n            }\r\n        } else {\r\n            delete this.methods[methodName];\r\n        }\r\n\r\n    }\r\n\r\n    /** Registers a handler that will be invoked when the connection is closed.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection is closed. Optionally receives a single argument containing the error that caused the connection to close (if any).\r\n     */\r\n    public onclose(callback: (error?: Error) => void) {\r\n        if (callback) {\r\n            this.closedCallbacks.push(callback);\r\n        }\r\n    }\r\n\r\n    /** Registers a handler that will be invoked when the connection starts reconnecting.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection starts reconnecting. Optionally receives a single argument containing the error that caused the connection to start reconnecting (if any).\r\n     */\r\n    public onreconnecting(callback: (error?: Error) => void) {\r\n        if (callback) {\r\n            this.reconnectingCallbacks.push(callback);\r\n        }\r\n    }\r\n\r\n    /** Registers a handler that will be invoked when the connection successfully reconnects.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection successfully reconnects.\r\n     */\r\n    public onreconnected(callback: (connectionId?: string) => void) {\r\n        if (callback) {\r\n            this.reconnectedCallbacks.push(callback);\r\n        }\r\n    }\r\n\r\n    private processIncomingData(data: any) {\r\n        this.cleanupTimeout();\r\n\r\n        if (!this.receivedHandshakeResponse) {\r\n            data = this.processHandshakeResponse(data);\r\n            this.receivedHandshakeResponse = true;\r\n        }\r\n\r\n        // Data may have all been read when processing handshake response\r\n        if (data) {\r\n            // Parse the messages\r\n            const messages = this.protocol.parseMessages(data, this.logger);\r\n\r\n            for (const message of messages) {\r\n                switch (message.type) {\r\n                    case MessageType.Invocation:\r\n                        this.invokeClientMethod(message);\r\n                        break;\r\n                    case MessageType.StreamItem:\r\n                    case MessageType.Completion:\r\n                        const callback = this.callbacks[message.invocationId];\r\n                        if (callback) {\r\n                            if (message.type === MessageType.Completion) {\r\n                                delete this.callbacks[message.invocationId];\r\n                            }\r\n                            callback(message);\r\n                        }\r\n                        break;\r\n                    case MessageType.Ping:\r\n                        // Don't care about pings\r\n                        break;\r\n                    case MessageType.Close:\r\n                        this.logger.log(LogLevel.Information, \"Close message received from server.\");\r\n\r\n                        const error = message.error ? new Error(\"Server returned an error on close: \" + message.error) : undefined;\r\n\r\n                        if (message.allowReconnect === true) {\r\n                            // It feels wrong not to await connection.stop() here, but processIncomingData is called as part of an onreceive callback which is not async,\r\n                            // this is already the behavior for serverTimeout(), and HttpConnection.Stop() should catch and log all possible exceptions.\r\n\r\n                            // tslint:disable-next-line:no-floating-promises\r\n                            this.connection.stop(error);\r\n                        } else {\r\n                            // We cannot await stopInternal() here, but subsequent calls to stop() will await this if stopInternal() is still ongoing.\r\n                            this.stopPromise = this.stopInternal(error);\r\n                        }\r\n\r\n                        break;\r\n                    default:\r\n                        this.logger.log(LogLevel.Warning, `Invalid message type: ${message.type}.`);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.resetTimeoutPeriod();\r\n    }\r\n\r\n    private processHandshakeResponse(data: any): any {\r\n        let responseMessage: HandshakeResponseMessage;\r\n        let remainingData: any;\r\n\r\n        try {\r\n            [remainingData, responseMessage] = this.handshakeProtocol.parseHandshakeResponse(data);\r\n        } catch (e) {\r\n            const message = \"Error parsing handshake response: \" + e;\r\n            this.logger.log(LogLevel.Error, message);\r\n\r\n            const error = new Error(message);\r\n            this.handshakeRejecter(error);\r\n            throw error;\r\n        }\r\n        if (responseMessage.error) {\r\n            const message = \"Server returned handshake error: \" + responseMessage.error;\r\n            this.logger.log(LogLevel.Error, message);\r\n\r\n            const error = new Error(message);\r\n            this.handshakeRejecter(error);\r\n            throw error;\r\n        } else {\r\n            this.logger.log(LogLevel.Debug, \"Server handshake complete.\");\r\n        }\r\n\r\n        this.handshakeResolver();\r\n        return remainingData;\r\n    }\r\n\r\n    private resetKeepAliveInterval() {\r\n        if (this.connection.features.inherentKeepAlive) {\r\n            return;\r\n        }\r\n\r\n        // Set the time we want the next keep alive to be sent\r\n        // Timer will be setup on next message receive\r\n        this.nextKeepAlive = new Date().getTime() + this.keepAliveIntervalInMilliseconds;\r\n\r\n        this.cleanupPingTimer();\r\n    }\r\n\r\n    private resetTimeoutPeriod() {\r\n        if (!this.connection.features || !this.connection.features.inherentKeepAlive) {\r\n            // Set the timeout timer\r\n            this.timeoutHandle = setTimeout(() => this.serverTimeout(), this.serverTimeoutInMilliseconds);\r\n\r\n            // Set keepAlive timer if there isn't one\r\n            if (this.pingServerHandle === undefined) {\r\n                let nextPing = this.nextKeepAlive - new Date().getTime();\r\n                if (nextPing < 0) {\r\n                    nextPing = 0;\r\n                }\r\n\r\n                // The timer needs to be set from a networking callback to avoid Chrome timer throttling from causing timers to run once a minute\r\n                this.pingServerHandle = setTimeout(async () => {\r\n                    if (this.connectionState === HubConnectionState.Connected) {\r\n                        try {\r\n                            await this.sendMessage(this.cachedPingMessage);\r\n                        } catch {\r\n                            // We don't care about the error. It should be seen elsewhere in the client.\r\n                            // The connection is probably in a bad or closed state now, cleanup the timer so it stops triggering\r\n                            this.cleanupPingTimer();\r\n                        }\r\n                    }\r\n                }, nextPing);\r\n            }\r\n        }\r\n    }\r\n\r\n    private serverTimeout() {\r\n        // The server hasn't talked to us in a while. It doesn't like us anymore ... :(\r\n        // Terminate the connection, but we don't need to wait on the promise. This could trigger reconnecting.\r\n        // tslint:disable-next-line:no-floating-promises\r\n        this.connection.stop(new Error(\"Server timeout elapsed without receiving a message from the server.\"));\r\n    }\r\n\r\n    private invokeClientMethod(invocationMessage: InvocationMessage) {\r\n        const methods = this.methods[invocationMessage.target.toLowerCase()];\r\n        if (methods) {\r\n            try {\r\n                methods.forEach((m) => m.apply(this, invocationMessage.arguments));\r\n            } catch (e) {\r\n                this.logger.log(LogLevel.Error, `A callback for the method ${invocationMessage.target.toLowerCase()} threw error '${e}'.`);\r\n            }\r\n\r\n            if (invocationMessage.invocationId) {\r\n                // This is not supported in v1. So we return an error to avoid blocking the server waiting for the response.\r\n                const message = \"Server requested a response, which is not supported in this version of the client.\";\r\n                this.logger.log(LogLevel.Error, message);\r\n\r\n                // We don't want to wait on the stop itself.\r\n                this.stopPromise = this.stopInternal(new Error(message));\r\n            }\r\n        } else {\r\n            this.logger.log(LogLevel.Warning, `No client method with the name '${invocationMessage.target}' found.`);\r\n        }\r\n    }\r\n\r\n    private connectionClosed(error?: Error) {\r\n        this.logger.log(LogLevel.Debug, `HubConnection.connectionClosed(${error}) called while in state ${this.connectionState}.`);\r\n\r\n        // Triggering this.handshakeRejecter is insufficient because it could already be resolved without the continuation having run yet.\r\n        this.stopDuringStartError = this.stopDuringStartError || error || new Error(\"The underlying connection was closed before the hub handshake could complete.\");\r\n\r\n        // If the handshake is in progress, start will be waiting for the handshake promise, so we complete it.\r\n        // If it has already completed, this should just noop.\r\n        if (this.handshakeResolver) {\r\n            this.handshakeResolver();\r\n        }\r\n\r\n        this.cancelCallbacksWithError(error || new Error(\"Invocation canceled due to the underlying connection being closed.\"));\r\n\r\n        this.cleanupTimeout();\r\n        this.cleanupPingTimer();\r\n\r\n        if (this.connectionState === HubConnectionState.Disconnecting) {\r\n            this.completeClose(error);\r\n        } else if (this.connectionState === HubConnectionState.Connected && this.reconnectPolicy) {\r\n            // tslint:disable-next-line:no-floating-promises\r\n            this.reconnect(error);\r\n        } else if (this.connectionState === HubConnectionState.Connected) {\r\n            this.completeClose(error);\r\n        }\r\n\r\n        // If none of the above if conditions were true were called the HubConnection must be in either:\r\n        // 1. The Connecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail it.\r\n        // 2. The Reconnecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail the current reconnect attempt\r\n        //    and potentially continue the reconnect() loop.\r\n        // 3. The Disconnected state in which case we're already done.\r\n    }\r\n\r\n    private completeClose(error?: Error) {\r\n        if (this.connectionStarted) {\r\n            this.connectionState = HubConnectionState.Disconnected;\r\n            this.connectionStarted = false;\r\n\r\n            try {\r\n                this.closedCallbacks.forEach((c) => c.apply(this, [error]));\r\n            } catch (e) {\r\n                this.logger.log(LogLevel.Error, `An onclose callback called with error '${error}' threw error '${e}'.`);\r\n            }\r\n        }\r\n    }\r\n\r\n    private async reconnect(error?: Error) {\r\n        const reconnectStartTime = Date.now();\r\n        let previousReconnectAttempts = 0;\r\n        let retryError = error !== undefined ? error : new Error(\"Attempting to reconnect due to a unknown error.\");\r\n\r\n        let nextRetryDelay = this.getNextRetryDelay(previousReconnectAttempts++, 0, retryError);\r\n\r\n        if (nextRetryDelay === null) {\r\n            this.logger.log(LogLevel.Debug, \"Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt.\");\r\n            this.completeClose(error);\r\n            return;\r\n        }\r\n\r\n        this.connectionState = HubConnectionState.Reconnecting;\r\n\r\n        if (error) {\r\n            this.logger.log(LogLevel.Information, `Connection reconnecting because of error '${error}'.`);\r\n        } else {\r\n            this.logger.log(LogLevel.Information, \"Connection reconnecting.\");\r\n        }\r\n\r\n        if (this.onreconnecting) {\r\n            try {\r\n                this.reconnectingCallbacks.forEach((c) => c.apply(this, [error]));\r\n            } catch (e) {\r\n                this.logger.log(LogLevel.Error, `An onreconnecting callback called with error '${error}' threw error '${e}'.`);\r\n            }\r\n\r\n            // Exit early if an onreconnecting callback called connection.stop().\r\n            if (this.connectionState !== HubConnectionState.Reconnecting) {\r\n                this.logger.log(LogLevel.Debug, \"Connection left the reconnecting state in onreconnecting callback. Done reconnecting.\");\r\n                return;\r\n            }\r\n        }\r\n\r\n        while (nextRetryDelay !== null) {\r\n            this.logger.log(LogLevel.Information, `Reconnect attempt number ${previousReconnectAttempts} will start in ${nextRetryDelay} ms.`);\r\n\r\n            await new Promise((resolve) => {\r\n                this.reconnectDelayHandle = setTimeout(resolve, nextRetryDelay!);\r\n            });\r\n            this.reconnectDelayHandle = undefined;\r\n\r\n            if (this.connectionState !== HubConnectionState.Reconnecting) {\r\n                this.logger.log(LogLevel.Debug, \"Connection left the reconnecting state during reconnect delay. Done reconnecting.\");\r\n                return;\r\n            }\r\n\r\n            try {\r\n                await this.startInternal();\r\n\r\n                this.connectionState = HubConnectionState.Connected;\r\n                this.logger.log(LogLevel.Information, \"HubConnection reconnected successfully.\");\r\n\r\n                if (this.onreconnected) {\r\n                    try {\r\n                        this.reconnectedCallbacks.forEach((c) => c.apply(this, [this.connection.connectionId]));\r\n                    } catch (e) {\r\n                        this.logger.log(LogLevel.Error, `An onreconnected callback called with connectionId '${this.connection.connectionId}; threw error '${e}'.`);\r\n                    }\r\n                }\r\n\r\n                return;\r\n            } catch (e) {\r\n                this.logger.log(LogLevel.Information, `Reconnect attempt failed because of error '${e}'.`);\r\n\r\n                if (this.connectionState !== HubConnectionState.Reconnecting) {\r\n                    this.logger.log(LogLevel.Debug, `Connection moved to the '${this.connectionState}' from the reconnecting state during reconnect attempt. Done reconnecting.`);\r\n                    // The TypeScript compiler thinks that connectionState must be Connected here. The TypeScript compiler is wrong.\r\n                    if (this.connectionState as any === HubConnectionState.Disconnecting) {\r\n                        this.completeClose();\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                retryError = e instanceof Error ? e : new Error(e.toString());\r\n                nextRetryDelay = this.getNextRetryDelay(previousReconnectAttempts++, Date.now() - reconnectStartTime, retryError);\r\n            }\r\n        }\r\n\r\n        this.logger.log(LogLevel.Information, `Reconnect retries have been exhausted after ${Date.now() - reconnectStartTime} ms and ${previousReconnectAttempts} failed attempts. Connection disconnecting.`);\r\n\r\n        this.completeClose();\r\n    }\r\n\r\n    private getNextRetryDelay(previousRetryCount: number, elapsedMilliseconds: number, retryReason: Error) {\r\n        try {\r\n            return this.reconnectPolicy!.nextRetryDelayInMilliseconds({\r\n                elapsedMilliseconds,\r\n                previousRetryCount,\r\n                retryReason,\r\n            });\r\n        } catch (e) {\r\n            this.logger.log(LogLevel.Error, `IRetryPolicy.nextRetryDelayInMilliseconds(${previousRetryCount}, ${elapsedMilliseconds}) threw error '${e}'.`);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    private cancelCallbacksWithError(error: Error) {\r\n        const callbacks = this.callbacks;\r\n        this.callbacks = {};\r\n\r\n        Object.keys(callbacks)\r\n            .forEach((key) => {\r\n                const callback = callbacks[key];\r\n                callback(null, error);\r\n            });\r\n    }\r\n\r\n    private cleanupPingTimer(): void {\r\n        if (this.pingServerHandle) {\r\n            clearTimeout(this.pingServerHandle);\r\n            this.pingServerHandle = undefined;\r\n        }\r\n    }\r\n\r\n    private cleanupTimeout(): void {\r\n        if (this.timeoutHandle) {\r\n            clearTimeout(this.timeoutHandle);\r\n        }\r\n    }\r\n\r\n    private createInvocation(methodName: string, args: any[], nonblocking: boolean, streamIds: string[]): InvocationMessage {\r\n        if (nonblocking) {\r\n            if (streamIds.length !== 0) {\r\n                return {\r\n                    arguments: args,\r\n                    streamIds,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            } else {\r\n                return {\r\n                    arguments: args,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n        } else {\r\n            const invocationId = this.invocationId;\r\n            this.invocationId++;\r\n\r\n            if (streamIds.length !== 0) {\r\n                return {\r\n                    arguments: args,\r\n                    invocationId: invocationId.toString(),\r\n                    streamIds,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            } else {\r\n                return {\r\n                    arguments: args,\r\n                    invocationId: invocationId.toString(),\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n    private launchStreams(streams: Array<IStreamResult<any>>, promiseQueue: Promise<void>): void {\r\n        if (streams.length === 0) {\r\n            return;\r\n        }\r\n\r\n        // Synchronize stream data so they arrive in-order on the server\r\n        if (!promiseQueue) {\r\n            promiseQueue = Promise.resolve();\r\n        }\r\n\r\n        // We want to iterate over the keys, since the keys are the stream ids\r\n        // tslint:disable-next-line:forin\r\n        for (const streamId in streams) {\r\n            streams[streamId].subscribe({\r\n                complete: () => {\r\n                    promiseQueue = promiseQueue.then(() => this.sendWithProtocol(this.createCompletionMessage(streamId)));\r\n                },\r\n                error: (err) => {\r\n                    let message: string;\r\n                    if (err instanceof Error) {\r\n                        message = err.message;\r\n                    } else if (err && err.toString) {\r\n                        message = err.toString();\r\n                    } else {\r\n                        message = \"Unknown error\";\r\n                    }\r\n\r\n                    promiseQueue = promiseQueue.then(() => this.sendWithProtocol(this.createCompletionMessage(streamId, message)));\r\n                },\r\n                next: (item) => {\r\n                    promiseQueue = promiseQueue.then(() => this.sendWithProtocol(this.createStreamItemMessage(streamId, item)));\r\n                },\r\n            });\r\n        }\r\n    }\r\n\r\n    private replaceStreamingParams(args: any[]): [Array<IStreamResult<any>>, string[]] {\r\n        const streams: Array<IStreamResult<any>> = [];\r\n        const streamIds: string[] = [];\r\n        for (let i = 0; i < args.length; i++) {\r\n            const argument = args[i];\r\n            if (this.isObservable(argument)) {\r\n                const streamId = this.invocationId;\r\n                this.invocationId++;\r\n                // Store the stream for later use\r\n                streams[streamId] = argument;\r\n                streamIds.push(streamId.toString());\r\n\r\n                // remove stream from args\r\n                args.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        return [streams, streamIds];\r\n    }\r\n\r\n    private isObservable(arg: any): arg is IStreamResult<any> {\r\n        // This allows other stream implementations to just work (like rxjs)\r\n        return arg && arg.subscribe && typeof arg.subscribe === \"function\";\r\n    }\r\n\r\n    private createStreamInvocation(methodName: string, args: any[], streamIds: string[]): StreamInvocationMessage {\r\n        const invocationId = this.invocationId;\r\n        this.invocationId++;\r\n\r\n        if (streamIds.length !== 0) {\r\n            return {\r\n                arguments: args,\r\n                invocationId: invocationId.toString(),\r\n                streamIds,\r\n                target: methodName,\r\n                type: MessageType.StreamInvocation,\r\n            };\r\n        } else {\r\n            return {\r\n                arguments: args,\r\n                invocationId: invocationId.toString(),\r\n                target: methodName,\r\n                type: MessageType.StreamInvocation,\r\n            };\r\n        }\r\n    }\r\n\r\n    private createCancelInvocation(id: string): CancelInvocationMessage {\r\n        return {\r\n            invocationId: id,\r\n            type: MessageType.CancelInvocation,\r\n        };\r\n    }\r\n\r\n    private createStreamItemMessage(id: string, item: any): StreamItemMessage {\r\n        return {\r\n            invocationId: id,\r\n            item,\r\n            type: MessageType.StreamItem,\r\n        };\r\n    }\r\n\r\n    private createCompletionMessage(id: string, error?: any, result?: any): CompletionMessage {\r\n        if (error) {\r\n            return {\r\n                error,\r\n                invocationId: id,\r\n                type: MessageType.Completion,\r\n            };\r\n        }\r\n\r\n        return {\r\n            invocationId: id,\r\n            result,\r\n            type: MessageType.Completion,\r\n        };\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { IRetryPolicy, RetryContext } from \"./IRetryPolicy\";\r\n\r\n// 0, 2, 10, 30 second delays before reconnect attempts.\r\nconst DEFAULT_RETRY_DELAYS_IN_MILLISECONDS = [0, 2000, 10000, 30000, null];\r\n\r\n/** @private */\r\nexport class DefaultReconnectPolicy implements IRetryPolicy {\r\n    private readonly retryDelays: Array<number | null>;\r\n\r\n    constructor(retryDelays?: number[]) {\r\n        this.retryDelays = retryDelays !== undefined ? [...retryDelays, null] : DEFAULT_RETRY_DELAYS_IN_MILLISECONDS;\r\n    }\r\n\r\n    public nextRetryDelayInMilliseconds(retryContext: RetryContext): number | null {\r\n        return this.retryDelays[retryContext.previousRetryCount];\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// This will be treated as a bit flag in the future, so we keep it using power-of-two values.\r\n/** Specifies a specific HTTP transport type. */\r\nexport enum HttpTransportType {\r\n    /** Specifies no transport preference. */\r\n    None = 0,\r\n    /** Specifies the WebSockets transport. */\r\n    WebSockets = 1,\r\n    /** Specifies the Server-Sent Events transport. */\r\n    ServerSentEvents = 2,\r\n    /** Specifies the Long Polling transport. */\r\n    LongPolling = 4,\r\n}\r\n\r\n/** Specifies the transfer format for a connection. */\r\nexport enum TransferFormat {\r\n    /** Specifies that only text data will be transmitted over the connection. */\r\n    Text = 1,\r\n    /** Specifies that binary data will be transmitted over the connection. */\r\n    Binary = 2,\r\n}\r\n\r\n/** An abstraction over the behavior of transports. This is designed to support the framework and not intended for use by applications. */\r\nexport interface ITransport {\r\n    connect(url: string, transferFormat: TransferFormat): Promise<void>;\r\n    send(data: any): Promise<void>;\r\n    stop(): Promise<void>;\r\n    onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    onclose: ((error?: Error) => void) | null;\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// Rough polyfill of https://developer.mozilla.org/en-US/docs/Web/API/AbortController\r\n// We don't actually ever use the API being polyfilled, we always use the polyfill because\r\n// it's a very new API right now.\r\n\r\n// Not exported from index.\r\n/** @private */\r\nexport class AbortController implements AbortSignal {\r\n    private isAborted: boolean = false;\r\n    public onabort: (() => void) | null = null;\r\n\r\n    public abort() {\r\n        if (!this.isAborted) {\r\n            this.isAborted = true;\r\n            if (this.onabort) {\r\n                this.onabort();\r\n            }\r\n        }\r\n    }\r\n\r\n    get signal(): AbortSignal {\r\n        return this;\r\n    }\r\n\r\n    get aborted(): boolean {\r\n        return this.isAborted;\r\n    }\r\n}\r\n\r\n/** Represents a signal that can be monitored to determine if a request has been aborted. */\r\nexport interface AbortSignal {\r\n    /** Indicates if the request has been aborted. */\r\n    aborted: boolean;\r\n    /** Set this to a handler that will be invoked when the request is aborted. */\r\n    onabort: (() => void) | null;\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { AbortController } from \"./AbortController\";\r\nimport { HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpRequest } from \"./HttpClient\";\r\nimport { MessageHeaders } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { ITransport, TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, sendMessage } from \"./Utils\";\r\n\r\n// Not exported from 'index', this type is internal.\r\n/** @private */\r\nexport class LongPollingTransport implements ITransport {\r\n    private readonly httpClient: HttpClient;\r\n    private readonly accessTokenFactory: (() => string | Promise<string>) | undefined;\r\n    private readonly logger: ILogger;\r\n    private readonly logMessageContent: boolean;\r\n    private readonly withCredentials: boolean;\r\n    private readonly pollAbort: AbortController;\r\n    private readonly headers: MessageHeaders;\r\n\r\n    private url?: string;\r\n    private running: boolean;\r\n    private receiving?: Promise<void>;\r\n    private closeError?: Error;\r\n\r\n    public onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    public onclose: ((error?: Error) => void) | null;\r\n\r\n    // This is an internal type, not exported from 'index' so this is really just internal.\r\n    public get pollAborted() {\r\n        return this.pollAbort.aborted;\r\n    }\r\n\r\n    constructor(httpClient: HttpClient, accessTokenFactory: (() => string | Promise<string>) | undefined, logger: ILogger, logMessageContent: boolean, withCredentials: boolean, headers: MessageHeaders) {\r\n        this.httpClient = httpClient;\r\n        this.accessTokenFactory = accessTokenFactory;\r\n        this.logger = logger;\r\n        this.pollAbort = new AbortController();\r\n        this.logMessageContent = logMessageContent;\r\n        this.withCredentials = withCredentials;\r\n        this.headers = headers;\r\n\r\n        this.running = false;\r\n\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n\r\n    public async connect(url: string, transferFormat: TransferFormat): Promise<void> {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n\r\n        this.url = url;\r\n\r\n        this.logger.log(LogLevel.Trace, \"(LongPolling transport) Connecting.\");\r\n\r\n        // Allow binary format on Node and Browsers that support binary content (indicated by the presence of responseType property)\r\n        if (transferFormat === TransferFormat.Binary &&\r\n            (typeof XMLHttpRequest !== \"undefined\" && typeof new XMLHttpRequest().responseType !== \"string\")) {\r\n            throw new Error(\"Binary protocols over XmlHttpRequest not implementing advanced features are not supported.\");\r\n        }\r\n\r\n        const [name, value] = getUserAgentHeader();\r\n        const headers = { [name]: value, ...this.headers };\r\n\r\n        const pollOptions: HttpRequest = {\r\n            abortSignal: this.pollAbort.signal,\r\n            headers,\r\n            timeout: 100000,\r\n            withCredentials: this.withCredentials,\r\n        };\r\n\r\n        if (transferFormat === TransferFormat.Binary) {\r\n            pollOptions.responseType = \"arraybuffer\";\r\n        }\r\n\r\n        const token = await this.getAccessToken();\r\n        this.updateHeaderToken(pollOptions, token);\r\n\r\n        // Make initial long polling request\r\n        // Server uses first long polling request to finish initializing connection and it returns without data\r\n        const pollUrl = `${url}&_=${Date.now()}`;\r\n        this.logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);\r\n        const response = await this.httpClient.get(pollUrl, pollOptions);\r\n        if (response.statusCode !== 200) {\r\n            this.logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);\r\n\r\n            // Mark running as false so that the poll immediately ends and runs the close logic\r\n            this.closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n            this.running = false;\r\n        } else {\r\n            this.running = true;\r\n        }\r\n\r\n        this.receiving = this.poll(this.url, pollOptions);\r\n    }\r\n\r\n    private async getAccessToken(): Promise<string | null> {\r\n        if (this.accessTokenFactory) {\r\n            return await this.accessTokenFactory();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    private updateHeaderToken(request: HttpRequest, token: string | null) {\r\n        if (!request.headers) {\r\n            request.headers = {};\r\n        }\r\n        if (token) {\r\n            // tslint:disable-next-line:no-string-literal\r\n            request.headers[\"Authorization\"] = `Bearer ${token}`;\r\n            return;\r\n        }\r\n        // tslint:disable-next-line:no-string-literal\r\n        if (request.headers[\"Authorization\"]) {\r\n            // tslint:disable-next-line:no-string-literal\r\n            delete request.headers[\"Authorization\"];\r\n        }\r\n    }\r\n\r\n    private async poll(url: string, pollOptions: HttpRequest): Promise<void> {\r\n        try {\r\n            while (this.running) {\r\n                // We have to get the access token on each poll, in case it changes\r\n                const token = await this.getAccessToken();\r\n                this.updateHeaderToken(pollOptions, token);\r\n\r\n                try {\r\n                    const pollUrl = `${url}&_=${Date.now()}`;\r\n                    this.logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);\r\n                    const response = await this.httpClient.get(pollUrl, pollOptions);\r\n\r\n                    if (response.statusCode === 204) {\r\n                        this.logger.log(LogLevel.Information, \"(LongPolling transport) Poll terminated by server.\");\r\n\r\n                        this.running = false;\r\n                    } else if (response.statusCode !== 200) {\r\n                        this.logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);\r\n\r\n                        // Unexpected status code\r\n                        this.closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n                        this.running = false;\r\n                    } else {\r\n                        // Process the response\r\n                        if (response.content) {\r\n                            this.logger.log(LogLevel.Trace, `(LongPolling transport) data received. ${getDataDetail(response.content, this.logMessageContent)}.`);\r\n                            if (this.onreceive) {\r\n                                this.onreceive(response.content);\r\n                            }\r\n                        } else {\r\n                            // This is another way timeout manifest.\r\n                            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    if (!this.running) {\r\n                        // Log but disregard errors that occur after stopping\r\n                        this.logger.log(LogLevel.Trace, `(LongPolling transport) Poll errored after shutdown: ${e.message}`);\r\n                    } else {\r\n                        if (e instanceof TimeoutError) {\r\n                            // Ignore timeouts and reissue the poll.\r\n                            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                        } else {\r\n                            // Close the connection with the error as the result.\r\n                            this.closeError = e;\r\n                            this.running = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } finally {\r\n            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Polling complete.\");\r\n\r\n            // We will reach here with pollAborted==false when the server returned a response causing the transport to stop.\r\n            // If pollAborted==true then client initiated the stop and the stop method will raise the close event after DELETE is sent.\r\n            if (!this.pollAborted) {\r\n                this.raiseOnClose();\r\n            }\r\n        }\r\n    }\r\n\r\n    public async send(data: any): Promise<void> {\r\n        if (!this.running) {\r\n            return Promise.reject(new Error(\"Cannot send until the transport is connected\"));\r\n        }\r\n        return sendMessage(this.logger, \"LongPolling\", this.httpClient, this.url!, this.accessTokenFactory, data, this.logMessageContent, this.withCredentials, this.headers);\r\n    }\r\n\r\n    public async stop(): Promise<void> {\r\n        this.logger.log(LogLevel.Trace, \"(LongPolling transport) Stopping polling.\");\r\n\r\n        // Tell receiving loop to stop, abort any current request, and then wait for it to finish\r\n        this.running = false;\r\n        this.pollAbort.abort();\r\n\r\n        try {\r\n            await this.receiving;\r\n\r\n            // Send DELETE to clean up long polling on the server\r\n            this.logger.log(LogLevel.Trace, `(LongPolling transport) sending DELETE request to ${this.url}.`);\r\n\r\n            const headers = {};\r\n            const [name, value] = getUserAgentHeader();\r\n            headers[name] = value;\r\n\r\n            const deleteOptions: HttpRequest = {\r\n                headers: { ...headers, ...this.headers },\r\n                withCredentials: this.withCredentials,\r\n            };\r\n            const token = await this.getAccessToken();\r\n            this.updateHeaderToken(deleteOptions, token);\r\n            await this.httpClient.delete(this.url!, deleteOptions);\r\n\r\n            this.logger.log(LogLevel.Trace, \"(LongPolling transport) DELETE request sent.\");\r\n        } finally {\r\n            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Stop finished.\");\r\n\r\n            // Raise close event here instead of in polling\r\n            // It needs to happen after the DELETE request is sent\r\n            this.raiseOnClose();\r\n        }\r\n    }\r\n\r\n    private raiseOnClose() {\r\n        if (this.onclose) {\r\n            let logMessage = \"(LongPolling transport) Firing onclose event.\";\r\n            if (this.closeError) {\r\n                logMessage += \" Error: \" + this.closeError;\r\n            }\r\n            this.logger.log(LogLevel.Trace, logMessage);\r\n            this.onclose(this.closeError);\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { MessageHeaders } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { ITransport, TransferFormat } from \"./ITransport\";\r\nimport { EventSourceConstructor } from \"./Polyfills\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, Platform, sendMessage } from \"./Utils\";\r\n\r\n/** @private */\r\nexport class ServerSentEventsTransport implements ITransport {\r\n    private readonly httpClient: HttpClient;\r\n    private readonly accessTokenFactory: (() => string | Promise<string>) | undefined;\r\n    private readonly logger: ILogger;\r\n    private readonly logMessageContent: boolean;\r\n    private readonly withCredentials: boolean;\r\n    private readonly eventSourceConstructor: EventSourceConstructor;\r\n    private eventSource?: EventSource;\r\n    private url?: string;\r\n    private headers: MessageHeaders;\r\n\r\n    public onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    public onclose: ((error?: Error) => void) | null;\r\n\r\n    constructor(httpClient: HttpClient, accessTokenFactory: (() => string | Promise<string>) | undefined, logger: ILogger,\r\n                logMessageContent: boolean, eventSourceConstructor: EventSourceConstructor, withCredentials: boolean, headers: MessageHeaders) {\r\n        this.httpClient = httpClient;\r\n        this.accessTokenFactory = accessTokenFactory;\r\n        this.logger = logger;\r\n        this.logMessageContent = logMessageContent;\r\n        this.withCredentials = withCredentials;\r\n        this.eventSourceConstructor = eventSourceConstructor;\r\n        this.headers = headers;\r\n\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n\r\n    public async connect(url: string, transferFormat: TransferFormat): Promise<void> {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n\r\n        this.logger.log(LogLevel.Trace, \"(SSE transport) Connecting.\");\r\n\r\n        // set url before accessTokenFactory because this.url is only for send and we set the auth header instead of the query string for send\r\n        this.url = url;\r\n\r\n        if (this.accessTokenFactory) {\r\n            const token = await this.accessTokenFactory();\r\n            if (token) {\r\n                url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + `access_token=${encodeURIComponent(token)}`;\r\n            }\r\n        }\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            let opened = false;\r\n            if (transferFormat !== TransferFormat.Text) {\r\n                reject(new Error(\"The Server-Sent Events transport only supports the 'Text' transfer format\"));\r\n                return;\r\n            }\r\n\r\n            let eventSource: EventSource;\r\n            if (Platform.isBrowser || Platform.isWebWorker) {\r\n                eventSource = new this.eventSourceConstructor(url, { withCredentials: this.withCredentials });\r\n            } else {\r\n                // Non-browser passes cookies via the dictionary\r\n                const cookies = this.httpClient.getCookieString(url);\r\n                const headers: MessageHeaders = {};\r\n                headers.Cookie = cookies;\r\n                const [name, value] = getUserAgentHeader();\r\n                headers[name] = value;\r\n\r\n                eventSource = new this.eventSourceConstructor(url, { withCredentials: this.withCredentials, headers: { ...headers, ...this.headers} } as EventSourceInit);\r\n            }\r\n\r\n            try {\r\n                eventSource.onmessage = (e: MessageEvent) => {\r\n                    if (this.onreceive) {\r\n                        try {\r\n                            this.logger.log(LogLevel.Trace, `(SSE transport) data received. ${getDataDetail(e.data, this.logMessageContent)}.`);\r\n                            this.onreceive(e.data);\r\n                        } catch (error) {\r\n                            this.close(error);\r\n                            return;\r\n                        }\r\n                    }\r\n                };\r\n\r\n                eventSource.onerror = (e: MessageEvent) => {\r\n                    const error = new Error(e.data || \"Error occurred\");\r\n                    if (opened) {\r\n                        this.close(error);\r\n                    } else {\r\n                        reject(error);\r\n                    }\r\n                };\r\n\r\n                eventSource.onopen = () => {\r\n                    this.logger.log(LogLevel.Information, `SSE connected to ${this.url}`);\r\n                    this.eventSource = eventSource;\r\n                    opened = true;\r\n                    resolve();\r\n                };\r\n            } catch (e) {\r\n                reject(e);\r\n                return;\r\n            }\r\n        });\r\n    }\r\n\r\n    public async send(data: any): Promise<void> {\r\n        if (!this.eventSource) {\r\n            return Promise.reject(new Error(\"Cannot send until the transport is connected\"));\r\n        }\r\n        return sendMessage(this.logger, \"SSE\", this.httpClient, this.url!, this.accessTokenFactory, data, this.logMessageContent, this.withCredentials, this.headers);\r\n    }\r\n\r\n    public stop(): Promise<void> {\r\n        this.close();\r\n        return Promise.resolve();\r\n    }\r\n\r\n    private close(e?: Error) {\r\n        if (this.eventSource) {\r\n            this.eventSource.close();\r\n            this.eventSource = undefined;\r\n\r\n            if (this.onclose) {\r\n                this.onclose(e);\r\n            }\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { MessageHeaders } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { ITransport, TransferFormat } from \"./ITransport\";\r\nimport { WebSocketConstructor } from \"./Polyfills\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, Platform } from \"./Utils\";\r\n\r\n/** @private */\r\nexport class WebSocketTransport implements ITransport {\r\n    private readonly logger: ILogger;\r\n    private readonly accessTokenFactory: (() => string | Promise<string>) | undefined;\r\n    private readonly logMessageContent: boolean;\r\n    private readonly webSocketConstructor: WebSocketConstructor;\r\n    private readonly httpClient: HttpClient;\r\n    private webSocket?: WebSocket;\r\n    private headers: MessageHeaders;\r\n\r\n    public onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    public onclose: ((error?: Error) => void) | null;\r\n\r\n    constructor(httpClient: HttpClient, accessTokenFactory: (() => string | Promise<string>) | undefined, logger: ILogger,\r\n                logMessageContent: boolean, webSocketConstructor: WebSocketConstructor, headers: MessageHeaders) {\r\n        this.logger = logger;\r\n        this.accessTokenFactory = accessTokenFactory;\r\n        this.logMessageContent = logMessageContent;\r\n        this.webSocketConstructor = webSocketConstructor;\r\n        this.httpClient = httpClient;\r\n\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n        this.headers = headers;\r\n    }\r\n\r\n    public async connect(url: string, transferFormat: TransferFormat): Promise<void> {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this.logger.log(LogLevel.Trace, \"(WebSockets transport) Connecting.\");\r\n\r\n        if (this.accessTokenFactory) {\r\n            const token = await this.accessTokenFactory();\r\n            if (token) {\r\n                url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + `access_token=${encodeURIComponent(token)}`;\r\n            }\r\n        }\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            url = url.replace(/^http/, \"ws\");\r\n            let webSocket: WebSocket | undefined;\r\n            const cookies = this.httpClient.getCookieString(url);\r\n            let opened = false;\r\n\r\n            if (Platform.isNode) {\r\n                const headers = {};\r\n                const [name, value] = getUserAgentHeader();\r\n                headers[name] = value;\r\n\r\n                if (cookies) {\r\n                    headers[`Cookie`] = `${cookies}`;\r\n                }\r\n\r\n                // Only pass headers when in non-browser environments\r\n                webSocket = new this.webSocketConstructor(url, undefined, {\r\n                    headers: { ...headers, ...this.headers },\r\n                });\r\n            }\r\n\r\n            if (!webSocket) {\r\n                // Chrome is not happy with passing 'undefined' as protocol\r\n                webSocket = new this.webSocketConstructor(url);\r\n            }\r\n\r\n            if (transferFormat === TransferFormat.Binary) {\r\n                webSocket.binaryType = \"arraybuffer\";\r\n            }\r\n\r\n            // tslint:disable-next-line:variable-name\r\n            webSocket.onopen = (_event: Event) => {\r\n                this.logger.log(LogLevel.Information, `WebSocket connected to ${url}.`);\r\n                this.webSocket = webSocket;\r\n                opened = true;\r\n                resolve();\r\n            };\r\n\r\n            webSocket.onerror = (event: Event) => {\r\n                let error: any = null;\r\n                // ErrorEvent is a browser only type we need to check if the type exists before using it\r\n                if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\r\n                    error = event.error;\r\n                } else {\r\n                    error = new Error(\"There was an error with the transport.\");\r\n                }\r\n\r\n                reject(error);\r\n            };\r\n\r\n            webSocket.onmessage = (message: MessageEvent) => {\r\n                this.logger.log(LogLevel.Trace, `(WebSockets transport) data received. ${getDataDetail(message.data, this.logMessageContent)}.`);\r\n                if (this.onreceive) {\r\n                    try {\r\n                        this.onreceive(message.data);\r\n                    } catch (error) {\r\n                        this.close(error);\r\n                        return;\r\n                    }\r\n                }\r\n            };\r\n\r\n            webSocket.onclose = (event: CloseEvent) => {\r\n                // Don't call close handler if connection was never established\r\n                // We'll reject the connect call instead\r\n                if (opened) {\r\n                    this.close(event);\r\n                } else {\r\n                    let error: any = null;\r\n                    // ErrorEvent is a browser only type we need to check if the type exists before using it\r\n                    if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\r\n                        error = event.error;\r\n                    } else {\r\n                        error = new Error(\"There was an error with the transport.\");\r\n                    }\r\n\r\n                    reject(error);\r\n                }\r\n            };\r\n        });\r\n    }\r\n\r\n    public send(data: any): Promise<void> {\r\n        if (this.webSocket && this.webSocket.readyState === this.webSocketConstructor.OPEN) {\r\n            this.logger.log(LogLevel.Trace, `(WebSockets transport) sending data. ${getDataDetail(data, this.logMessageContent)}.`);\r\n            this.webSocket.send(data);\r\n            return Promise.resolve();\r\n        }\r\n\r\n        return Promise.reject(\"WebSocket is not in the OPEN state\");\r\n    }\r\n\r\n    public stop(): Promise<void> {\r\n        if (this.webSocket) {\r\n            // Manually invoke onclose callback inline so we know the HttpConnection was closed properly before returning\r\n            // This also solves an issue where websocket.onclose could take 18+ seconds to trigger during network disconnects\r\n            this.close(undefined);\r\n        }\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    private close(event?: CloseEvent | Error): void {\r\n        // webSocket will be null if the transport did not start successfully\r\n        if (this.webSocket) {\r\n            // Clear websocket handlers because we are considering the socket closed now\r\n            this.webSocket.onclose = () => {};\r\n            this.webSocket.onmessage = () => {};\r\n            this.webSocket.onerror = () => {};\r\n            this.webSocket.close();\r\n            this.webSocket = undefined;\r\n        }\r\n\r\n        this.logger.log(LogLevel.Trace, \"(WebSockets transport) socket closed.\");\r\n        if (this.onclose) {\r\n            if (this.isCloseEvent(event) && (event.wasClean === false || event.code !== 1000)) {\r\n                this.onclose(new Error(`WebSocket closed with status code: ${event.code} (${event.reason}).`));\r\n            } else if (event instanceof Error) {\r\n                this.onclose(event);\r\n            } else {\r\n                this.onclose();\r\n            }\r\n        }\r\n    }\r\n\r\n    private isCloseEvent(event?: any): event is CloseEvent {\r\n        return event && typeof event.wasClean === \"boolean\" && typeof event.code === \"number\";\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { DefaultHttpClient } from \"./DefaultHttpClient\";\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { IConnection } from \"./IConnection\";\r\nimport { IHttpConnectionOptions } from \"./IHttpConnectionOptions\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { HttpTransportType, ITransport, TransferFormat } from \"./ITransport\";\r\nimport { LongPollingTransport } from \"./LongPollingTransport\";\r\nimport { ServerSentEventsTransport } from \"./ServerSentEventsTransport\";\r\nimport { Arg, createLogger, getUserAgentHeader, Platform } from \"./Utils\";\r\nimport { WebSocketTransport } from \"./WebSocketTransport\";\r\n\r\n/** @private */\r\nconst enum ConnectionState {\r\n    Connecting = \"Connecting\",\r\n    Connected = \"Connected\",\r\n    Disconnected = \"Disconnected\",\r\n    Disconnecting = \"Disconnecting\",\r\n}\r\n\r\n/** @private */\r\nexport interface INegotiateResponse {\r\n    connectionId?: string;\r\n    connectionToken?: string;\r\n    negotiateVersion?: number;\r\n    availableTransports?: IAvailableTransport[];\r\n    url?: string;\r\n    accessToken?: string;\r\n    error?: string;\r\n}\r\n\r\n/** @private */\r\nexport interface IAvailableTransport {\r\n    transport: keyof typeof HttpTransportType;\r\n    transferFormats: Array<keyof typeof TransferFormat>;\r\n}\r\n\r\nconst MAX_REDIRECTS = 100;\r\n\r\n/** @private */\r\nexport class HttpConnection implements IConnection {\r\n    private connectionState: ConnectionState;\r\n    // connectionStarted is tracked independently from connectionState, so we can check if the\r\n    // connection ever did successfully transition from connecting to connected before disconnecting.\r\n    private connectionStarted: boolean;\r\n    private readonly httpClient: HttpClient;\r\n    private readonly logger: ILogger;\r\n    private readonly options: IHttpConnectionOptions;\r\n    private transport?: ITransport;\r\n    private startInternalPromise?: Promise<void>;\r\n    private stopPromise?: Promise<void>;\r\n    private stopPromiseResolver: (value?: PromiseLike<void>) => void = () => {};\r\n    private stopError?: Error;\r\n    private accessTokenFactory?: () => string | Promise<string>;\r\n    private sendQueue?: TransportSendQueue;\r\n\r\n    public readonly features: any = {};\r\n    public baseUrl: string;\r\n    public connectionId?: string;\r\n    public onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    public onclose: ((e?: Error) => void) | null;\r\n\r\n    private readonly negotiateVersion: number = 1;\r\n\r\n    constructor(url: string, options: IHttpConnectionOptions = {}) {\r\n        Arg.isRequired(url, \"url\");\r\n\r\n        this.logger = createLogger(options.logger);\r\n        this.baseUrl = this.resolveUrl(url);\r\n\r\n        options = options || {};\r\n        options.logMessageContent = options.logMessageContent === undefined ? false : options.logMessageContent;\r\n        if (typeof options.withCredentials === \"boolean\" || options.withCredentials === undefined) {\r\n            options.withCredentials = options.withCredentials === undefined ? true : options.withCredentials;\r\n        } else {\r\n            throw new Error(\"withCredentials option was not a 'boolean' or 'undefined' value\");\r\n        }\r\n\r\n        let webSocketModule: any = null;\r\n        let eventSourceModule: any = null;\r\n\r\n        if (Platform.isNode && typeof require !== \"undefined\") {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n            webSocketModule = requireFunc(\"ws\");\r\n            eventSourceModule = requireFunc(\"eventsource\");\r\n        }\r\n\r\n        if (!Platform.isNode && typeof WebSocket !== \"undefined\" && !options.WebSocket) {\r\n            options.WebSocket = WebSocket;\r\n        } else if (Platform.isNode && !options.WebSocket) {\r\n            if (webSocketModule) {\r\n                options.WebSocket = webSocketModule;\r\n            }\r\n        }\r\n\r\n        if (!Platform.isNode && typeof EventSource !== \"undefined\" && !options.EventSource) {\r\n            options.EventSource = EventSource;\r\n        } else if (Platform.isNode && !options.EventSource) {\r\n            if (typeof eventSourceModule !== \"undefined\") {\r\n                options.EventSource = eventSourceModule;\r\n            }\r\n        }\r\n\r\n        this.httpClient = options.httpClient || new DefaultHttpClient(this.logger);\r\n        this.connectionState = ConnectionState.Disconnected;\r\n        this.connectionStarted = false;\r\n        this.options = options;\r\n\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n\r\n    public start(): Promise<void>;\r\n    public start(transferFormat: TransferFormat): Promise<void>;\r\n    public async start(transferFormat?: TransferFormat): Promise<void> {\r\n        transferFormat = transferFormat || TransferFormat.Binary;\r\n\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n\r\n        this.logger.log(LogLevel.Debug, `Starting connection with transfer format '${TransferFormat[transferFormat]}'.`);\r\n\r\n        if (this.connectionState !== ConnectionState.Disconnected) {\r\n            return Promise.reject(new Error(\"Cannot start an HttpConnection that is not in the 'Disconnected' state.\"));\r\n        }\r\n\r\n        this.connectionState = ConnectionState.Connecting;\r\n\r\n        this.startInternalPromise = this.startInternal(transferFormat);\r\n        await this.startInternalPromise;\r\n\r\n        // The TypeScript compiler thinks that connectionState must be Connecting here. The TypeScript compiler is wrong.\r\n        if (this.connectionState as any === ConnectionState.Disconnecting) {\r\n            // stop() was called and transitioned the client into the Disconnecting state.\r\n            const message = \"Failed to start the HttpConnection before stop() was called.\";\r\n            this.logger.log(LogLevel.Error, message);\r\n\r\n            // We cannot await stopPromise inside startInternal since stopInternal awaits the startInternalPromise.\r\n            await this.stopPromise;\r\n\r\n            return Promise.reject(new Error(message));\r\n        } else if (this.connectionState as any !== ConnectionState.Connected) {\r\n            // stop() was called and transitioned the client into the Disconnecting state.\r\n            const message = \"HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!\";\r\n            this.logger.log(LogLevel.Error, message);\r\n            return Promise.reject(new Error(message));\r\n        }\r\n\r\n        this.connectionStarted = true;\r\n    }\r\n\r\n    public send(data: string | ArrayBuffer): Promise<void> {\r\n        if (this.connectionState !== ConnectionState.Connected) {\r\n            return Promise.reject(new Error(\"Cannot send data if the connection is not in the 'Connected' State.\"));\r\n        }\r\n\r\n        if (!this.sendQueue) {\r\n            this.sendQueue = new TransportSendQueue(this.transport!);\r\n        }\r\n\r\n        // Transport will not be null if state is connected\r\n        return this.sendQueue.send(data);\r\n    }\r\n\r\n    public async stop(error?: Error): Promise<void> {\r\n        if (this.connectionState === ConnectionState.Disconnected) {\r\n            this.logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnected state.`);\r\n            return Promise.resolve();\r\n        }\r\n\r\n        if (this.connectionState === ConnectionState.Disconnecting) {\r\n            this.logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnecting state.`);\r\n            return this.stopPromise;\r\n        }\r\n\r\n        this.connectionState = ConnectionState.Disconnecting;\r\n\r\n        this.stopPromise = new Promise((resolve) => {\r\n            // Don't complete stop() until stopConnection() completes.\r\n            this.stopPromiseResolver = resolve;\r\n        });\r\n\r\n        // stopInternal should never throw so just observe it.\r\n        await this.stopInternal(error);\r\n        await this.stopPromise;\r\n    }\r\n\r\n    private async stopInternal(error?: Error): Promise<void> {\r\n        // Set error as soon as possible otherwise there is a race between\r\n        // the transport closing and providing an error and the error from a close message\r\n        // We would prefer the close message error.\r\n        this.stopError = error;\r\n\r\n        try {\r\n            await this.startInternalPromise;\r\n        } catch (e) {\r\n            // This exception is returned to the user as a rejected Promise from the start method.\r\n        }\r\n\r\n        // The transport's onclose will trigger stopConnection which will run our onclose event.\r\n        // The transport should always be set if currently connected. If it wasn't set, it's likely because\r\n        // stop was called during start() and start() failed.\r\n        if (this.transport) {\r\n            try {\r\n                await this.transport.stop();\r\n            } catch (e) {\r\n                this.logger.log(LogLevel.Error, `HttpConnection.transport.stop() threw error '${e}'.`);\r\n                this.stopConnection();\r\n            }\r\n\r\n            this.transport = undefined;\r\n        } else {\r\n            this.logger.log(LogLevel.Debug, \"HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.\");\r\n        }\r\n    }\r\n\r\n    private async startInternal(transferFormat: TransferFormat): Promise<void> {\r\n        // Store the original base url and the access token factory since they may change\r\n        // as part of negotiating\r\n        let url = this.baseUrl;\r\n        this.accessTokenFactory = this.options.accessTokenFactory;\r\n\r\n        try {\r\n            if (this.options.skipNegotiation) {\r\n                if (this.options.transport === HttpTransportType.WebSockets) {\r\n                    // No need to add a connection ID in this case\r\n                    this.transport = this.constructTransport(HttpTransportType.WebSockets);\r\n                    // We should just call connect directly in this case.\r\n                    // No fallback or negotiate in this case.\r\n                    await this.startTransport(url, transferFormat);\r\n                } else {\r\n                    throw new Error(\"Negotiation can only be skipped when using the WebSocket transport directly.\");\r\n                }\r\n            } else {\r\n                let negotiateResponse: INegotiateResponse | null = null;\r\n                let redirects = 0;\r\n\r\n                do {\r\n                    negotiateResponse = await this.getNegotiationResponse(url);\r\n                    // the user tries to stop the connection when it is being started\r\n                    if (this.connectionState === ConnectionState.Disconnecting || this.connectionState === ConnectionState.Disconnected) {\r\n                        throw new Error(\"The connection was stopped during negotiation.\");\r\n                    }\r\n\r\n                    if (negotiateResponse.error) {\r\n                        throw new Error(negotiateResponse.error);\r\n                    }\r\n\r\n                    if ((negotiateResponse as any).ProtocolVersion) {\r\n                        throw new Error(\"Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.\");\r\n                    }\r\n\r\n                    if (negotiateResponse.url) {\r\n                        url = negotiateResponse.url;\r\n                    }\r\n\r\n                    if (negotiateResponse.accessToken) {\r\n                        // Replace the current access token factory with one that uses\r\n                        // the returned access token\r\n                        const accessToken = negotiateResponse.accessToken;\r\n                        this.accessTokenFactory = () => accessToken;\r\n                    }\r\n\r\n                    redirects++;\r\n                }\r\n                while (negotiateResponse.url && redirects < MAX_REDIRECTS);\r\n\r\n                if (redirects === MAX_REDIRECTS && negotiateResponse.url) {\r\n                    throw new Error(\"Negotiate redirection limit exceeded.\");\r\n                }\r\n\r\n                await this.createTransport(url, this.options.transport, negotiateResponse, transferFormat);\r\n            }\r\n\r\n            if (this.transport instanceof LongPollingTransport) {\r\n                this.features.inherentKeepAlive = true;\r\n            }\r\n\r\n            if (this.connectionState === ConnectionState.Connecting) {\r\n                // Ensure the connection transitions to the connected state prior to completing this.startInternalPromise.\r\n                // start() will handle the case when stop was called and startInternal exits still in the disconnecting state.\r\n                this.logger.log(LogLevel.Debug, \"The HttpConnection connected successfully.\");\r\n                this.connectionState = ConnectionState.Connected;\r\n            }\r\n\r\n            // stop() is waiting on us via this.startInternalPromise so keep this.transport around so it can clean up.\r\n            // This is the only case startInternal can exit in neither the connected nor disconnected state because stopConnection()\r\n            // will transition to the disconnected state. start() will wait for the transition using the stopPromise.\r\n        } catch (e) {\r\n            this.logger.log(LogLevel.Error, \"Failed to start the connection: \" + e);\r\n            this.connectionState = ConnectionState.Disconnected;\r\n            this.transport = undefined;\r\n\r\n            // if start fails, any active calls to stop assume that start will complete the stop promise\r\n            this.stopPromiseResolver();\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n\r\n    private async getNegotiationResponse(url: string): Promise<INegotiateResponse> {\r\n        const headers = {};\r\n        if (this.accessTokenFactory) {\r\n            const token = await this.accessTokenFactory();\r\n            if (token) {\r\n                headers[`Authorization`] = `Bearer ${token}`;\r\n            }\r\n        }\r\n\r\n        const [name, value] = getUserAgentHeader();\r\n        headers[name] = value;\r\n\r\n        const negotiateUrl = this.resolveNegotiateUrl(url);\r\n        this.logger.log(LogLevel.Debug, `Sending negotiation request: ${negotiateUrl}.`);\r\n        try {\r\n            const response = await this.httpClient.post(negotiateUrl, {\r\n                content: \"\",\r\n                headers: { ...headers, ...this.options.headers },\r\n                withCredentials: this.options.withCredentials,\r\n            });\r\n\r\n            if (response.statusCode !== 200) {\r\n                return Promise.reject(new Error(`Unexpected status code returned from negotiate '${response.statusCode}'`));\r\n            }\r\n\r\n            const negotiateResponse = JSON.parse(response.content as string) as INegotiateResponse;\r\n            if (!negotiateResponse.negotiateVersion || negotiateResponse.negotiateVersion < 1) {\r\n                // Negotiate version 0 doesn't use connectionToken\r\n                // So we set it equal to connectionId so all our logic can use connectionToken without being aware of the negotiate version\r\n                negotiateResponse.connectionToken = negotiateResponse.connectionId;\r\n            }\r\n            return negotiateResponse;\r\n        } catch (e) {\r\n            this.logger.log(LogLevel.Error, \"Failed to complete negotiation with the server: \" + e);\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n\r\n    private createConnectUrl(url: string, connectionToken: string | null | undefined) {\r\n        if (!connectionToken) {\r\n            return url;\r\n        }\r\n\r\n        return url + (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + `id=${connectionToken}`;\r\n    }\r\n\r\n    private async createTransport(url: string, requestedTransport: HttpTransportType | ITransport | undefined, negotiateResponse: INegotiateResponse, requestedTransferFormat: TransferFormat): Promise<void> {\r\n        let connectUrl = this.createConnectUrl(url, negotiateResponse.connectionToken);\r\n        if (this.isITransport(requestedTransport)) {\r\n            this.logger.log(LogLevel.Debug, \"Connection was provided an instance of ITransport, using that directly.\");\r\n            this.transport = requestedTransport;\r\n            await this.startTransport(connectUrl, requestedTransferFormat);\r\n\r\n            this.connectionId = negotiateResponse.connectionId;\r\n            return;\r\n        }\r\n\r\n        const transportExceptions: any[] = [];\r\n        const transports = negotiateResponse.availableTransports || [];\r\n        let negotiate: INegotiateResponse | undefined = negotiateResponse;\r\n        for (const endpoint of transports) {\r\n            const transportOrError = this.resolveTransportOrError(endpoint, requestedTransport, requestedTransferFormat);\r\n            if (transportOrError instanceof Error) {\r\n                // Store the error and continue, we don't want to cause a re-negotiate in these cases\r\n                transportExceptions.push(`${endpoint.transport} failed: ${transportOrError}`);\r\n            } else if (this.isITransport(transportOrError)) {\r\n                this.transport = transportOrError;\r\n                if (!negotiate) {\r\n                    try {\r\n                        negotiate = await this.getNegotiationResponse(url);\r\n                    } catch (ex) {\r\n                        return Promise.reject(ex);\r\n                    }\r\n                    connectUrl = this.createConnectUrl(url, negotiate.connectionToken);\r\n                }\r\n                try {\r\n                    await this.startTransport(connectUrl, requestedTransferFormat);\r\n                    this.connectionId = negotiate.connectionId;\r\n                    return;\r\n                } catch (ex) {\r\n                    this.logger.log(LogLevel.Error, `Failed to start the transport '${endpoint.transport}': ${ex}`);\r\n                    negotiate = undefined;\r\n                    transportExceptions.push(`${endpoint.transport} failed: ${ex}`);\r\n\r\n                    if (this.connectionState !== ConnectionState.Connecting) {\r\n                        const message = \"Failed to select transport before stop() was called.\";\r\n                        this.logger.log(LogLevel.Debug, message);\r\n                        return Promise.reject(new Error(message));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (transportExceptions.length > 0) {\r\n            return Promise.reject(new Error(`Unable to connect to the server with any of the available transports. ${transportExceptions.join(\" \")}`));\r\n        }\r\n        return Promise.reject(new Error(\"None of the transports supported by the client are supported by the server.\"));\r\n    }\r\n\r\n    private constructTransport(transport: HttpTransportType): ITransport {\r\n        switch (transport) {\r\n            case HttpTransportType.WebSockets:\r\n                if (!this.options.WebSocket) {\r\n                    throw new Error(\"'WebSocket' is not supported in your environment.\");\r\n                }\r\n                return new WebSocketTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent || false, this.options.WebSocket, this.options.headers || {});\r\n            case HttpTransportType.ServerSentEvents:\r\n                if (!this.options.EventSource) {\r\n                    throw new Error(\"'EventSource' is not supported in your environment.\");\r\n                }\r\n                return new ServerSentEventsTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent || false, this.options.EventSource, this.options.withCredentials!, this.options.headers || {});\r\n            case HttpTransportType.LongPolling:\r\n                return new LongPollingTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent || false, this.options.withCredentials!, this.options.headers || {});\r\n            default:\r\n                throw new Error(`Unknown transport: ${transport}.`);\r\n        }\r\n    }\r\n\r\n    private startTransport(url: string, transferFormat: TransferFormat): Promise<void> {\r\n        this.transport!.onreceive = this.onreceive;\r\n        this.transport!.onclose = (e) => this.stopConnection(e);\r\n        return this.transport!.connect(url, transferFormat);\r\n    }\r\n\r\n    private resolveTransportOrError(endpoint: IAvailableTransport, requestedTransport: HttpTransportType | undefined, requestedTransferFormat: TransferFormat): ITransport | Error {\r\n        const transport = HttpTransportType[endpoint.transport];\r\n        if (transport === null || transport === undefined) {\r\n            this.logger.log(LogLevel.Debug, `Skipping transport '${endpoint.transport}' because it is not supported by this client.`);\r\n            return new Error(`Skipping transport '${endpoint.transport}' because it is not supported by this client.`);\r\n        } else {\r\n            if (transportMatches(requestedTransport, transport)) {\r\n                const transferFormats = endpoint.transferFormats.map((s) => TransferFormat[s]);\r\n                if (transferFormats.indexOf(requestedTransferFormat) >= 0) {\r\n                    if ((transport === HttpTransportType.WebSockets && !this.options.WebSocket) ||\r\n                        (transport === HttpTransportType.ServerSentEvents && !this.options.EventSource)) {\r\n                        this.logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it is not supported in your environment.'`);\r\n                        return new Error(`'${HttpTransportType[transport]}' is not supported in your environment.`);\r\n                    } else {\r\n                        this.logger.log(LogLevel.Debug, `Selecting transport '${HttpTransportType[transport]}'.`);\r\n                        try {\r\n                            return this.constructTransport(transport);\r\n                        } catch (ex) {\r\n                            return ex;\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it does not support the requested transfer format '${TransferFormat[requestedTransferFormat]}'.`);\r\n                    return new Error(`'${HttpTransportType[transport]}' does not support ${TransferFormat[requestedTransferFormat]}.`);\r\n                }\r\n            } else {\r\n                this.logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it was disabled by the client.`);\r\n                return new Error(`'${HttpTransportType[transport]}' is disabled by the client.`);\r\n            }\r\n        }\r\n    }\r\n\r\n    private isITransport(transport: any): transport is ITransport {\r\n        return transport && typeof (transport) === \"object\" && \"connect\" in transport;\r\n    }\r\n\r\n    private stopConnection(error?: Error): void {\r\n        this.logger.log(LogLevel.Debug, `HttpConnection.stopConnection(${error}) called while in state ${this.connectionState}.`);\r\n\r\n        this.transport = undefined;\r\n\r\n        // If we have a stopError, it takes precedence over the error from the transport\r\n        error = this.stopError || error;\r\n        this.stopError = undefined;\r\n\r\n        if (this.connectionState === ConnectionState.Disconnected) {\r\n            this.logger.log(LogLevel.Debug, `Call to HttpConnection.stopConnection(${error}) was ignored because the connection is already in the disconnected state.`);\r\n            return;\r\n        }\r\n\r\n        if (this.connectionState === ConnectionState.Connecting) {\r\n            this.logger.log(LogLevel.Warning, `Call to HttpConnection.stopConnection(${error}) was ignored because the connection is still in the connecting state.`);\r\n            throw new Error(`HttpConnection.stopConnection(${error}) was called while the connection is still in the connecting state.`);\r\n        }\r\n\r\n        if (this.connectionState === ConnectionState.Disconnecting) {\r\n            // A call to stop() induced this call to stopConnection and needs to be completed.\r\n            // Any stop() awaiters will be scheduled to continue after the onclose callback fires.\r\n            this.stopPromiseResolver();\r\n        }\r\n\r\n        if (error) {\r\n            this.logger.log(LogLevel.Error, `Connection disconnected with error '${error}'.`);\r\n        } else {\r\n            this.logger.log(LogLevel.Information, \"Connection disconnected.\");\r\n        }\r\n\r\n        if (this.sendQueue) {\r\n            this.sendQueue.stop().catch((e) => {\r\n                this.logger.log(LogLevel.Error, `TransportSendQueue.stop() threw error '${e}'.`);\r\n            });\r\n            this.sendQueue = undefined;\r\n        }\r\n\r\n        this.connectionId = undefined;\r\n        this.connectionState = ConnectionState.Disconnected;\r\n\r\n        if (this.connectionStarted) {\r\n            this.connectionStarted = false;\r\n            try {\r\n                if (this.onclose) {\r\n                    this.onclose(error);\r\n                }\r\n            } catch (e) {\r\n                this.logger.log(LogLevel.Error, `HttpConnection.onclose(${error}) threw error '${e}'.`);\r\n            }\r\n        }\r\n    }\r\n\r\n    private resolveUrl(url: string): string {\r\n        // startsWith is not supported in IE\r\n        if (url.lastIndexOf(\"https://\", 0) === 0 || url.lastIndexOf(\"http://\", 0) === 0) {\r\n            return url;\r\n        }\r\n\r\n        if (!Platform.isBrowser || !window.document) {\r\n            throw new Error(`Cannot resolve '${url}'.`);\r\n        }\r\n\r\n        // Setting the url to the href propery of an anchor tag handles normalization\r\n        // for us. There are 3 main cases.\r\n        // 1. Relative path normalization e.g \"b\" -> \"http://localhost:5000/a/b\"\r\n        // 2. Absolute path normalization e.g \"/a/b\" -> \"http://localhost:5000/a/b\"\r\n        // 3. Networkpath reference normalization e.g \"//localhost:5000/a/b\" -> \"http://localhost:5000/a/b\"\r\n        const aTag = window.document.createElement(\"a\");\r\n        aTag.href = url;\r\n\r\n        this.logger.log(LogLevel.Information, `Normalizing '${url}' to '${aTag.href}'.`);\r\n        return aTag.href;\r\n    }\r\n\r\n    private resolveNegotiateUrl(url: string): string {\r\n        const index = url.indexOf(\"?\");\r\n        let negotiateUrl = url.substring(0, index === -1 ? url.length : index);\r\n        if (negotiateUrl[negotiateUrl.length - 1] !== \"/\") {\r\n            negotiateUrl += \"/\";\r\n        }\r\n        negotiateUrl += \"negotiate\";\r\n        negotiateUrl += index === -1 ? \"\" : url.substring(index);\r\n\r\n        if (negotiateUrl.indexOf(\"negotiateVersion\") === -1) {\r\n            negotiateUrl += index === -1 ? \"?\" : \"&\";\r\n            negotiateUrl += \"negotiateVersion=\" + this.negotiateVersion;\r\n        }\r\n        return negotiateUrl;\r\n    }\r\n}\r\n\r\nfunction transportMatches(requestedTransport: HttpTransportType | undefined, actualTransport: HttpTransportType) {\r\n    return !requestedTransport || ((actualTransport & requestedTransport) !== 0);\r\n}\r\n\r\n/** @private */\r\nexport class TransportSendQueue {\r\n    private buffer: any[] = [];\r\n    private sendBufferedData: PromiseSource;\r\n    private executing: boolean = true;\r\n    private transportResult?: PromiseSource;\r\n    private sendLoopPromise: Promise<void>;\r\n\r\n    constructor(private readonly transport: ITransport) {\r\n        this.sendBufferedData = new PromiseSource();\r\n        this.transportResult = new PromiseSource();\r\n\r\n        this.sendLoopPromise = this.sendLoop();\r\n    }\r\n\r\n    public send(data: string | ArrayBuffer): Promise<void> {\r\n        this.bufferData(data);\r\n        if (!this.transportResult) {\r\n            this.transportResult = new PromiseSource();\r\n        }\r\n        return this.transportResult.promise;\r\n    }\r\n\r\n    public stop(): Promise<void> {\r\n        this.executing = false;\r\n        this.sendBufferedData.resolve();\r\n        return this.sendLoopPromise;\r\n    }\r\n\r\n    private bufferData(data: string | ArrayBuffer): void {\r\n        if (this.buffer.length && typeof(this.buffer[0]) !== typeof(data)) {\r\n            throw new Error(`Expected data to be of type ${typeof(this.buffer)} but was of type ${typeof(data)}`);\r\n        }\r\n\r\n        this.buffer.push(data);\r\n        this.sendBufferedData.resolve();\r\n    }\r\n\r\n    private async sendLoop(): Promise<void> {\r\n        while (true) {\r\n            await this.sendBufferedData.promise;\r\n\r\n            if (!this.executing) {\r\n                if (this.transportResult) {\r\n                    this.transportResult.reject(\"Connection stopped.\");\r\n                }\r\n\r\n                break;\r\n            }\r\n\r\n            this.sendBufferedData = new PromiseSource();\r\n\r\n            const transportResult = this.transportResult!;\r\n            this.transportResult = undefined;\r\n\r\n            const data = typeof(this.buffer[0]) === \"string\" ?\r\n                this.buffer.join(\"\") :\r\n                TransportSendQueue.concatBuffers(this.buffer);\r\n\r\n            this.buffer.length = 0;\r\n\r\n            try {\r\n                await this.transport.send(data);\r\n                transportResult.resolve();\r\n            } catch (error) {\r\n                transportResult.reject(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    private static concatBuffers(arrayBuffers: ArrayBuffer[]): ArrayBuffer {\r\n        const totalLength = arrayBuffers.map((b) => b.byteLength).reduce((a, b) => a + b);\r\n        const result = new Uint8Array(totalLength);\r\n        let offset = 0;\r\n        for (const item of arrayBuffers) {\r\n            result.set(new Uint8Array(item), offset);\r\n            offset += item.byteLength;\r\n        }\r\n\r\n        return result.buffer;\r\n    }\r\n}\r\n\r\nclass PromiseSource {\r\n    private resolver?: () => void;\r\n    private rejecter!: (reason?: any) => void;\r\n    public promise: Promise<void>;\r\n\r\n    constructor() {\r\n        this.promise = new Promise((resolve, reject) => [this.resolver, this.rejecter] = [resolve, reject]);\r\n    }\r\n\r\n    public resolve(): void {\r\n        this.resolver!();\r\n    }\r\n\r\n    public reject(reason?: any): void {\r\n        this.rejecter!(reason);\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { CompletionMessage, HubMessage, IHubProtocol, InvocationMessage, MessageType, StreamItemMessage } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\n\r\nconst JSON_HUB_PROTOCOL_NAME: string = \"json\";\r\n\r\n/** Implements the JSON Hub Protocol. */\r\nexport class JsonHubProtocol implements IHubProtocol {\r\n\r\n    /** @inheritDoc */\r\n    public readonly name: string = JSON_HUB_PROTOCOL_NAME;\r\n    /** @inheritDoc */\r\n    public readonly version: number = 1;\r\n\r\n    /** @inheritDoc */\r\n    public readonly transferFormat: TransferFormat = TransferFormat.Text;\r\n\r\n    /** Creates an array of {@link @microsoft/signalr.HubMessage} objects from the specified serialized representation.\r\n     *\r\n     * @param {string} input A string containing the serialized representation.\r\n     * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.\r\n     */\r\n    public parseMessages(input: string, logger: ILogger): HubMessage[] {\r\n        // The interface does allow \"ArrayBuffer\" to be passed in, but this implementation does not. So let's throw a useful error.\r\n        if (typeof input !== \"string\") {\r\n            throw new Error(\"Invalid input for JSON hub protocol. Expected a string.\");\r\n        }\r\n\r\n        if (!input) {\r\n            return [];\r\n        }\r\n\r\n        if (logger === null) {\r\n            logger = NullLogger.instance;\r\n        }\r\n\r\n        // Parse the messages\r\n        const messages = TextMessageFormat.parse(input);\r\n\r\n        const hubMessages = [];\r\n        for (const message of messages) {\r\n            const parsedMessage = JSON.parse(message) as HubMessage;\r\n            if (typeof parsedMessage.type !== \"number\") {\r\n                throw new Error(\"Invalid payload.\");\r\n            }\r\n            switch (parsedMessage.type) {\r\n                case MessageType.Invocation:\r\n                    this.isInvocationMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.StreamItem:\r\n                    this.isStreamItemMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Completion:\r\n                    this.isCompletionMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Ping:\r\n                    // Single value, no need to validate\r\n                    break;\r\n                case MessageType.Close:\r\n                    // All optional values, no need to validate\r\n                    break;\r\n                default:\r\n                    // Future protocol changes can add message types, old clients can ignore them\r\n                    logger.log(LogLevel.Information, \"Unknown message type '\" + parsedMessage.type + \"' ignored.\");\r\n                    continue;\r\n            }\r\n            hubMessages.push(parsedMessage);\r\n        }\r\n\r\n        return hubMessages;\r\n    }\r\n\r\n    /** Writes the specified {@link @microsoft/signalr.HubMessage} to a string and returns it.\r\n     *\r\n     * @param {HubMessage} message The message to write.\r\n     * @returns {string} A string containing the serialized representation of the message.\r\n     */\r\n    public writeMessage(message: HubMessage): string {\r\n        return TextMessageFormat.write(JSON.stringify(message));\r\n    }\r\n\r\n    private isInvocationMessage(message: InvocationMessage): void {\r\n        this.assertNotEmptyString(message.target, \"Invalid payload for Invocation message.\");\r\n\r\n        if (message.invocationId !== undefined) {\r\n            this.assertNotEmptyString(message.invocationId, \"Invalid payload for Invocation message.\");\r\n        }\r\n    }\r\n\r\n    private isStreamItemMessage(message: StreamItemMessage): void {\r\n        this.assertNotEmptyString(message.invocationId, \"Invalid payload for StreamItem message.\");\r\n\r\n        if (message.item === undefined) {\r\n            throw new Error(\"Invalid payload for StreamItem message.\");\r\n        }\r\n    }\r\n\r\n    private isCompletionMessage(message: CompletionMessage): void {\r\n        if (message.result && message.error) {\r\n            throw new Error(\"Invalid payload for Completion message.\");\r\n        }\r\n\r\n        if (!message.result && message.error) {\r\n            this.assertNotEmptyString(message.error, \"Invalid payload for Completion message.\");\r\n        }\r\n\r\n        this.assertNotEmptyString(message.invocationId, \"Invalid payload for Completion message.\");\r\n    }\r\n\r\n    private assertNotEmptyString(value: any, errorMessage: string): void {\r\n        if (typeof value !== \"string\" || value === \"\") {\r\n            throw new Error(errorMessage);\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { DefaultReconnectPolicy } from \"./DefaultReconnectPolicy\";\r\nimport { HttpConnection } from \"./HttpConnection\";\r\nimport { HubConnection } from \"./HubConnection\";\r\nimport { IHttpConnectionOptions } from \"./IHttpConnectionOptions\";\r\nimport { IHubProtocol } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { IRetryPolicy } from \"./IRetryPolicy\";\r\nimport { HttpTransportType } from \"./ITransport\";\r\nimport { JsonHubProtocol } from \"./JsonHubProtocol\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { Arg, ConsoleLogger } from \"./Utils\";\r\n\r\n// tslint:disable:object-literal-sort-keys\r\nconst LogLevelNameMapping = {\r\n    trace: LogLevel.Trace,\r\n    debug: LogLevel.Debug,\r\n    info: LogLevel.Information,\r\n    information: LogLevel.Information,\r\n    warn: LogLevel.Warning,\r\n    warning: LogLevel.Warning,\r\n    error: LogLevel.Error,\r\n    critical: LogLevel.Critical,\r\n    none: LogLevel.None,\r\n};\r\n\r\nfunction parseLogLevel(name: string): LogLevel {\r\n    // Case-insensitive matching via lower-casing\r\n    // Yes, I know case-folding is a complicated problem in Unicode, but we only support\r\n    // the ASCII strings defined in LogLevelNameMapping anyway, so it's fine -anurse.\r\n    const mapping = LogLevelNameMapping[name.toLowerCase()];\r\n    if (typeof mapping !== \"undefined\") {\r\n        return mapping;\r\n    } else {\r\n        throw new Error(`Unknown log level: ${name}`);\r\n    }\r\n}\r\n\r\n/** A builder for configuring {@link @microsoft/signalr.HubConnection} instances. */\r\nexport class HubConnectionBuilder {\r\n    /** @internal */\r\n    public protocol?: IHubProtocol;\r\n    /** @internal */\r\n    public httpConnectionOptions?: IHttpConnectionOptions;\r\n    /** @internal */\r\n    public url?: string;\r\n    /** @internal */\r\n    public logger?: ILogger;\r\n\r\n    /** If defined, this indicates the client should automatically attempt to reconnect if the connection is lost. */\r\n    /** @internal */\r\n    public reconnectPolicy?: IRetryPolicy;\r\n\r\n    /** Configures console logging for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @param {LogLevel} logLevel The minimum level of messages to log. Anything at this level, or a more severe level, will be logged.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public configureLogging(logLevel: LogLevel): HubConnectionBuilder;\r\n\r\n    /** Configures custom logging for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @param {ILogger} logger An object implementing the {@link @microsoft/signalr.ILogger} interface, which will be used to write all log messages.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public configureLogging(logger: ILogger): HubConnectionBuilder;\r\n\r\n    /** Configures custom logging for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @param {string} logLevel A string representing a LogLevel setting a minimum level of messages to log.\r\n     *    See {@link https://docs.microsoft.com/aspnet/core/signalr/configuration#configure-logging|the documentation for client logging configuration} for more details.\r\n     */\r\n    public configureLogging(logLevel: string): HubConnectionBuilder;\r\n\r\n    /** Configures custom logging for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @param {LogLevel | string | ILogger} logging A {@link @microsoft/signalr.LogLevel}, a string representing a LogLevel, or an object implementing the {@link @microsoft/signalr.ILogger} interface.\r\n     *    See {@link https://docs.microsoft.com/aspnet/core/signalr/configuration#configure-logging|the documentation for client logging configuration} for more details.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public configureLogging(logging: LogLevel | string | ILogger): HubConnectionBuilder;\r\n    public configureLogging(logging: LogLevel | string | ILogger): HubConnectionBuilder {\r\n        Arg.isRequired(logging, \"logging\");\r\n\r\n        if (isLogger(logging)) {\r\n            this.logger = logging;\r\n        } else if (typeof logging === \"string\") {\r\n            const logLevel = parseLogLevel(logging);\r\n            this.logger = new ConsoleLogger(logLevel);\r\n        } else {\r\n            this.logger = new ConsoleLogger(logging);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use HTTP-based transports to connect to the specified URL.\r\n     *\r\n     * The transport will be selected automatically based on what the server and client support.\r\n     *\r\n     * @param {string} url The URL the connection will use.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public withUrl(url: string): HubConnectionBuilder;\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use the specified HTTP-based transport to connect to the specified URL.\r\n     *\r\n     * @param {string} url The URL the connection will use.\r\n     * @param {HttpTransportType} transportType The specific transport to use.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public withUrl(url: string, transportType: HttpTransportType): HubConnectionBuilder;\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use HTTP-based transports to connect to the specified URL.\r\n     *\r\n     * @param {string} url The URL the connection will use.\r\n     * @param {IHttpConnectionOptions} options An options object used to configure the connection.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public withUrl(url: string, options: IHttpConnectionOptions): HubConnectionBuilder;\r\n    public withUrl(url: string, transportTypeOrOptions?: IHttpConnectionOptions | HttpTransportType): HubConnectionBuilder {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isNotEmpty(url, \"url\");\r\n\r\n        this.url = url;\r\n\r\n        // Flow-typing knows where it's at. Since HttpTransportType is a number and IHttpConnectionOptions is guaranteed\r\n        // to be an object, we know (as does TypeScript) this comparison is all we need to figure out which overload was called.\r\n        if (typeof transportTypeOrOptions === \"object\") {\r\n            this.httpConnectionOptions = { ...this.httpConnectionOptions, ...transportTypeOrOptions };\r\n        } else {\r\n            this.httpConnectionOptions = {\r\n                ...this.httpConnectionOptions,\r\n                transport: transportTypeOrOptions,\r\n            };\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use the specified Hub Protocol.\r\n     *\r\n     * @param {IHubProtocol} protocol The {@link @microsoft/signalr.IHubProtocol} implementation to use.\r\n     */\r\n    public withHubProtocol(protocol: IHubProtocol): HubConnectionBuilder {\r\n        Arg.isRequired(protocol, \"protocol\");\r\n\r\n        this.protocol = protocol;\r\n        return this;\r\n    }\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to automatically attempt to reconnect if the connection is lost.\r\n     * By default, the client will wait 0, 2, 10 and 30 seconds respectively before trying up to 4 reconnect attempts.\r\n     */\r\n    public withAutomaticReconnect(): HubConnectionBuilder;\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to automatically attempt to reconnect if the connection is lost.\r\n     *\r\n     * @param {number[]} retryDelays An array containing the delays in milliseconds before trying each reconnect attempt.\r\n     * The length of the array represents how many failed reconnect attempts it takes before the client will stop attempting to reconnect.\r\n     */\r\n    public withAutomaticReconnect(retryDelays: number[]): HubConnectionBuilder;\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to automatically attempt to reconnect if the connection is lost.\r\n     *\r\n     * @param {IRetryPolicy} reconnectPolicy An {@link @microsoft/signalR.IRetryPolicy} that controls the timing and number of reconnect attempts.\r\n     */\r\n    public withAutomaticReconnect(reconnectPolicy: IRetryPolicy): HubConnectionBuilder;\r\n    public withAutomaticReconnect(retryDelaysOrReconnectPolicy?: number[] | IRetryPolicy): HubConnectionBuilder {\r\n        if (this.reconnectPolicy) {\r\n            throw new Error(\"A reconnectPolicy has already been set.\");\r\n        }\r\n\r\n        if (!retryDelaysOrReconnectPolicy) {\r\n            this.reconnectPolicy = new DefaultReconnectPolicy();\r\n        } else if (Array.isArray(retryDelaysOrReconnectPolicy)) {\r\n            this.reconnectPolicy = new DefaultReconnectPolicy(retryDelaysOrReconnectPolicy);\r\n        } else {\r\n            this.reconnectPolicy = retryDelaysOrReconnectPolicy;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /** Creates a {@link @microsoft/signalr.HubConnection} from the configuration options specified in this builder.\r\n     *\r\n     * @returns {HubConnection} The configured {@link @microsoft/signalr.HubConnection}.\r\n     */\r\n    public build(): HubConnection {\r\n        // If httpConnectionOptions has a logger, use it. Otherwise, override it with the one\r\n        // provided to configureLogger\r\n        const httpConnectionOptions = this.httpConnectionOptions || {};\r\n\r\n        // If it's 'null', the user **explicitly** asked for null, don't mess with it.\r\n        if (httpConnectionOptions.logger === undefined) {\r\n            // If our logger is undefined or null, that's OK, the HttpConnection constructor will handle it.\r\n            httpConnectionOptions.logger = this.logger;\r\n        }\r\n\r\n        // Now create the connection\r\n        if (!this.url) {\r\n            throw new Error(\"The 'HubConnectionBuilder.withUrl' method must be called before building the connection.\");\r\n        }\r\n        const connection = new HttpConnection(this.url, httpConnectionOptions);\r\n\r\n        return HubConnection.create(\r\n            connection,\r\n            this.logger || NullLogger.instance,\r\n            this.protocol || new JsonHubProtocol(),\r\n            this.reconnectPolicy);\r\n    }\r\n}\r\n\r\nfunction isLogger(logger: any): logger is ILogger {\r\n    return logger.log !== undefined;\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// Everything that users need to access must be exported here. Including interfaces.\r\nexport { AbortSignal } from \"./AbortController\";\r\nexport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nexport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nexport { DefaultHttpClient } from \"./DefaultHttpClient\";\r\nexport { IHttpConnectionOptions } from \"./IHttpConnectionOptions\";\r\nexport { HubConnection, HubConnectionState } from \"./HubConnection\";\r\nexport { HubConnectionBuilder } from \"./HubConnectionBuilder\";\r\nexport { MessageType, MessageHeaders, HubMessage, HubMessageBase, HubInvocationMessage, InvocationMessage, StreamInvocationMessage, StreamItemMessage, CompletionMessage,\r\n    PingMessage, CloseMessage, CancelInvocationMessage, IHubProtocol } from \"./IHubProtocol\";\r\nexport { ILogger, LogLevel } from \"./ILogger\";\r\nexport { HttpTransportType, TransferFormat, ITransport } from \"./ITransport\";\r\nexport { IStreamSubscriber, IStreamResult, ISubscription } from \"./Stream\";\r\nexport { NullLogger } from \"./Loggers\";\r\nexport { JsonHubProtocol } from \"./JsonHubProtocol\";\r\nexport { Subject } from \"./Subject\";\r\nexport { IRetryPolicy, RetryContext } from \"./IRetryPolicy\";\r\nexport { VERSION } from \"./Utils\";\r\n","import * as signalR from \"@microsoft/signalr\";\r\n\r\nconst negotiateUrl = \"http://localhost:7071/api\";\r\n// const negotiateUrl = \"https://smarthighwayfunctionapp.azurewebsites.net/api\";\r\n\r\nconst connection = new signalR.HubConnectionBuilder()\r\n    .withUrl(`${negotiateUrl}`)\r\n    // .withAutomaticReconnect()\r\n    .configureLogging(signalR.LogLevel.Information)\r\n    .build();\r\n\r\n\r\nasync function start() {\r\n    try {\r\n        await connection.start();\r\n        console.log(\"SignalR Connected.\");\r\n    } catch (err) {\r\n        console.log(err);\r\n        setTimeout(start, 5000);\r\n    }\r\n};\r\n\r\n\r\nconnection.onclose(async () => {\r\n        await start();\r\n});\r\n\r\nconnection.on(\"newMessage\", (values, numCarsDict) => {\r\n    var lights = {\"t1\": [\"north\", \"south\"], \"t2\": [\"south, east\"]};\r\n    var state_to_color = {0: \"Red\", 1:\"Green\"};\r\n    var laneNames = {\"east_t2\": \"East to West\", \"west_t2\": \"West to East\",\r\n                    \"north_t1\": \"North to South\", \"south_t1\": \"South to North\"}\r\n\r\n    for (const [lightId, directions] of Object.entries(lights)){\r\n        for (var i = 0; i < xs.length; i++){\r\n            var direction = directions[i];\r\n            var lightElem = document.getElementById(`light_${direction}_${lightId}`);\r\n            var oppositeDirection = directions[1 - i];\r\n            var content = document.createTextNode(`${direction} to ${oppositeDirection} is ${state_to_color[values[lightId]]}`);\r\n            lightElem.innerHTML = ``;\r\n            var fontElem = document.createElement(\"font\");\r\n            fontElem.appendChild(content);\r\n            fontElem.setAttribute(\"color\", state_to_color[values[lightId]].toLowerCase());\r\n            lightElem.appendChild(fontElem);\r\n        }\r\n    }\r\n    // var t1_north = document.getElementById(\"light_north_t1\");\r\n    // var t2 = document.getElementById(\"t2\");\r\n    \r\n    // var t1_content = document.createTextNode(`North to South and South to North is ${state_to_color[values[\"t1\"]]}`);\r\n    // var t2_content = document.createTextNode(`East to West and West to East is ${state_to_color[values[\"t2\"]]}`);\r\n\r\n    // t1.innerHTML = '';\r\n    // t2.innerHTML = '';\r\n    // t1.appendChild(t1_content);\r\n    // t2.appendChild(t2_content);\r\n\r\n    var laneDiv = document.getElementById(\"lanes\");\r\n    for (const [laneId, numCars] of Object.entries(numCarsDict)){\r\n        laneElem = laneDiv.querySelector(`#${laneId}`);\r\n        laneElem.s\r\n        if (laneElem == null){\r\n            laneElem = document.createElement(\"h2\");\r\n            laneElem.setAttribute(\"id\", laneId);\r\n            laneDiv.appendChild(laneElem);\r\n        }\r\n        else{\r\n            laneElem.innerHTML = ``;\r\n        }\r\n        laneElem.setAttribute(\"class\", \"lane_info\");\r\n        laneElem.setAttribute(\"color\", )       \r\n        laneElem.appendChild(document.createTextNode(`${laneNames[laneId]}\\n${numCars} 🚗`));\r\n    }\r\n});\r\n\r\nasync function main() {\r\n    // start the signalR connection\r\n    start()\r\n    \r\n}\r\n\r\nfunction simulate(){\r\n    var simulateUrl = \"http://localhost:7071/api/Simulate\";\r\n    // var simulateUrl = \"https://smarthighwayfunctionapp.azurewebsites.net/api/Simulate?\";\r\n    $.ajax(simulateUrl, {\r\n    type: 'GET',\r\n    data: {\r\n      num_times: 1\r\n    }\r\n  });\r\n}\r\n\r\nwindow.onload = function() {\r\n    var btn = document.getElementById(\"simulateBtn\");\r\n    btn.onclick = simulate;\r\n    main();\r\n}\r\n"]}