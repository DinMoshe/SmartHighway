{"version":3,"sources":["../../src/Errors.ts","../../src/HttpClient.ts","../../src/ILogger.ts","../../src/Loggers.ts","node_modules/process/browser.js","../../src/Utils.ts","../../src/FetchHttpClient.ts","../../src/XhrHttpClient.ts","../../src/DefaultHttpClient.ts","../../src/TextMessageFormat.ts","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/isarray/index.js","node_modules/node-libs-browser/node_modules/buffer/index.js","../../src/HandshakeProtocol.ts","../../src/IHubProtocol.ts","../../src/Subject.ts","../../src/HubConnection.ts","../../src/DefaultReconnectPolicy.ts","../../src/ITransport.ts","../../src/AbortController.ts","../../src/LongPollingTransport.ts","../../src/ServerSentEventsTransport.ts","../../src/WebSocketTransport.ts","../../src/HttpConnection.ts","../../src/JsonHubProtocol.ts","../../src/HubConnectionBuilder.ts","../../src/index.ts","signalr_connect.js"],"names":["process","module","exports","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","setTimeout","e","clearTimeout","runTimeout","fun","call","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","nextTick","args","Array","arguments","i","push","Item","array","prototype","apply","title","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","negotiateUrl","lights","state_to_color","laneIds","laneNames","connection","signalR","HubConnectionBuilder","withUrl","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","console","assert","state","HubConnectionState","Connected","log","err","Disconnected","onclose","values","numCarsDict","lightId","directions","Object","entries","direction","lightElem","document","getElementById","Storage","localStorage","setItem","oppositeDirection","content","createTextNode","innerHTML","fontElem","createElement","appendChild","setAttribute","toLowerCase","laneDiv","laneId","numCars","laneElem","querySelector","loadPreviousData","color","getItem","main","simulate","simulateUrl","$","ajax","type","data","num_times","window","onload","btn","onclick"],"mappings":"AUAA,ACAA,ACAA;AFCA,ACAA,ACAA,ARDA;AMEA,ACAA,ACAA,ACFA,ATCA,AwBDA,IxBCIA,OAAO,GAAGC,MAAM,CAACC,OAAP,GAAiB,EAA/B,EAEA;AMAA,ACAA,ACAA,ACFA,ATGA;AMAA,ACAA,ACAA,ACFA,ATGA;AMAA,ACAA,ACAA,ACFA,ATGA;AcNA,AHAA,AbAA,AiBAA,ATMA,ACAA,AEFA;AOJA,AZGA,AUFA,AlBDA,AMMA,ALNA,AuBGA,APAA,ASAA,AXFA,AbAA,AiBAA,AMEA,AtBHA,AkBGA,ACEA,ANDA,APJA,AcKA,AhBFA,AGIA,ACAA,AEFA,ATGA,IAAIC,gBAAJ;AgBPA,AFIA,AlBJA,AcEA,AbFA,ACEA,AiBAA,AhBFA,AMAA,ACOA,ACAA,AEFA,ATGA,AwBPA,IxBOIC,EwBPEuD,YAAY,GAAG,CxBOrB,0BwBPA,EACA;ARAA,AZCA,AUEA,AZCA,AkBAA,APFA,ASDA,AXEA,AUFA,AJAA,ACEA,ANNA,APGA,AcGA,AhBFA,AGKA,ACAA,AEFA,IKDM,oCAAoC,GAAG,CAAC,CAAD,EAAI,IAAJ,EAAU,KAAV,EAAiB,KAAjB,EAAwB,IAAxB,CAA7C;AEFA,AFIA,AJJA,ACGA,AbHA,AiBAA,AhBCA,AaJA,ANSA,ACAA,AEFA,ATGA,AwBPA,IbGY,EaHNC,GxBOGvD,GwBPG,GbGZ,AaHe,UxBOf,GAA4B;AgBN5B,AZAA,AFGA,AkBAA,APFA,ASDA,APAA,AMAA,AtBCA,AkBCA,ACCA,AbJA,AcIA,AhBHA,AGMA,ACAA,AEFA,ATGI,AwBRY,ITCJ,AhBCZ,ICMU,AwBRY,CAAC,GxBQTC,EDNd,EyBFsB,CzBEtB,ACMU,CAAU,AwBRY,GTChC,ISDsB,CAAP,GzBEf,sBCMU,CAAN;AgBLJ,AFEA,AJTA,AXUI,AaJJ,APDA,ACOA,ACAA,AEFA,ATGC,AwBTyC,IVK1C,ATJA,ImBDgD,CAAC,EzBM7C,IyBN4C,EAAS,IzBMrD,AMLJ,EmBDgD,CzBM5C,AMLJ,CNK4B,CeD5B,GAAA,OTJA,KSIA;AVFA,AUKI,AZHJ,AQRA,AUQA,APAA,ASDA,AXDA,AUDA,AtBMI,AkBJJ,ACRA,ANOA,APFA,AcLA,AhBAA,AGaA,ACAA,AEFA,AePe,CbGf,AaHA,GZGA,OEKI,AHLQ,ACAZ,APFA,GOEA,QDAA,EAAuB,ECAvB,EPFA,GAAA,CAiBC,CSVG,CAAY,WAAZ,EAAkC;AEJtC,AFKQ,AHLJ,AbAJ,AiBHA,AhBQI,AmBZJ,ANaI,AObJ,AhBAA,AGaA,ACAA,AEFA,ATEA,AwBTA,CTAA,GjBGY,E0BHNuD,GVQO,AdCJtD,EeTG,AHSR,CdNJ,McMI,EEDI,AURY,CZShB,EEDuB,AURJ,KTAvB,AfSA,EeT6B,CfSG,GcDM,KAAK,SAAhB,GAAgC,WAAW,CAAA,MAAX,CAAW,CAAE,IAAF,CAAX,CAAhC,GAAqD,oCAAxE;AEJR,AZDA,AUMK,AZdL,AQkBA,AURA,APAA,ASCA,AXFI,AIHA,AMCJ,AJEA,ALMQ,APNU,AJJlB,AKUA,ACAA,AEFA,ATEI,AwBVoB,EbIpB,ANAc,EWAlB,CQJ2B,GxBUjB,CYAG,CYVU,ExBUTD,CWNV,CAAA,GXMM,CYAF,AZAY,CgBNpB,AXAkB,CAAA,COMO,CINzB,CJMQ,EDNJ,ANAc,CMAd,ENAA,MWAJ,ILAI,ANAoB,CMApB,GAAA,CAAA,CAAA,ANAA,EAAkC,CMAlC,MXMM,CAAN,KWNA;AKAJ,AdRA,AQkBA,ACTI,AIHA,AHSC,APNG,ACMR,ACAA,AEFA,ATEC,AwBXiC,ETE9B,ELYJ,CcdoC,MRIpC,AXCe,KAAG,GUHd,CAAA,CLYJ,CLTe,EKSf,CLT2B,CWD3B,GAAA,ONUA,CKZI,CAAA,IVGwC,CAAC,CUHzC,CAAA,GAAA,CAAA,CAAA,GAAA,KVGI,CUHJ;ACGQ,AZVZ,AUgBW,AJGX,AURA,APXA,ASYA,AxBJA,AiBAI,AMRJ,AtBcW,AkBdX,AZWK,AJLL,AKWA,ACAA,AEFA,AeVuB,C1BGvB,A0BHA,CVWW,AfFA,CMLO,MWCN,ENSZ,AZXY,CCMD,CAAA,KiBJC,ClBFZ,EkBEiC,AlBFb,CCMT,CAAA,CeEA,CAAA,CENC,AjBID,EWKX,CXLI,EWKJ,CAkDC,CAlDD,CIHW,AJIP,CIJO,IfFI,SAAX,EAAgC,QAAhC,EAAgD,CAC/C,CADM,CeEA,GAAP,UAAoC,YAApC,EAA8D;AELvD,AZVX,AUgBQ,AjBgBR,AgBhCA,AFUI,AbFA,AuBRJ,AtBMI,AkBNJ,ALiBW,ANAX,ACAA,AEFA,ATCC,AwBXD,EbKI,ACOO,IYZLwD,GRKK,AJOA,CAAA,CEDI,EHNX,AXMS,AwBXA,CbKT,EKAO,AFMS,AUXJ,CAAC,ERKyB,AJO/B,CAAA,GIPA,CJOA,CDPP,CAAA,CGMW,AFCX,AYZY,CVWgB,CUXH,QZYb,CDPZ,CAAA,AaLY,CVW4B,CAAC,AFCzC,AYZqC,CbKrC,CAAA,ACOmB,CDPnB,GAAA,GaLY,EAAoC,OVWrC,AHNX,CGMI,CUXQ,CAAhB;ARuBC,AFXI,AMNL,AECA,AXDI,AbFA,AiBDA,AMAJ,ATUQ,APNU,AJblB,AKmBA,ACAA,AEFA,ATCI,AwBXJ,E1BGI,AiBDA,AVIc,CSGP,COPL,ErBSE,AwBXFC,GZYyB,CdT3B,CAAA,EcS2B,EAAA,AYZhB,GZYgB,AYZb,C1BGd,AiBDA,AHU2B,APNb,CPHd,AiBDA,AVIc,COMa,EAAA,EPNb,CgBJU,ATUG,CdT3B,CAAA,AOGA,CgBJmC,EvBCnC,AcSgC,CdThC,CAAA,EuBDJ,CvBCI,CiBDA,CAAA,AVIoB,EOMhB,EAAuB,CdT3B,AOGA,COM2B,CPNM,EOMN,EAAA,CGV3B,AHU2B,CGV3B,GAAA,CAAA,CAAA,AHUI,EAAuB,CGV3B,CHU2B,EAAvB,EAAuC,OGV3C;ALYO,AZVP,AiBDA,AMCJ,ATQa,APLL,AJbR,AKmBA,ACAA,AEFA,ATCQ,AwBZW,EdcR,MLPC,ALKA,EYAO,GPLF,AmBPa,CnBOZ,CLKCvD,GYAQ,CFEhB,ALPY,CKOZ,ALPa,COKG,EAAA,CAAA,CZAf,CYAe,APLT,COKL,AYZK,EdcP,ALPsB,CKOtB,ALPM,ALKiB,CKLtB,KAA4B,ILKhC,EAAsC,SUEnC,ELP8C,CKOrD,ALPsD,UKOzB,KLPzB,EAAmE,SKOvE,EAAsE;AMR/D,AFMX,AJGQ,AbYR,AuBlCA,AEAA,AXaI,AZLc,AaYN,APLA,ACMZ,ACAA,AEFA,ATCYL,AwBbkC,ERMnC,ALAP,AZLc,EF0BlB,EedY,AZAAA,GcDZ,EJGe,CXdG,AMOA,CMFd,AZLc,AyBDuC,CbMrD,ACOgB,CAAC,CfcrB,AQnBsB,CWFX,CAAA,CnBqBX,AedY,CAAc,CbZR,AMOA,CAAU,ALKA,EDZU,AaY1B,CDPR,AXO2BK,CWP3B,CKAO,AQNO,CRMP,AjBL+B,GeW1C,AjBeA,EmBrBW,EhBOC,CgBPR,ELAA,AZLkC,CYKlC,CZLc,EYKd,CAAA,CAAA,ENEc,CMFd,ANEQ,CWFR,ANS6B,KAAlB,CAAwB,IAAI,CAAC,ACTxC,SDSmC,CAAe,gBAAf,CAAxB,CAAP;AMRA,AFLR,AJcK,AbgDD,AuBtEJ,AEAA,AXaI,AbFA,AiBDA,AMCJ,AtBIA,AaKS,APLA,ACMT,ACAA,AEFA,ATCS,AwBbW,CVCpB,ChBGI,AiBDA,CDFJ,AJYW,CWTX,CrBOQ,GgBLI,CAAC,AjBEb,CDJI,CD2DA,AC3DA,AESW,GgBPG,AQNc,K1BI5B,AiBDA,AMCJ,AtBIA,CDJI,AiBDA,EMCJ,CLEQ,AnByDJ,CACoB,CmB1DK,ElBFzB,CAAA,E0BLc,C1BKd,CAAA,CAAA,CD2DA,AwB3DJ,ExB6DwB,AC7DpB,CiBDA,CAAA,KjBCA,GD2DA,EAGoB,OAHpB,CkB5DA,ClB+DkD,AkB/DlD,GAAA,CAAA,CAAA,GAAA,kBAAA;ACIQ,AnByDY,AC3DpB,AiBDA,AMAJ,AtBNA,AagBK,ANCL,ACAA,AEFA,ATCYL,AwBdsC,CzBFlD,EAAA,AaYW,GZICA,GHkDY,EmBzDP,AKHjB,GGJ8D,K3BgEtC,CmBzDZ,EnByDY,AGlDI,CgBPC,EhBOEE,CqBV/B,CLGY,EKHZ,GxB4DwB,SGlDZ;AUGD,AbgDa,Ac1DpB,AUDA,AhBII,ACMR,ACAA,AEFA,ATCS,AwBhBS,CAAlB,CdkBW,ACVP,MNGU,CRuDU,Ic1DpB,CAAA,ENGkB,GKOX,AbgDa,AQvDC,CKOd,EbgDa,EQvDM,CMH1B,ANG2B,CMH3B,GDUO,CAAA,ALPc,CAAY,CRuDb,Yc1DpB,CAAA,GAAA,ANGkD,CMHlD,ANGmD,CMHnD,EDUO,CCVP,EDUA,SLPqB,CKOS,ALP1B,IKOJ,EAAuC,ACVvC;AKCQ,ANUJ,AbgDgB,Ac1DpB,AbFA,AiBDA,AMEgB,ATST,APLH,ACMR,ACAA,AEFA,ATCK,AwBdL,E1BII,AiBDA,AHWO,CZNP,CKCI,ALKF,EwBdA2D,EdgBM,CbgDY,AwB3DJ,ATST,CIRK,AlBFZ,AcUO,CdVP,AEUSvD,CKLG,ALKV,CqBTc,AhBIH,CLKD,CgBRK,CnB0DG,AwB3DW,AhBI3B,AmBTQ,G3BgEQ,AC5DpB,AiBDA,AHWO,AYdQ,C1BIf,AiBDA,AHWO,EIRC,CNUJ,AchBewD,CRMO,CJQnB,CfkDa,EelDpB,EYd0B,CAACC,E1BI3B,CAAA,GAAA,AiBDA,CjBCA,AiBDA,AMEgB,ATSH,CdVb,EcUA,CdVA,CcUqB,QGXrB,ASHe,CTGf,ESFCC,C1BGD,AiBDA,CAAA,CAAA,GAAA,CSHe,CACL,GAAER,QTEZ,ISFyB,EADV,EAEdS,sBAFc,GAGdC,gBAHc,CAGGJ,OAAO,CAACK,QAAR,CAAiBC,WAHpB,EAIdC,KAJc,EAAnB;AROgB,ANUR,AbgDH,AC5DD,AiBDH,AMEG,ATSI,APLA,ACMR,ACAA,AEFA,ATCQrE,CepBR,EAAY,CfoBJA,IUEI,CEFmB,EPLhB,EWHM,AJQU,EAAA,GAAA,CFEvB,AEFuB,APLvB,CWHQ,ADZa,AfoBL,CYAO,EAAA,AZAJE,GYAI,KAAK,QZA5B,CYAA,EAAuB,EAAA,GAAA,EAAA,CAAA,GGpBnB,GHoBJ,EAAuB,EAAA,EAAvB,EAAuC,MGpBlB,GAAA,EAAA,CAA7B;ACaa,ANUL,ACXJ,AIDJ,AHSa,APJR,ACML,ACAA,AEFA,ATCK,AwBVL,EbCI,CNJc,KKeN,EEHO,GDRf,CAAA,CaDWoE,GZSY,EYT3B,CdYQ,AEHmB,EAAA,AYTJ,CZSI,CDRvB,CAAA,ACQuB,CAAd,iBDRT,CAAA,GAAA,CAAA,CAAA,GAAA,kBAAA;AKEK,ApBhBT,ACyEA,Ac1DI,AbFA,AuBCgB,AfWpB,ACAA,AEFA,AeTI,E1BDA,I0BCI,G3B2DR,AwB3DoB,CvBDhB,CAAA,KuBCgB,GvBDhB,AuBCkC,CvBDlC,AuBCgB,CxB2DpB,QC5DI,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;AkBIC,ANUG,AbIR,ACjBI,AuBEA,ATOQ,APpBM,ACuBlB,ACAA,AEFA,ATAI,AwBTI,C3BgBR,CQ5BkB,CWOP,AnBqBX,GGPQ,EUGI,EEJI,AYRFT,QZQU,CAAC,APpBP,CAAA,AmBYM,CAACS,GZQb,EAAoB,AYRlB,EAAN,MdYkB,IAAd,CLxBM,GAAsB,CKwBJ,GLxBlB,IKwByB,MAAP,KAAkB,WAAlB,IAAiC,IAAI,YAAY,MAA7E,EAAsF;AAClF,ACZR,AIFJ,AHUgB,APpBE,ACuBlB,ACAA,AEFA,ATAQ,AwBTAC,EbAJ,ANZc,EUUN,ASEJA,IZQQ,AZCJ,GwBTG,CAACC,CbAZ,CAAA,CXSejE,CYDK,CAAC,CGVzB,ASEQ,CnBZU,AmBYKsD,CnBZL,EOoBF,CAAe,EDR3B,CAAA,ACQY,CZCJ,EwBTqB,CAACY,EbA9B,AXSgC,CWThC,ENZc,AmBYK,CbAnB,CAAA,CAAA,ANZgC,EmBYQX,CbAxC,CXSI,EKrBkC,ALqBM,CKrBL,EMYvC,AaA+C,CAACY,SnBZhB,CAAoB,QmBYZ,CAA2BC,QnBZE,CAAC,AmBYlE,mBnBZ4B,CAAlB;AWed,ApBlBJ,Ac4BY,ACZR,AbFA,AuBEgB,ATQP,APNb,ACSA,ACAA,AEFA,ATAY1E,AwBTJsE,EREJ,AlBJA,EFdJ,A4BgBQA,ExBSItE,EgBPR,CAAA,AKFgB,AhBEpB,CKUkB,AZdd,CAAA,A0BEW,CAAC2E,C5BhBhB,E4BgBQ,C5BhBR,A4BgBoB,G1BFhB,CYcwB,AZdxB,GkBIA,ANU2B,AWZX,CLEZ,AhBOsB,EJzB9B,AyBgBqD,AhBErD,CKUmC,AZd/B,AEW6BrE,CFX7B,GAAA,CFdJ,AEcI,CAAA,CFdJ,EEcI,A0BEI,CdYuB,CAAe,CMVtC,AhBOI,CgBPJ,ENUuB,CAAnB,AZdR,MkBIA,EAAI,EKF4D,IAAhD,ELEhB,EAAU;ApBlBiB,Ac6BnB,AZdR,AuBoGH,AT1FQ,APxBT,AC2BA,ACAA,AEFA,ATAS,AwBTJ,CnBhBL,CTD+B,CSC/B,AmBYI,CAIE,CxBOE,IgBNJ,CNWc,Cd7Ba,AI0BhB,AwBTFsE,C5BjBkB,E4BiBzB,EAAY,KRCd,ApBlB2B,EAAA,Cc6BC,GAAG,Ed7BJ,CAAA,Oc6Bc,CAAC,OAAX,CAAmB,qCAAkB,mBAArC,CAAvB;AMVJ,ApBXJ,ACkEJ,AyB/DA,AXMI,AIJJ,AMKI,ATQC,ANGL,ACAA,AEFA,ATAY5E,AwBTJsE,CTLR,CJII,CCGO,CYFHA,ExBSItE,KedA,ASKG,CAACuE,CRCD,ALFX,CAAA,GKEI,CQDA,CAAeX,KxBSO,CWV1B,AIJJ,CJII,CIJsB,AfcOzD,EwBTA,CAACqE,GbD9B,CAAA,CaCmB,EbDnB,CAAA,CAAA,CaCwCX,EbDxC,IXUQ,CwBTuC,CAACY,CbDhD,iBaCwC,CAA2BI,YAA/D;AREH,ANUO,AYlBZ,AXMC,AbFG,AiBFA,ATgBJ,ACAA,AEFA,ATAS,AwBTDP,CbhBR,CbaI,CabQ,CWSN,AEOEA,CRDM,KNYE,AZdZ,CAAA,A0BGW,CAACK,EbhBO,CagBf,CAAYC,G1BHhB,A0BGI,C1BHJ,GwBJqB,CZkBK,EYlBF,GZkBO,CAAC,AZdhC,CYcQ,AZdR,EYcmC,CZdnC,CAAA,CAAA,GAAA,EabQ,QbaR,GabmB,GAAA,EAAA,CAAvB;AD4BgB,AYlBZ,AxBIA,AiBFA,AHaO,ATzBX,AG4BA,ACAA,AEFA,ATAK,AwBTGxE,EFPJ,APEA,AHaO,CZLP,CGpBJ,AH0BM,AwBTEA,GFPC,EAAE,AVeA,CAAA,CZCEC,CAAP,EUEgB,AVFN,AwBTE,CAAC,CTLf,CAAA,AZZJ,CO4B0B,CEHf,CIVG,AJUH,ATzBX,CqBiByBgE,EdWH,CAAU,EcXF,CFPV,CVeT,AYRO,ErBjBlB,AqBiBkC,CTL9B,AHaA,CUhBwB,APGxB,ESKc,CAAV,CrBjBR,EYYI,AZZJ,CYYI,GAAA,CAAA,AHaA,CGbA,GAAA,CLgBkB,CAAN,IKhBZ;ALiBS,AYlBT,APEA,AHaI,AT1B2B,AG6BnC,ACAA,AEFA,ATAQrE,AwBTH,EFPD,AnBX+B,EH2B3BA,GUJsF,AYZrF,CZoBG,CYpBD,AVeoB,ET1BI,CAAA,CS0BJ,EAAA,GAAA,CAAA,EAAA,CZCL,CYDK,ET1BI,AH2BNG,CYDE,CUfX,AnBXe,IS0BC,CUjBR,CnBTO,CAAA,MS0B3B,EAAuB,EAAA,AZCvB,GYDuB,EAAA,CAAA,MAAvB,EAAuB,EAAA,EAAvB,EAAuC;AIXjC,ANiBF,Ab2CZ,AyB/DI,AxBGA,AcWS,ANIb,ACAA,AEFA,ATAK,AwBTJ,EFPG,AxBGA,CkBAA,CnB4DJ,EyB/DQ,EAAE,ExBGN,AcWe,CdXf,GD4DJ,GAAA,CejD2B,CdXvB,CAAA,CcWuB,EAAA,CAAA,EUdR,AxBGf,AcWuB,CdXvB,AcWS,EfiDb,CC5DI,CAAA,CAAA,GAAA,EwBNwB,IxBMxB;AkBIA,AnBwDJ,AyB9DI,AxBGH,AiBFG,AZXA,AG4BJ,ACAA,AEFA,ATAC,CF5BD,AESC,CgBSG,AMNA,APCA,CjBbQ,CESZ,IgBSI,CAAA,EnBwDJ,AC1EoB,AKEhB,EmBUW,EAAE,CPCb,CAAA,IlB6DJ,EmBxDI,CAAI,AnBwDR,AMxEI,CN2JH,AM3JsB,MYWnB,AZXA,CYWA,CODsB,AnBVY,ELF1B,IkBkBJ,CAAA,ADLJ,CAAA,EjBbgB,CwBQQ,APKxB,CAAA,CjBbgB,AiBahB,EjBbgB,CkBkBhB,AlBlBJ,AiBaI,ECKI,MDLJ,GCKA,EAAW;AZhBf,AkBWI,APCH,AHYW,ATxBR,AG6BJ,ACAA,AEFA,AeXC,CTTD,COII,CPJQ,GOIJ,EAAE,AnBXN,CagBA,CJQY,GTxBZ,GACI,CYMkB,CHiBF,CAAC,EIRrB,CbfI,CAAA,GmBUW,CVaP,ATvBJ,CAAA,CSuB2B,GTvB3B,CmBKoB,InBLb,IADX,MYOQ,cAAc,GAAA,EAAA,CAA1B;ACUQ,AZhBR,ARMI,AcuBQ,AbyDD,AyB3EP,ADKO,ATQK,ANKhB,ACAA,AEFA,ATDA,AwBRAyD,E3BoEW,AyB3EP,ADKO,EjBhBX,IQwBgB,CUbL,AtBeFrD,CUGS,AcXR,C5BZN,A0BKS,AEOFuE,C3BoEA,CmBtEI,AnBsEJ,Ge9Da,CSRb,ATQc,CIRL,AKAT,AGEX,CxBQA,AwBRmB,C5BZf,AIoBgBtE,CI1BpB,ARMgB,CCgFL,CAAA,AG5DX,CI1BA,AM6BgC,CELhB,AZES,CH4Dd,CmBtEH,ANa2B,AWbxB,CAAA,CxBsEP,AyB3EkB,EEOS,E5BZ3B,CQNJ,CRMsC,C0BDV,GzBiFb,COtFf,CM6BiD,AWbtC,CjBhBX,APsFI,EazDgD,AbyDxB,AwBtExB,CzBVA,AcuBQ,EdvB4C,ICgFpD,EAA6C,CwBtExB,KAArB,EAAoC,MAApC,EAAmD;ALClD,AZjBkC,AM8B3B,AbyDJ,AyB3EJ,ADKI,ATQK,ATxBL,AG6BR,ACAA,AEFA,ATDI,AwBRI,EpBnB+B,AkBYnC,EnBXI,CacO,CNeH,AVHJT,CsBfC,CEOKsE,CFPH,AnBXC,CAAC,CCD0B,APuFxB,COvFwB,CoBmBpB,EAAX,C3BoEY,AMtFZ,CO6Be,EP7BD,CO6BI,AbyDX,CAAS,CG5DA,GG1BhB,CO6BwB,CAAC,AYlBb,AtBeSjE,EI3BU,APuFf,CAAA,COvFe,CPuFf,AyBlFI,EzBmFb,GOxFwB,AJ2BnC,CI3BmC,CM8Bb,AVHe,CUGK,CbyDtB,EACF,Ea1DI,CAA0B,IAA1B,EAAgC,UAAU,CAAC,KAAX,CAAiB,CAAjB,EAAoB,cAApB,CAAhC,CAAd;AN3BR,AM4BQ,Ab0DA,AyB5ER,ADKI,ATQC,ANKT,ACAA,AEFA,ATDQ,AwBRP,CAFD,CFLI,IZkBQ,Ab0DA,EwBvEA,ECLA,EzB4EM,AyB5EJ,EzB4EM,CwBvED,IXaM,AbyDH,CmBzEP,AKGH,EXaiB,GWbA,KCLN,EZkBgB,CAAC,AWbhC,EAA+B,GCbX,KZ0BC,GAAwB,cAAzB,GAA2C,UAAU,CAAC,KAAX,CAAiB,cAAjB,EAAiC,MAA5E,GAAqF,IAArG;AdzBR,Ac0BK,Ab0DG,AyB5ER,ADKQ,ATQP,ATzBA,AG8BL,ACAA,AEFA,ATDQ,AwBPRwD,EFRI,CVOO,EFFH,CbuEI,AyB5EJ,E1BRJ,A0BQM,CzB4EK,C2BpEL,CdUK,Ab0DA,AG7DAxD,AwBPJmC,CHHO,CzBbd,A4BgBJ,CAAc,E5BhBV,AyBakB,IzBblB,CyBac,ArBUO,CqBVG,ArBUF/B,GAAD,CsBfN,AEQnB,CxBO+B,CAAN,AwBPG,CxBOpB,AwBPqBuE,MAAD,EAASC,WAAT,KAAyB,0BHHnC,CAAN;ALJG,ANkBH,AbuDU,AyBnFM,ADenB,AlBhBL,AG6BJ,ACAA,AEFA,ATDK,AwBPD,CFlBJ,ENUI,AhBWqB,CAKrB,CHwDoB,CAAT,CAAP,A2BhEC,GdUS,GcVH,CAACC,IdUU,GAAW,AcVtB,EAAUC,EdUb,QcVG,CAAX,IAAoCC,MAAM,CAACC,OAAP,CAAe5B,MAAf,CAApC,EAA2D;ARL/D,AZdI,ARGI,Ac2BI,Ab0DP,Ae/DM,ANKX,ACAA,AEFA,AeRQ,EZKG,CfyDA,KD/EG,CoBWd,AJWW,AYLE,CdUK,AELP,CRzBP,EoBoBa7B,CAAC,G5BjBK,A4BiBF,CAAb,CZKG,ChBtBe,AgBsBf,AYLaA,CAAC,GRNzB,ANgBgC,AcVJuD,GdUO,CN9B/B,CAAmB,AQyBZ,ChBtBe,CAAW,CgBsBjC,EYLkC,CpBpBlC,AM8BuC,AcVJjE,CdUK,CN9BN,GRG9B,C4BiBA,CZKa,CFKc,AcVYU,CdUK,AcVJ,EAAxC,EAA2C,EZK/C,EAA+C,6BFKmB,eAAnC,CAAvB;AMpCZ,AZMI,ARII,A0BSR,ADKQ,ATQA,ANKR,ACAA,AEFA,AeRY,CR3BZ,EAAA,CpBUQ,IQJJ,AiBkBQ,CzBdJ,A0BSR,ADKa,ATQA,CYLG0D,E5BjBR,CQJJ,CiBkBI,EjBjBA,AiBiBY,EzBdZ,AgBsBA,ChBtBA,AgBsBe,AYLE,GpBpBjB,AkBYR,AEQ4BH,CpBpBpB,ARGA,A0BSe,AVaf,ChBtBA,AgBsBoB,GRzBpB,AkBYR,ClBZQ,ARGA,C0BS2B,C1BTrB,EQHN,AQyBA,AYL8B,CAACvD,CAAD,CAA1B,EpBpBG,IADX,CRII,KAAmB,IAAnB;AACA,Ac0BI,AbyED,AyB1FP,ADKQ,ATQJ,AT1BG,AG+BX,ACAA,AEFA,ATFI,AwBNQ,E3BkFD,AMvGA,EPIH,EIuBA,CAAC5B,EJvBG,CAAC,Ac0BG,AcTAuF,CZKD,Cf6EJ,CAAA,AwBrFQ,EAAP,ATQO,AT1BR,CAAA,GqBqBc,C5BjBjB,ECmGG,A2BlFiBC,C5BjBF,ACmGf,AG5Ec,CUGK,CP9BnB,CAAA,CNuGA,CG5EmBtF,CUGK,CAAC,AbyEhC,AMvGO,AqBqByB,CdSxB,AcTyBuF,E5BjB7B,Ac0B+B,AP9BnC,CPCoD,CAKhD,KCiGQ,Ce7ED,CAAwB,Cf6EnC,AMvGY,CH2BP,CH4EoB,A2BlFD,CZKb,AYLsC,EZKR,AZCK,CAACzF,CG3B/C,ENuGA,AMvGgC,ENuGc,C2BlFWsF,CZK9C,CAAP,OYL+D,CxBM/D,GwBNkEJ,ExBMF7E,KwBNU,EAAtD,CAAhB,ExBMR,EAAgF;AIzB5E,ARKA,AcwBQ,AbyER,AyB1FJ,ADKK,ATQJ,AT3BD,AGgCJ,ACAA,AEFA,ATFQL,GYJG,CZIHA,II1BI,ADFR,GNwGW,EMxGX,CO+BkB,CN7BH,CPsGC,AMxGhB,EO+BsB,EN7Bd,APsGG,AMxGX,AH4BoB,CH4EA,AMxGY,CAC5B,CO8Bc,AVHKK,CUGK,CN7BH,IPsGL,CAAA,EAAA,CG5EhB,CH6EO,EOvGH,IAAgC,CPsGpB,EACF,Ka1EA,CAAN,ON7BqC,MAA7C,EAAqD;AACjD,AM6BC,Ab0ED,AyB3FR,AhBkBJ,ACAA,AEFA,ATFQ,AwBPI,MpBnBA,APuGA,Ca/EG,CAOH,EcZI,CpBnBA,AJ0BDA,CI1BE,APuGC,EAAE,G2BpFGqF,G3BmFD,CG5EG,CI1Bb,AJ0BcjF,EwBPV,CpBnBc,AJ0BL,EAAM,CAAN,AwBPU,CpBnBD,AJ0B1B,UwBPI,EAAmC,oBpBnBjB,CAAoB,MAApB,CAAlB;AACH,ARID,Ac2BI,AbwEA,AyB3FR,ADKI,ATOR,ANMA,ACAA,AEFA,ATFK,AwBPWkF,I5BfR,CQNA,CPyGI,AyB3FF,EDKE,AGEIA,C5BfJ,ACmGG,Ae/Ef,ChBpBa,CQJE,APuGA,EyB3FE,CDKC,CjBjBC,CkBYC,AVYpB,GhBpBQ,AyBae,CGEK,CAACC,CpBnBH,ARID,CyBajB,EAAqB,GGEb,CAAsB,E5Bf9B,I0BQ+B,ClBZpB,AkBYqB,EEOMN,EFPF,ClBZC,AkBYA,MEOW,IAAGJ,CpBnB5C,AkBYyB,ElBZkB,AkBYnB,CAAnC,GEO+D,EAAnD,EAAsDxB,cAAc,CAACsB,MAAM,CAACE,OAAD,CAAP,CAApE;ApBlBJ,APoGU,AwBnFV,AT/BZ,ATWQ,AGiCR,ACAA,AEFA,AeTa,CZjCb,EAAA,EfiHwB,COnGZ,APmGG,AwBlFH,CxBkFJ,CMtGI,GCGI,CAAC,AiBiBC,GAAG,AlBpBF,CAAC,MCGR,GAAkB,EDHlB,ECGsB,EDHC,IkBoBH,GlBpBU,CAAC,IkBoB/B,OlBpBuB,CAAoB,MCGzB,CAAkB,ADHxC,EAAwD,ICGlC,CAAlB;AACH,ARGJ,ACoGA,AyB5FD,ADMK,AlBpBG,AGiCZ,ACAA,AEFA,ATHI,GHwEO,EOnGI,AiBOwC,CCM/C,ADQA,ArBMA,KIzBO,EkBWA,AnBdI,OmBcX,AnBdkB,CAAC,ImBcA,EnBdR,CAAe,IAAI,ImBclC,EAAoC,YnBdN,EAAf,CAAP;ACIA,AM6BA,AYlBJ,AnBdC,AGiCT,ACAA,AEFA,ATHQ,AwBPI,UdWM,AcXFW,CFPD,ClBXG,IAAI,EkBWd,GlBXU,CAAU,EM6BI,GAAG,AcXF,GAAGV,UAAU,CdWG,AcXF,GdWK,CAAxC,AcXuCvD,CAAL,CAAlC,IpBlBM,CAAN;AACH,ARET,Ac2BY,AbwFD,AyB1GN,AhBmBL,ACAA,AEFA,ATHQ,AwBPI,E3BmGD,CyB5GP,GZoBQ,Gd3BZ,A0BSW,CEOKkE,CxBOD9F,CH4FJ,CAAA,IaxFY,AcXA,C5BhBvB,Ec2B0B,AcXAwF,E3BmGf,CAAA,IG5FoB,CUIG,AVJF/E,AwBPE,CdWC,AbwFxB,A2BnGwBsF,ExBOJ,CH4F3B,CG5FiC,CAAN,CAAvB,GUIkB,CAAmB,CAAnB,EAAsB,AbwF9B,C2BnGQ,CAAyB,C3BmG/C,EAA2B,A2BnGsBT,O3BmGjD,EaxFsB,AbwF0B,A2BnGW,CdWnD,McXyDO,iBAAkB,OAAMnC,cAAc,CAACsB,MAAM,CAACE,OAAD,CAAP,CAAkB,EAAnG,CAAd;A5BtCZ,AckDY,AbwFJ,AyB1GA,ADMA,AlBpBA,AGiCR,ACAA,AEFA,ATHK,CJ9CL,CAA+B,CI2C3B,CAGE,EUIM,CdlDZ,CAAA,AyBsCc,AlBpBF,CAAC,CmBcC,CzB0GC,AG5FH5E,CAAN,EsBdY,AtBcJ,EH4FM,AwBpGE,AlBpBF,CAAC,EOgCI,AYlBX,ADMW,CxBoGV,AyB1GS,CzB0GA,CaxFK,CPhCrB,EAAqB,INwHL,CaxFa,AbwFb,CaxFc,CbwFd,EACT,GazFc,GAAkB,CbwFvB,EACF,CyB3GwB,IAAhC,CAAN,KZkBoB,EWZe,CXYsB,IWZxC,CAAwB,GXYwB,CAAC,CWZjD,CAAjB,OXYyD,CAAmB,cAAnB,CAArC,GAA0E,IAA1F;AACH,AbyFG,AyB3GP,AnBdO,AGiCZ,ACAA,AEFA,ATHQ,AwBRI,KdlB+B,CAgCnC,AbuFI,EG7FA,EwBRIiF,E3BqGE,CMzHC,CNyHC,K2BrGK,CrBpBC,AqBoBAS,CrBpBC,CNwHL,KMxHH,CAAe,CqBoBlB,GrBpBsB,CqBoBC,IrBpBL,AqBoBtB,CrBpBgC,CqBoBA,mBrBpBV,CAAf,CAAP;ACEP,APwHO,AyB3GX,ADMO,AlBpBC,AGiCT,ACAA,AEFA,ATHY,AwBRIT,M3BqGJ,EwBrGE,AGAEA,C3BqGD,EAAA,M2BrGU,CAACS,CHAD,GAAG,EAApB,GGAQ,GAAuB,EAAvB;ApBjBZ,APoHkB,AyBvGtB,AhBkBA,ACAA,AEFA,ATHY,AwBRC,K3BiGW,CAAT,CAAP,MGzFWhG,gBAAgB,CAACU,IAAjB,CAAsB,IAAtB,EAA4BD,GAA5B,EAAiC,CAAjC,CAAP;AJzBZ,Ac8BQ,AbyFH,AwBtGG,AlBpBA,AGkCR,ACAA,AEFA,ATHS,GHuFE,EG1FH,CAGE,EUII,APjCF,CkBoBkB,AlBpBjB,IkBoBiB,ArBSdH,CAAN,CqBToB,CXaR,APjCF,AH6BF,CG7BG,CkBoBS,CXaL,AWbK,ClBpBtB,CkBoBsB,ClBpBJ,SkBoBI,GAAA,QAAtB,EAAsB,EAAA,GAAA,OXaa,GWbb,CAAA,CXaL,CAAwB,IWbzC,EAAsB,EAAA,EAAtB,CXaiB,CAAjB,AWbgC;AzBhBxC,AC+HI,AwB/GS,AlBnBD,AGkCZ,ACAA,AEFA,ATHY,AwBTA,I5BjBZ,MyBgBmB,AGCH2F,GrBpBG,GPGnB,CyBgB0B,CGCF,C5BjBxB,CyBgB0B,AlBnBA,CAAC,AqBoBAT,MrBpBR,CAAe,CPGlC,A4BiBmC,CHDT,AGCUU,CHDV,ClBnBY,CkBmBZ,CAAb,CzBhBb,EAAA,AOHkC,CAAU,KqBoBjB,CAAuB,MAAvB,CAAf,IrBpBsB,CAAf,CAAP;ACED,ARCuB,Ac8B1B,AYlBR,ADKY,AlBnBH,AGkCT,ACAA,AEFA,ATHY,AwBTAD,EpBnBD,ARCuB,E0BYlC,EEMYA,EdYE,EWbI,CzBjBgB,CAAA,CI2BfjG,CwBTC,CAACmG,CdYC,GN/BX,AM+Bc,CN/Bd,GM+BkB,AWbE,CzBjBG,Ac8BJ,AYlB9B,E1BZkC,AyBiBA,AGCtB,CFNZ,AEMiCL,EpBnBtB,AM+Bc,AVHU,CI5BxB,AM+ByB,AWbE,ArBUFpF,CqBVG,CzBjBL,CAAA,CQDvB,AJ4BQ,AwBTP,CxBS6B,CqBVP,CjBlB9B,AiBkByC,CXaD,CAAC,AYlB7C,AtBemB,CUGyB,CAAnB,AVHsBD,CUGvC,EWb0B,ArBUf,CqBVP,CrBUwC,CI5BpC,AJ4BG,CAAP,MI5BR,EAAgC;AAC5B,ARKJ,A0BOJ,AhBqBA,ACAA,AEFA,ATHS,AwBTGwF,MAAAA,KFPZ,GEOoB,CAACG,YAAT,CAAsB,GFPlC,GAAA,CA4KC,AErKW,EAA+B1C,cAAc,CAACsB,MAAM,CAACE,OAAD,CAAP,CAAd,CAAgCmB,WAAhC,EAA/B;ApBlBJ,AM8BA,AWbI,AlBlBJ,AGkCR,ACAA,AEFA,ATHK,AwBTOd,MAAAA,EpBnBA,AM8BA,EWbI,ClBlBD,ICCI,ADDA,AqBoBE,CpBnBD,AM8BA,AcXEY,CdWD,AWbE,IXaf,CP/BO,CO+BY,AP/Bc,ICC7B,AoBmBA,CAAsBF,EHFE,CjBjBD,AiBiBE,ElBlBK,EkBkB1B,CGEJ,EpBnB8B,CAAC,CiBiBG,AlBlBL,EAAU,MkBkBvC,AlBlB6B,ECCN,AiBiBqB,AlBlBC,CCCF,OAA/C,EAAwD;AACpD,AM8BA,AYsBD,ADnCK,AlBlBJ,AGkCZ,ACAA,AEFA,ATDC,AwBXQ,EFiCE,QnBrDO,EO+BA,CN9BC,ADDE,CkBkBC,EXaA,AP/BE,EkBkBE,EjBjBA,ADDE,CCCD,AM8BT,CAAU,AYsBjB,CAAA,ADnCW,CAAU,GjBjBb,CAAe,IAAI,AkBoD3B,CAAA,CnBrDa,EAAZ,MkBkBU,CAAN,MCmCL,ClBpDuB,EAAf,AkBoDf,ClBpDQ,SkBoDgB,OAAxB,CZtBc,CAAN,AYsBoD;AlBnDvD,AM8BA,AbmGL,AyB7EI,ADnCK,AlBjBD,AGiCZ,ACAA,AEFA,AeZK,GAlBgD,CAmBjD,ErBpBQ,GAAG,CAAC,IAAJ,CmBoDA,AnBpDS,OAAO,CAAC,EmBoDrB,CAAe,GnBpDX,EAA0B,EmBoD9B,EAAwB,GnBpDa,CAAC,GAAlC,EmBoDJ,AnBpD4C,IAAxC;AACA,AGiCZ,ACAA,AEFA,ATFA,AwBTI,MrBpBQ,GAAG,AH6BNtF,CG7BO,cH6BhB,CG7BY,AH6BaC,GG7BS,GH6BlC,EAAiC,EG7BQ,CAAC,eAAR,KAA4B,SAA5B,GAAwC,IAAxC,GAA+C,OAAO,CAAC,eAA7E;ACCJ,AM6BA,AYuBA,ADpCI,AlBhBA,AGiCZ,ACAA,AEFA,ATFI,AwBRA,IdQI,EP7BI,AH6BJX,EI7BI,AkBoDA,ClBpDC,ADAE,CAAC,IkBgBI,EjBhBA,AkBoDA,ClBpDC,AkBoDA,EZvBE,GAAG,CN7BlB,CkBoDY,AtBvBM,CI7BG,AkBoDrB,CnBpDI,CmBoDmB,ADpCE,AlBhBA,CkBgBC,CrBaHM,CUAvB,CAtCmC,CAwCnC,AWfI,SrBaR,EAAyC,EG7BjC,EAAyC,gBAAzC,EAL6C,CAM7C;ACAA,ARGR,Ac4BI,AbgGG,AyB3EC,ADpCI,AfiBhB,ACAA,AEFA,ATFQ,AwBRJ,E3B0GO,SD5HP,A0BiDa,CzB2EN,CO/HQ,AP+HR,AwB/GU,ICoCT,GlBpDc,AkBoDA,ClBpDC,CP+HhB,CD5HP,AC4HO,CD5HK,GQHG,AkBoDP,ClBpDsB,IAAI,IRGlC,CQH8B,CAAU,ARGgB,AC4HjD,CwB/GsB,ExB+G7B,QwB/GY,ExB+GW,GAAvB,EAAkC,EO/HJ,CAAf,CAAP;AACH,AP+HD,AyB3EC,ADpCW,AlBhBR,AGiCZ,ACAA,AEFA,ATFQ,AwBPJ,KF4BI,CnBlDI,GAAG,CAAC,CN+HD,AyB3EA,AtBvBAA,EHkGP,EyB3EW,ADpCM,OCoCC,CtBvBC,CAACK,EG7BhB,CAAqB,EmBoDd,CtBvBQ,CAAnB,GsBuB8B,ADpClB,CAAyB,MlBhBjC,CmBoDG,CnBpDkC,CmBoDD,IDpC5B,qBlBhBR;AO+BJ,AbiGH,AyB3EO,ADpCQ,AlBfR,AGgCZ,ACAA,AEFA,ATFK,AwBPD,G3BuGO,AGpGsB,CAK7B,MsBsBc,AnBnDA,CO6BH,CAAC,KP7BS,CmBmDC,EnBnDE,CmBmDC,IZtBd,EAAgB,AP7BI,CAAC,MmBmDM,CAAC,AnBnD/B,OO6BG,AYsB2B,CZtBlC,AYsBI;AlBpDJ,ARCQ,Ac8BX,AYsBO,AhBnBZ,ACAA,AEFA,AeTI,GdnCO,KNYC,ARCI,CQDH,EkBqDI,KlBrDG,CAAC,AkBqDT,GlBrDJ,ARCQ,A0BoDU,ElBrDA,EkBqDI,C1BpDd,KAAA,CAAA,EAAA,W0BoDU,CAAkB,QAAlB,CAAd;AlBpDA,ARAI,AC+HhB,AyB1ES,ADrCO,AlBfJ,AGiCZ,ACAA,AEFA,AeTI,KF2BW,C1BlDC,GC+HhB,CM9HgB,CmBoDD,ElBrDI,AiBgBE,IlBfT,CPDI,CC+HhB,AM9HyB,CCDC,CAAC,ARAX,MQAG,CAAe,IAAI,KAAJ,CAAU,CiBgBX,GzBhBjB,OyBgBA,MjBhBkB,CAAf,CAAP;AACH,ARDmD,Ac+B5D,AbaA,AyBUY,ADrCQ,AlBfJ,AGiChB,ACAA,AEFA,ATHI,CHcJ,EAAA,GGdQ,CAACX,CG5BO,CO6BhB,EYuBiB,GnBpDK,CkBeG,AlBfF,EmBoDX,EnBpDI,CmBoDU,AnBpDE,ImBoDE,CtBxBH,CUC3B,CP7BgB,EACK,CH2BWG,IqBbZ,CAAyB,ClBf7B,CACa,OmBmDH,CAAkB,EnBnDd,CkBcV,CrBaX,GsBwBiB,CAAd,AnBnDiB,AH2B0B,CAACH,CG3BpB,iBH2B5B,KAAuEM,YAA3E,EAAyF;AUjD7F,AY0ES,ADrCW,AlBdI,AGgCxB,ACAA,AEFA,ATHQN,CUlDR,EAAA,CVkDQA,MG3BgB,GAAG,CAAC,QH2BF,GAAGM,KG3BL,CAAqB,MAArB,AH2BhB,EG3B6C,OAAO,CAAC,MAAD,CAApC;ACDhB,ARHJ,AOKiB,AGgCrB,ACAA,AEFA,ATHQ,AwBPJ,MAAI+F,E5BzBJ,COEY,ECCD,AJ6BA/F,EJhCX,A4ByBW,GpBtBK,ARHhB,A4ByBciF,I5BzBd,GIgCuB,CAAC5E,AwBPF,CAAC6E,CpBtBZ,CAAgB,GJ6BJ,CI7BZ,AJ6BP,CI7B4B,OAArB,AoBsBG,CpBtBV,AoBsBkC,OAAxB,CAAd;ApBrBC,AkBqDG,ADtCQ,AlBbH,AGgCb,ACAA,AEFA,ATHK,GI3CM,QkBmEI,EDtCM,ECsCb,wBDtCyB,UAAjB;AzBlBR,A0ByDH,ADtCe,AfmBpB,ACAA,AEFA,AeXI,GFmBO,IEnBF,C5BzBK,K4ByBC,CAACc,CHNS,EzBnBF,GAAG,A4ByBX,EAASC,OAAT,C5BzBW,A4ByBtB,C5BzBiC,GyBmBjB,AGMgBpB,CHNS,KzBnBrC,A4ByBkC,CAACC,OHNvB,AGMgB,CAAeJ,WAAf,CAAhC,EAA4D;ApBpBrD,ARJH,AyBmBY,AlBbR,AGgCZ,ACAA,AEFA,ATJI,AwBPIwB,EpBrBG,ERJH,A4ByBAA,ExBOA,GJhCA,COMQ,EPNR,A4ByBQ,GAAGH,ErBnBI,CPNf,AOMgB,CCFb,ARJH,CQIG,EoBqBe,C5BzBlB,A4ByBmBI,C5BzBnB,IAAA,CQIG,CAAA,ARJG,AOMF,EAA0B,IqBmBnB,CAAuB,IAAGH,C5BzBrC,GQIG,ERJgB,A4ByByB,CpBrBhD,CoBqBe,CAAX,C5BzBA,CAFoD,CAIpD,KQEmB,GAAvB,EAAkC;AAC9B,ARFA,A0B+EG,AnB3EK,AGgChB,ACAA,AEFA,ATJQ,EsBiDG,MnB3EK,GCFD,ADEI,CAAC,ICFA,MkB6ET,CAAA,CnB3EK,ECFD,CAAgB,ADEI,KmB2ExB,CAAA,CnB3E+B,CAAC,KmB2EhC,ElB7EI,CAAgC,AkB6E3C,GlB7EW,CAAP,ADEQ,MmB2EG,GAAf,EAA4B,sBAA5B,EAA+F;AlB5E9F,AkB6EG,AD/DQ,AlBZH,AGgCb,ACAA,AEFA,ATJQ,AwBRA,GpBtBG,KoBsBCE,GxBQGxG,EqBdM,EC+DT,CEzDQ,IAAI,IAAhB,CFyDA,CAAe,AEzDM,GFyDrB,AtBjDyB,CAACW,CsBiDN,KAApB,AtBjDyB,CAAzB,EqBdyB,IAAjB;AzBhBR,AyBiBY,AfoBpB,ACAA,AEFA,ATJK,AwBRO6F,GxBKR,CJ5BI,AI+BF,EwBRMA,G5BvBA,CAAC,CI+BAnG,CAAP,EAAS,AwBRK,GAAGkF,E5BvBf,GAAiB,G4BuBM,CAACU,K5BvBxB,Q4BuBe,CAAuB,IAAvB,CAAX;ApBpBZ,AkB6EQ,AD9DY,AlBZR,AGgCZ,ACAA,AEFA,ATJQ,AwBRIO,MAAAA,ExBQA,CI7BZ,CDGgB,IqBkBI,CFwDR,AExDSL,ErBlBE,CAAC,OmB0EhB,ClB7ER,AkB6EuB,CExDX,CAAsB,CFwD1B,AnB1EI,EmB0EgB,AnB1ES,CqBkBzB,EAA4BG,EFwDhC,IExDI;ApBzDZ,ARkCK,AOMW,AGgChB,ACAA,AEFA,ATJY,AwBRAD,CpB1DZ,CAAuC,IoB0D3BA,ErBlBI,KqBkBG,CAACH,CrBlBG,CAAC,QCxCxB,CAAA,AoB0DY,CAAoBM,CrBlBhB,CAAoB,MqBkBxB,CrBlBI,GAA8B,YAAA;AmB2EtC,AD/DQ,AlBXI,AGgCpB,ACAA,AEFA,ATJY,AwBRH,KAJD,IF4DK,CnB1EO,CqBmBR,CFuDJ,CD/Da,AlBXE,AH0BJxG,CG1BK,CmB0EL,GAAX,CAJ2F,AnBtE/E,CmB4EZ,WtBlD6B,CAACS,IAAnB,CAAwB,EqBfV,ErBed,EAA8BE,CqBfjC,KrBeG,CAAP;AJhCZ,A0BmFQ,ADjEY,AlBXA,AGgCpB,ACAA,AEFA,ATJS,AwBPG,KxBIJ,CAGE,GJjCV,COOoB,AqBmBJ6F,GxBOCnG,CAAP,EG1BgB,AH0BP,CG1BQ,CqBmBH,CAAC0F,E5B1BzB,AOO+B,OqBmBf,IAAsB,IAA1B,EAA+B,CrBnBhB,EAAD,CAAN;APxBpB,AyBoCoB,AlBXH,AGgCjB,AGFA,ATJY,AwBPIS,C5B5ChB,CAAkC,KAAlC,CAAA,A4B4CgBA,CrBtBA,OqBsBQ,CAACT,SAAT,GAAsB,EAAtB;AFyDR,AnB3EK,AGgCb,AGFA,ATJY,AwBPC,QFwDD,OAAO,sBAAP,KAAkC,QAAtC,EAAgD;AAC5C,ADjEI,AfsBhB,AGFA,ATJY,AwBPH,WFwDQ,EtBjDE/F,kBAAkB,CsBiDzB,AtBjD0BS,GsBiDA,CtBjDnB,CAAwB,IAAxB,EsBiDmB,AtBjDWE,CsBiDX,EAAA,EAAQ,CtBjD3B,CAAP,GsBiDuC,qBAAb,EAAuC,sBAAvC,CAA1B;AACH,ADjEW,AlBVR,AGgCZ,AGFA,ATJS,KsB+CD,KnBzEQ,CmB2ED,MnB3EQ,CAAC,OAAZ,EAAqB;APTjC,A0BqFY,ADjEQ,AlBVJ,AGgChB,AGFA,ATJK,AwBRG,QrBlBQ,AqBkBJ,EHRQ,CCiEH,AnB3EE,CAAC,GqBkBD8E,CHRO,CAAC,ElBVX,CkBUI,CAAW,ClBVD,AqBkBlB,IAAmB,GrBlBM,CAAC,EmB2E1B,GAA0B,EnB3EtB,AqBkBR,EHRgC,AGQG,IFyDL,CAAA,EAAA,EACnB,EDlEC,EAAiC,CCkE7B,qBADc,EACO,GDlEmC,aAAa,CAAC,IAAzC,GAAgD,YAAjF;AzBnBpB,A0BsFgB,ADlEI,AlBVP,AGgCb,AGFA,ATDC,AwBXWC,I5B5BZ,E4B4BYA,EF0DI,M1BtFhB,GAAA,A0BsFyB,CE1DD,CF0DG,AE1DFC,OAAb,C5B5BZ,A4B4BiCW,M5B5BjC,A4B4BY,E5B5BZ,A4B4ByCC,OAA7B;A5B5BoB,A0BqFa,ADpFjC,Af0CZ,AGFA,AeZS,E5B7BuB,K0BoFM,CAA1B,G1BpFoB,CAAA,UAAA,EAAA,MAAA,CAAA;AAK5B,A0BmFK,AnB5EG,AGgCZ,AGFA,ATFA,IAAI3F,EG5BQ,GAAG,AH4BN,CG5BO,EH4BJ,EAAZ,EG5BY,GAAa,YAAA;AkBUb,AlBTI,AGgChB,AGFA,ATFA,AwBXQ4F,IxBWJ3F,AwBXI2F,EHRI,MlBTQ,AH4BR,AwBXI,CAACL,ExBWF,EqBnBQ,CAAC,ClBTG,CAAC,AH4B5B,EqBnBY,CAAiB,EGQrB,CAAsB,KrBjBd,EAAyB,AqBiBjC,EAA+B,CHR3B,UGQJ;AF4DA,ADnEC,AlBTW,AGgCpB,AGFA,ATFA,AwBXQK,IxBWJ1F,AwBXI0F,MrBjBY,CmB4EL,CE3DC,CAACN,EF2DT,CtBhDR,CG5B2B,CAAC,MqBiBpB,CAAqBX,IrBjBT,CAAoB,GqBiBH,CAACO,GrBjBlB,GAA8B,IAA9B,IqBiBS,CAAyB,GAAEnC,SAAS,CAAC2C,MAAD,CAAS,KAAIC,OAAQ,KAAzD,CAArB;AF4DH,AnB5EY,AGgCjB,AGFA,ATFA,AwBXK,GFyCM,CtB9BPxF,UAAU,GAAG,CAAC,CAAlB;AsBkDI,ADpEI,AfuBR,AGFA,AebC,CAjDD,UHyCe,WAAP;AACH,AlBTW,AGgChB,AGFA,ATFA,GqBnEW,MrBmEFC,GG5BW,GAAG,CAAC,MAAJ,EH4BpB,EG5BkC,CH4BP,EG5BP,IAAqB,GAAG,CAAC,MAAJ,GAAa,GAAtC,EAA2C;APRvD,AyBmBA,AlBVgB,AGgCpB,AGFA,ATFI,AwBVJ,MxBUQ,CAACH,EwBVA6F,CrBlBW,CPThB,IIqCI,EG5BmB,CAAC,CH4BP,CAAC5F,CJrClB,CAAY,AOSgB,GqBkBhC,GAA2B,IxBUvB,EJrCA,AIqCgC,EJrCuB,UOS/B,CAAiB,GAAG,CAAC,MAArB,EAA6B,GAAG,CAAC,UAAjC,EAA6C,GAAG,CAAC,QAAJ,IAAgB,GAAG,CAAC,YAAjE,CAAD,CAAP;AACH,AGgCjB,AGFA,ATFQ,AwBVJ,MAAI,GrBpBQ,IqBoBD2E,ErBlBQ,KqBkBf,IAAmB,WAAvB,EAAmC;ArBjBnB,AGgCpB,AGFA,ATFK,AwBVGnB,IAAAA,MrBlBY,CqBkBL,CAACK,GAAR,CrBlBkB,AqBkBN,CrBlBO,IAAI,iBAAJ,CAAc,GAAG,CAAC,IqBkBrC,MrBlBmB,EAA8B,GAAG,CAAC,MAAlC,CAAD,CAAN;APXJ,AOYC,AGgCjB,AGFA,AeZQ,Q5B9BQ,YAAA,KAAA,KAAA,CAAA,EAAA;AAAA,A0BwFL,AnB3EE,AGgCb,AGFA,ATHI9D,AwBTC,EFyDM,AtBhDPA,IJxCY,COGJ,GHqCA,GAAG,KJxCC,AIwCZ,GJxCY,C0BwFL,CAAA,SAAA,CAAA,Q1BxFK,O0BwFL,GAAP,UAAuB,QAAvB,EAA6C;A1BxFU,A0ByFnD,AhB3CR,AGFA,ea6CY,UAAJ,CAAe,QAAf,EAAyB,UAAzB;AnB1EI,AGgCZ,AGFA,ATJI,AwBTAyD,EAAAA,IrBjBQ,AH0BJxD,GG1BO,AqBiBJ,CrBjBK,AqBiBJ6D,GAAR,CAAY,GrBjBJ,CH0BQ,CAAC1D,CG1BK,KH0BtB,EAAyB,KG1BH,UqBiBtB;A5BhCA,A0B2FI,ADnEG,AlBRK,AGgChB,AGFA,ATJQL,EqBlBG,ErBkBHA,IJ1CJ,AOgBY,CmB2EH,AtBjDA,GAAGE,CJ1CZ,AOgBgB,CAAC,EPhBjB,C0B2FI,ADnEG,CAAA,EzBxBP,A0B2FoB,AnB3ER,CAAY,GAAZ,AH0BY,CG1BI,AH0BHI,EqBlBlB,CCmEH,ADnEG,GrBkBK,CAAoBN,KAApB,CAAR,EqBlBG,GAAP,AlBRqC,OAAzB,EAAkC,CkBQ1B,OAApB,EAAuC,oBlBRmC,GAAG,CAAC,MAAhC,GAAsC,IAAtC,GAA2C,GAAG,CAAC,UAA/C,GAAyD,GAA3F;AmB4ER,ADnEA,AfwBR,AGFA,ATJK,AwBVD,GxBQA,IwBRK,ExBUE,EsBiDI,ADnEA,EGQA,CAACqE,CF2DR,ME3DO,EAAUC,UAAV,CAAX,IAAoCC,MAAM,CAACC,GHRd,IGQO,CHRzB,AGQwC5B,CHRhB,IAAI,CAAC,AGQJ,CAApC,EAA2D,MHRxB,CAAe,OAAf,CAAxB,CAAP;AzBxBA,A0B4FH,ADnEA,AlBTW,AoBtEhB,AjBuGA,AGFA,ATJQzC,AwBVA,GFsDG,ADhEA,CrBoBHA,IJ3CM,AOgBE,CqBiBH,IAAIY,CrBjBK,AH2BJ,AwBVA,CrBjBK,EPhBA,AI2CF,AwBVA,CxBUC,AwBVd,CrBjBmB,AH2BnB,CJ3CkB,A4BiCFA,CAAC,GAAGuD,M5BjCF,CAAW,G4BiCC,CAACjE,CrBjBhB,CAAc,GPhB7B,AOgBgC,CAAC,AqBiBjC,EAAuCU,CAAC,EAAxC,EAA2C,GrBjB5B,EAA8B,GAAG,CAAC,MAAlC,CAAD,CAAN;APfR,AOgBK,AGiCb,AGFA,ATJK,AwBVO,I5BjCJ,GOaI,EPbJ,C4BiCQ0D,E5BjCR,MAAA,CAAA,A4BiCiB,GAAGH,C5BjCpB,CAAA,IAAA,EAAM,E4BiCwB,CAACvD,CAAD,CAA1B,O5BjCJ,KAAmB,IAAnB,CAFmD,CAInD;AACA,A0B2GG,ADpFC,AEhFZ,AjBwGA,AGFA,AedY,EF4ED,ADpFC,QGQIgF,KAAK,EHRT,CAAA,AGQYjB,IF4Eb,CAAA,IDpFC,CAAA,EGQwB,CAACkB,CF4E1B,CAAA,KE5Ea,CAAsB,QHRlC,CGQ0CvB,EHRlD,KCoFO,EE5EqD,CF4E5D,EDpF4B,CGQmCJ,MHR/D,CCoF8B,AE5EyC,CHRjB,CGQlC,CAAZ,yBF4ER,EAAoF;AAChF,ADpFA,AlBTI,AGiCZ,AGFA,ATLI,MG1BQ,AH0BJrE,EsBmEI,CDpFC,AlBTE,CAAC,CH0BH,CAACK,CsBmEG,KtBnEb,CG1BQ,CH0BU,EG1BM,MmB6FpB,CDpFA,CCoF0B,ADpFA,IlBTN,GkBSa,CAAC,MAAlC,EAA0C,yCAA1C;AzBvBA,A0B4GI,AnB7FI,AoBxEhB,AjByGA,AGFA,ATLQE,AwBVI,I5B/BJ,AIyCAA,IG1BQ,CPfJ,CAAC,A4B+BGwF,EF6EE,CnB7FE,CAAC,AH0BH,CwBVG,CF6EC,G1B5Gd,A4B+BiB,CrBhBT,CmB6FE,AnB7FU,CPfH,A0B4GG,CE7EhB,CrBhBI,CAAgB,AqBgBF,M5B/BtB,YOeiC,OAAzB,EAAkC,WmB6FhC,CAAN,gBnB7FI;AmB8FP,ADpFD,AfwBR,AGFA,ATLK,AwBX2B,QHNpB,OAAO,CAAC,YAAR,KAAyB,SAA7B,EAAwC;AzBxB3C,AyByBO,AlBVI,AoBvEhB,AjByGA,AGFA,ATLC,AwBXerC,QrBhBA,AqBgBAA,GHNC,GlBVK,CAAC,AqBgBA,CAACK,GrBhBG,AqBgBX,CAAa,WHNjB,CAA0B,OAAO,AlBVtB,CkBUuB,ClBVxB,CAAN,UkBUJ,CGMiDU,CHND,QGMW,IAAGJ,OAAQ,EAAlE,oBHNJ;ACqFJ,ADpFC,AlBVI,AGkCb,AGFA,AehBgB,OrBnBJ,CmBiGA,CAAC,4BAAL,EAAmC;A1B7G3C,A0B8GY,ADpFP,AElFL,AjB0GA,AGFA,ATLA,AwBXa,GHZD,MzBpBZ,AI2CS9D,EsBmEQ,Q1B9GjB,AI2CA,GAAsB,IsBmEV,GAAuB,IAAI,8CAAJ,EAAvB;A1B/HZ,A0BgIS,AnB9FG,AGkCZ,AGFA,ATLI,CJ7DJ,CAAgC,G0B8HxB,CnB5FI,AH2BJN,CJ7DR,CAAA,COkCe,CAAC,CmB8FD,GnB9FH,AH2BR,CsBmEe,AnB9FE,CH2BH,IsBmEM,CAAC,CnB9FG,CAAC,KmB8FV,CAAc,CnB9FZ,IAAmB,EAA5B,qBmB8FO,CAAJ,EAAiD;AACpD,ADpFA,AlBVH,AoBzET,AjB2GA,AGFA,ATLQ,AwBZI,EHLA,GlBjEG,CAAP,IqBsEQwE,CF+EC,MDpFL,CAAA,CGKa,GAAGH,IF+EhB,CDpFA,CAAA,CCoFuB,GE/EG,CF+EC,AE/EAvD,CAAD,CAA1B,YHLA,GAAR,UAA4B,OAA5B,EAAsD,UCoFvB,CAA2B,4BAA3B,CAAvB;AACH,ADpFD,AlBVH,AGkCL,AGFA,ATLK,AwBZO,GrBpFD,EmBiKI,IDlFF,CGKG2D,CF+ED,QE/EU,GAAGC,OHLpB,CAA0B,AGKE,CAACC,MHLI,CAAC,OGKd,CAAyB,IHL7C,EAAgD,GGKKH,SAAU,IAAGJ,OAAQ,EAAtD,CAAhB,eHLJ;ACqFI,ACvKZ,AjB2GA,AGFA,AejBYX,MAAAA,KF+EK,EE/EE,CAACK,GAAR,CAAa,QF+Eb,GAAuB,IE/EIW,SAAU,WAAUD,IF+E/C,KE/EyD,IAAGJ,OAAQ,EAApE;AFgFH,ADpFD,AlBXR,AGmCA,AGFA,ATNI,AwBXQ,MxBWJ7D,EqBhBI,ClBXZ,CqBgBgBwE,GxBWD,EqBhBI,CAAC,ArBgBFrF,IqBhBN,ElBXZ,GkBW6B,CrBgBD,CAACS,AwBXI,GAAGkE,IHL5B,EAAgC,IGKM,CAAC,CxBWnB,CAAxB,EwBX+CvD,CAAL,CAAlC;AHJA,AlB3FZ,AoBOA,AjB4GA,AGFA,ATNId,AwBXQ,CrBhGZ,CAAmC,AH2G/BA,QAAQ,AwBXIgF,EHLE,CrBgBH,GqBhBO,CrBgBlB,AwBXmB,GAAGN,CHLR,CAAU,ElB3F5B,CAAA,GqBgGkC,CAACO,cAAT,CAAyB,GAAET,SAAU,OHL7C,AGKmDO,CHLzD,gBGK2E,OAAMe,KAAM,EAAzE,CAAd;AFgFJ,ADpFC,AfwBT,AGFA,ATLI,MAAItF,GAAG,EsBmEI,CtBnEDT,GsBmEN,EtBnEW,CAACK,MAAhB;AsBoEC,ADpFA,AEpFL,AjB4GA,AGFA,AelBY,GFkED,AD5EC,OGUIqE,SAAS,CAACS,SAAV,IAAuB,IAA3B,EAAgC;AFkFxC,AhB7DJ,AGFA,ATNI,AwBZYT,QAAAA,CxBYNjE,GAAN,EAAW,GwBZU,CAAC0E,SAAV,GAAuB,EAAvB;AHHJ,AErFZ,AjB6GA,AGFA,ATNQjF,AwBZK,EHJD,ErBgBJA,YAAY,CqBhBR,CAAA,CrBgBWF,KAAf,GqBhBI,CAAA,mBAAA,GAAR,UAA4B,OAA5B,EAAsD;AAClD,AfwBR,AGFA,ATNQA,IAAAA,IqBhBI,CrBgBC,GAAG,EAAR,CqBhBW,CAAC,MAAR,IAAkB,OAAO,CAAC,KAA9B,EAAqC;AACjC,AEtFZ,AjB8GA,AGFA,AepByB,UAAIoF,EHFX,IAAI,EGEe,GHFnB,AGEsBT,CHFZ,OGEoB,CAACU,aAAT,CAAuB,MAAvB,CAAf,YHFP,CAAN;AACH,AfwBT,AGFA,ATPQ,AwBbID,MAAAA,KxBaG,EAAEjF,CwBbG,CAACmF,QxBaN,GAAe7E,AwBblB,CAAqBwE,ExBazB,EAA2B,GwBbvB;ADvFZ,AjB8GA,AGFA,ATPY,AwBbAG,MAAAA,IxBaIlF,IwBbI,CAACqF,OxBaT,EAAkB,GwBblB,CAAsB,OAAtB,EAA+BQ,KAAK,CAACP,WAAN,EAA/B;AFkFD,ADnFH,AfwBR,AGFA,ATPgBtF,AwBbJwE,EFiFD,IEjFCA,EHFA,ArBeIxE,CqBfH,MGEQ,CHFD,AGEEoF,CHFD,GrBeO,CAACnF,CsBoElB,CAAA,ADnFC,IAAmB,AGEnB,CAAsBiF,GxBaN,CsBoEjB,AtBpEK,CsBoEL,AtBpE8B1E,CqBfH,CAAC,CrBevB,AwBbJ,EFiFD,EDnFH,CCmFJ,CDnF0C,WCmF1C;AACI,ADnFI,AfwBZ,AGFA,ATPa,AwBbJ,WHFQ,oBAAL,CAA0B,OAAO,CAAC,KAAlC,EAAyC,yCAAzC;ACoFJ,ADnFC,AfwBT,AGFA,ATPS,AwBbJ;AFkFG,AhB3DR,AGFA,Qa6Dc,qBAAqB,GAAG,KAAK,qBAAL,IAA8B,EAA5D,CAHJ,CAKI;ADpFA,AfwBR,AGFA,ATRQP,AwBZJ,IxBYIA,EwBZAsF,GHFK,IGEE,CxBYG,EwBZAd,CxBYG,CAAC,CAAd,KwBZkB,CAACC,IHFnB,CAA0B,OAAO,CAAC,CGExB,CAAwB,OAAxB,CAAd,EHFI,EAAgD,yCAAhD;ACqFA,ADpFH,AfwBL,AGFA,ATRQnE,GqBxBI,CrBwBJA,GAAG,CsBsEC,EtBtEET,KAAK,CAACK,MAAZ,OsBsEyB,CAAC,MAAtB,KAAiC,SAArC,EAAgD;AAC5C,AhB5DZ,AGFA,ATRK,AwBbD,OAAK,MAAMqF,MAAX,IAAqB5C,OAArB,EAA6B;AFoFrB,ADpFA,AfwBZ,AGFA,AerBQ,EHDI,ICoFA,EEnFA6C,OAAO,EHDP,CAAA,AGCUb,SFmFW,ADpFrB,CCoFsB,ADpFtB,EGCsB,CAACkB,GFmFvB,GAA+B,CEnFrB,CAAqBN,GFmFK,GEnF1B,CAAd,EFmFI,ADpFA,GAAR,UAA6B,KAA7B,EAAyC,YAAzC,EAA6D;ACqFxD,ADpFD,AfwBR,AGFA,ATTIxF,EAAAA,GsB8DA,CAWI,EDtFI,MrBaI,CqBbG,ErBaA,GqBbP,CrBaR,IqBbyB,QAAjB,IAA6B,KAAK,KAAK,EAA3C,EAA+C;AAC3C,AfwBZ,AGFA,ATTID,AwBbI,ExBaJA,MwBbQ0F,ExBaA,EqBbM,CrBaH,EwBbI,CHAG,ErBalB,CwBbmB,EHAL,CAAU,CGApB,EAAoB,SHAV,CAAN;AACH,AfwBT,AGFA,ATTI7F,AwBd0B,ExBc1BA,eAAe,CAACU,OAAD,CAAf;AsBwEI,ADpFH,AfwBL,AGFA,ATTC,AwBdW,GHHA,KCwFA,CAAC,KAAK,GAAV,EAAe;AACX,AhB5DZ,AGFA,AevBS,YFqFS,IAAI,KAAJ,CAAU,0FAAV,CAAN;AACH,ADrFT,AfyBA,AGFA,ATTAxB,OAAO,CAAC2B,CqBdR,OrBcA,GAAmB,KqBdnB,KrBc6Bf,GAAV,EAAe;AqBzHlC,AfqIA,AGFA,ATTI,AwBfIgG,CH3GR,EAAA,CG2GQA,ExBeAhF,IAAI,EwBfI,CxBeD,EwBfI6E,ExBeA5E,KAAJ,AwBfW,CxBeDC,AwBfE+E,SxBeO,CAACxF,GwBfhB,CAAuB,ExBejB,EwBfoBqF,CxBeD,CAA7B,CAAX,GwBfgD,EAAjC,CAAX;AFsFA,AhB3DR,AGFA,Qa6Dc,UAAU,GAAG,IAAI,8BAAJ,CAAmB,KAAK,GAAxB,EAA6B,qBAA7B,CAAnB;AAEA,AhB5DR,AGFA,ATVI,AwBfI,MxBeA5E,EwBfI8E,GFuFG,ItBxEE,CAACvF,AwBfE,IAAI,ExBehB,EwBfA,CxBemB,CAAvB,AwBfyB,ExBeC,YsBwED,MAAd,CACH,UADG,EAEH,KAAK,MAAL,IAAe,oBAAW,QAFvB,EAGH,KAAK,QAAL,IAAiB,IAAI,gCAAJ,EAHd,EAIH,KAAK,eAJF,CAAP;AAKH,AhBhEL,AGFA,ATVQ,AwBfIuF,GFqED,GErECA,GxBeC,IAAI7E,CAAC,AwBfE,GxBeC,AwBfE4D,CxBef,EAAgB5D,CAAC,GAAGD,CwBfG,CAACuE,OxBeK,CAAChF,KwBff,CxBef,AwBfsC,ExBeAU,CAAC,CwBfxB,CxBef,AwBfI,ExBeuC;AManD,AGFA,ATVYH,AwBfAgF,MxBeAhF,AwBfAgF,IxBeI,CAAC7E,CAAC,EwBfE,CxBeC,AwBfAwE,CxBeL,CAAJ,GAAczE,OwBfd,CAAsB,CxBeC,CAACC,CAAD,CAAvB,AwBfA,EAA4B2E,MAA5B;AF2FZ,AhB/DA,AGFA,ATVS,AwBfGD,MAAAA,GF0FZ,IE1FmB,CAACH,WAAR,CAAoBM,GF0FhC,KE1FY;AFlFZ,Ab4GA,ATVK,AwBfI,CFnFT,EAAA,EE+EQ,MAKI;AfyBZ,AexBY,UAAIA,QAAQ,CAACT,SAAT,IAAsB,IAA1B,EAA+B;AfyB3C,ATXInF,AwBbY4F,ExBaZ5F,KAAK,CAACgB,AwBbM4E,IxBaZ,CAAW,GwBbS,CxBaL3E,AwBbMkE,IxBaV,CAASvF,GAAT,CwBbC,CxBaagB,EwBbS,ExBavB,AwBbC,CxBaZ;ASYJ,AexBa;AFuFb,Ab9DA,ATZI,AwBZK,MxBYDZ,GsB0ER,EtB1Ea,CAACK,KsB0Ed,CAAkB,AtB1EV,KAAiB,CsB0EzB,AtB1EQ,EsB0EqB,EtB1EC,CAACJ,QAA3B,EAAqC;AajIzC,AS4MI,Ab9DJ,ATZQN,IalIF,AbkIEA,KsB0EG,KtB1EO,CsB0ED,AtB1EEY,CsB0ED,GAAP,KAAe,CT5MC,AbkIT,CAAV,EalI8B,KAAK,AS4MvC,IT5MJ;AACA,AS4MC,Ab9DD,ATZK,AwBbGqF,IXrHF,AWqHEA,QAAQ,CAACL,YAAT,CAAsB,KXrHG,EWqHzB,CXrHoC,CWqHL,IXrHU,IAAjD,GWqHQ;AXnHR,AJ6IA,ATZC,AwBbOK,CxBER,EAaA,CwBfQA,QAAQ,CAACN,WAAT,CAAqBX,QAAQ,CAACO,cAAT,CAAyB,GAAEnC,SAAS,CAAC2C,MAAD,CAAS,KAAIC,OAAQ,KAAzD,CAArB;Af0BR,AezBK;AXpHL,AJ8IA,AezBC,IXrHW,kBAAZ;AJ+IA,ATZA,SAAS1E,IAAT,CAAcrB,GAAd,EAAmBsB,KAAnB,EAA0B;AkBzI1B,ACAA,AVsJA,ATZI,AwBbJ,OxBaStB,GAAL,GAAWA,EwBbAqG,CxBaX,GwBbJ,GAAsB;AXvHtB,AKLA,ACAA,AVsJA,ATZI,AwBbA,CXxHJ,GKLA,ACAA,GnB0IS/E,IarIG,CbqIR,GAAaA,KAAb,EmB1IJ,GAAA,INKA,AKLA,ELK8B,CKL9B,KCAA,ODAA;ALMI,AKQA,ACFA,AV2IJ,ATZC,AwBbGuC,EAAAA,KAAK,INhHL,ACFA,kBAAA,CAAY,MDEZ,CAAY,GCFZ,EAAoC,KDEpC,EAAoC,WCFpC,EAAsG,KDEtG,CCFA,CDEsG,CCD1F,KDCZ,EACY,UCHZ,EACwC,KDCxC,EACwC,aCHxC,EACoF,ODCpF,ACFA,EDGwF,ACFmB,eDC3G,EACkH,OADlH,EACyI;ALRzI,AKSI,ACFA,AV0IR,AexBIqC,EXzHA,AWyHAA,ONhHS,ACFA,MAAL,GAAc,AKkHF,CNhHZ,CLTJ,CAAA,CKSsB,ECFlB,QDEA,GLTJ,CAAA,GAAA,cAAA;AACA,AIRJ,ACiBQ,ACFA,AV0IR,ATbA7E,AwBVC,IxBUG,CAACE,IkB3HQ,ACFA,KnB6Hb,CAAeT,GAAf,GAAqB,MkB3Hb,ACFA,GDE0B,ACFA,GnB6HD,ekB3HzB,ACFA;ADGA,ACFA,AV0IR,ATbI,OAAKd,EkB3HI,ACFA,CnB6HT,CAASwB,IkB3HL,ClB2HJ,CAAe,CkB3HG,GlB2HlB,EAAqB,CkB3HjB,ECFA,EnB6HsBF,CmB7HG,InB6H7B,amB7HI;ANPJ,AIRJ,ACkBQ,AjBpBR,AkBkBQ,AV0IR,ATbC,AwBVD,CxBQA,CanII,OKUS,ACFA,AKmHJgF,QAAT,GX3HI,AW2He,CX3Hf,KKUI,GAAyB,ACFzB,GAA4B,CNRhC,CAAA,GAAA,SKUI,GLVJ,GMQI;ANPJ,AIRJ,ACkBQ,ACFA,AV0IR,AevBI,IPnIJ,EOmIQC,GNjHK,ACFA,QKmHM,ELnHX,CKmHc,ELnHI,EFhB1B,ACkBQ,GDlBR,ACkB+B,KCFvB,OFhBR,GCkBQ,cMiHJ,CADe,CAEf;AJ1GJ,AHJI,ACHI,AjBrBR,AkBoBQ,AVyIR,ATdAnH,IoBnHM,GpBmHC,CAACqC,CkB1HK,ACDA,EFIT,EjBuHJ,GAAgB,CoBnHG,CDRX,ECQc,CDRG,ECQzB,EDRQ,AnB2HR,MiBvHI,ACHI,CDGQ,ECHsB,QDGlC,EAAoC,YCHhC,MDGJ,EAAsG,MAAtG,EAAuH,iBAAvH,EAAmJ,eAAnJ,EAA6K,OAA7K,EAAoM;AGMxM,APnBI,AIcI,ACHA,AjBrBD,AkBoBC,AVyIR,ATbArC,AwBVIoH,EX5HA,AW4HAA,CAAC,CvBtIQ,AuBsIPC,GxBUC,CAAC/E,AwBVJ,CP9GS,ACHA,ACDA,AKkHF6E,EvBtIS,ADgJpB,GChJ+B,ADgJjB,EkB3HN,ACDA,AnB4HR,GiBxHQ,ACHe,ACDA,CNVnB,AW4HA,CX5HA,AZVG,CgBwBmB,AO8GF,CLlHhB,GDCA,MLXJ,AIcI,CJdJ,GAAA,WAAA;AACA,AIcI,ACFA,AjBrBR,AkBmBQ,AVyIR,ATbAnH,AwBVIsH,IAAAA,GxBUG,CAAC/E,AwBVA,CP9GK,ACFA,ACFA,CKkHH,ExBUV,GAAe,AwBXS,CLjHhB,CnB4HR,CkB1HQ,CCFe,EDEE,IAAjB,CCFA,CFIA,GAA0B,kBAA1B;AGKR,AHJQ,ACFA,ACFH,AVyIL,ATbAvC,AwBVIuH,IJ1GJ,AI0GIA,GxBUG,CAAC/E,AwBVA,CP9GK,ACFA,CMgHH,KP9GF,AjBwHR,CkB1HQ,EEMR,AHJsB,AjBwHJ,CkB1HK,ClB0HvB,CoBpHA,CpBoHsB,CkB1Hd,CDEA,SGIR;AAwBI,AP1CA,AIeI,ACFH,ATuIL,AevBMgF,EX7HF,IW6HEA,GP9GO,EG2BT,IImFW,EAAE,CP9GT,EJfJ,CAAA,AIeqB,IG2BrB,AH3ByB,CG2Bb,GAAZ,EAAyB,KP1CzB,CAAA,CO0CA,EAA6D,AP1C7D,eAAA,EIeqB,EAAjB;AG2BqB,APzCzB,AIeI,AEJS,AVyIjB,ATdAxH,AwBXU,ELhHO,KnB2HV,CoB7FsB,ApB6FrByC,CiBvHK,MG0BgB,CpB6F7B,GAAmB,CoB7FU,AD9BZ,CAAA,AnB2HjB,IoB7F6B,CAAA,AH1BrB,EG0BqB,CH1BI,CEJhB,CAAA,OAAA,GAAb,KFII,KEJiB,GAArB,EAAkC,cAAlC,EAAgE;AC8BvC,AHzBrB,ACFS,AjBxBjB,AQ+JA,Ae5BwB,EN3GP,CM2Gb,CvBnIJ,EmBmD6B,CnBnD7B,EgB0Ba,ChB1Bb,GmBmD6B,GAAA,EAAA,InBnD7B,EgB0BQ,GAAuB,ACFd,CAAA,SAAA,CAAA,IDET,GCFS,GAAb,UAAqB,GAArB,EAAkC,cAAlC,EAAgE;AE2BH,APxC7D,AIgBI,AhB3BR,AQgKA,ATdA,AwBTC,EX9HG,OIgBS,AjBuHJC,EClJT,EDkJA,CClJA,EgB2BQ,AjBuHQ,CClJhB,ADkJkB,CChIjB,CgBSsB,CJhBnB,CAAA,KIgBI,SJhBJ,CAAA,GAAA,cAAA;AACH,AIiBO,ARoIR,CIhKA,EAAY,MI4BC,OAAL,GAAe,EJ5BO,GI4BtB,+BJ5BI,kBAAkB,GAAA,EAAA,CAA9B;AOqCY,APxBZ,AIiBQ,AhB9BU,AQiKlB,ATdA1C,AwBTAyH,EvB1IkB,GAAA,CAAA,AuB0IZ,CxBSC,AwBTAC,CxBSC/E,CoB9GI,AHPC,CjBqHb,GAAaD,AwBTb,GvB1IkB,AuB0IF,CxBShB,CiBrHQ,ChB9BJ,EgB8BqB,IAAjB,GGOI,AIqGe,CvB1IE,EmBqC0C,CnBrCnE,EAAmC,IAAnC,EAA+C,GmBqCoB,CAAQ,CAAnE;AHNJ,AhB9BA,AQiKR,ATdA1C,AwBTI,MAAI2H,CxBSD,CCnJK,ADmJJ/E,CiBrHK,AO4GF,EvB1II,CuB0ID+C,IP5GN,AhB9BY,GgB8BG,AjBqHvB,CCnJY,AuB0IU,CAACC,CxBSDlD,CiBrHd,ChB9BoB,EDmJ5B,CCnJ+B,KAAK,GuB0ItB,CAAwB,KvB1I9B,EAAuC,MuB0IjC,CAAV;AJjGgB,AHVf,AhB9BO,AQiKZ,ATdA1C,AwBTI2H,EAAAA,GAAG,CAACC,CxBSD,CAAC/E,CoB3GY,GnBxCF,ADmJlB,CwBTI,ExBSWH,CCnJO,AuB0IJwE,CJlGE,EpB2GpB,CoB3GoC,CnBxClB,CmBwCE,AnBxCQ,EuB0IxB,QvB1IgC,IAAR,GAAY,yBAAtB,CAAN;AmB8CS,APlCrB,AZXS,AQiKT,ATdAlH,AwBTIiH,EAAAA,EX/HJ,EW+HQ,CxBSD,CAACnE,CoBtGa,EpBsGrB,GAAcJ,GaxId,CbwIA,EaxIA,KOkCqB,GAA2B,CAA3B,GPlCrB;AA4DI,AI3DA,AhBXC,AQiKL,ATdA1C,AwBTC,CAJD,CP3HI,ChBfc,IDuJX,CiBxIH,AjBwII+C,CiBxIJ,EJ2DA,Wb6EJ,CiBxII,CJ2DA,AI3DW,CJ2DS,Ab6ECL,IAAzB,Ma7EI,EAA6C,MAA7C,CI3DW,CJ2DmD,AI3DnD,QJ2DX,CI3DA,CJ2DsF,CI3D3E,aAAX,CJ2DA,CI3DsB,CJ2D8F;AX/ExH,AkBwDQ,APuBJ,AI5DA,AEOI,AViJR,ATdA1C,IE7JA,GF6JO,Ca9EH,Ab8EIgD,Ka9EJ,EOvBQ,CPuBR,GX/EJ,CW+EI,EX/EJ,CiB0BY,EC8BJ,CAAe,ApBqGvB,GoBrGQ,ApBqGqBN,EoBrGD,ClBxD5B,CiB0BQ,AnBmIR,CmBnIuB,EC8Bf,CD9BA,CjB1BR,CiB0B4B,CjB1B5B,IiB0BQ;AjB1B6B,AgB6B7B,AjBnBU,AQkKlB,ATdA1C,EE9JqC,ADUnB,GAAA,CAAA,CDoJX,CAACiD,CiB1IJ,EfpBiC,CAAA,AF8JrC,GAAeP,CCpJG,GAAd,ADoJJ,EiB1II,ECSQ,IhB7ByB,EAAA,ADUR,GAAzB,CiBmBI,CAAe,AjBnBmB,CCVL,CAAA,CgB6B7B,CjBnBJ,CiBmBwB,CjBnB0B,IiBmB9C;AE6BA,APbI,AIxBJ,AhBVA,AkBgBA,AVkJR,ATdA1C,OAAO,CCpJK,ADoJJkD,CoBrGK,APbD,AZlCC,GAAD,CgBUG,EGqCP,CnB/CY,EmB+CE,AHrCF,ChBVG,CAAC,EYkCZ,CMlBA,AnBoIZ,EalHoC,AZlChB,CYkCR,AZlCkB,ADoJJR,CiB1IX,CAAe,EjB0I9B,GCpJoB,AkBgBZ,ClBhBA,AkBgBe,CFNf,ChBVgC,OmB+CL,KD/B3B,EC+BkC,AD/BH,CC+BI,MAArB,CAAd,QD/BA;AjBpBJ,AkBoDI,AHrCH,ACQG,AjBlBI,AQkKZ,ATdA1C,KiB5I0B,EjB4InB,CAACmD,CoBrGK,ElBpDT,CDKc,ImB+CV,AnB/Cc,GmB+CC,EnB/CL,CAAU,CiBkBhB,CE6BgB,ElBpDxB,CAAmB,AFyJvB,GAA8BT,ECpJM,CCLhC,AgBuBI,CE6Be,AF7BA,AlBkIvB,CEzJsC,AkBoDC,CnB/CX,EmB+CL,CAAf,AnB/CgC,SiBkBhC,EAA+B,gBAA/B,MjBlBU,CAAN;ACLR,AkBsDI,APmBA,AZnEC,AkBeD,AVmJR,IWlHQ,IlBtDJ,GkBsDW,ElBtDX,CkBsDc,CPmBN,CXxEJ,IeYkB,CGyCD,ClBrDjB,CAAA,AiBoBI,ECiCiB,APmBrB,CAAe,CXxEf,AkBqDA,ADjCA,CjBpBA,AiBoBS,IjBpBT,IWwEA,CXxEO,CWwEoB,GXzE/B,CiBqBI,EAAyB,MNoDzB,oBMpDA,EAAyC,gBAAzC;ACkCA,AF/BA,AjBjBH,AQkKL,ATdA1C,GCxJkB,CmBoDV,GpBoGD,CAACoD,GoBpGO,CAAC,KpBoGhB,GAAoB,GkBnIR,IAAJ,CAAS,CE+BT,CpBoGsBC,EoBpGM,EpBoGhB,EAAgB,GoBpGO,CAAC,EF/BpC,EAAyB,aE+BG,KAA8B,QF/B1D,CE+B4B,CF/Ba,EE+B6B,KAA1C,GAAkD,MF/B9E,CE+BqF,CAAC,iBAAtF;AlBrDA,AWwEA,AI7DkB,AESlB,AVoJR,ATfsC,GiB9IlC,CfXI,KAAI,AFyJiC,CEzJhC,CFyJyB,IajF1B,CXxEJ,CiBoBK,EjBpBS,IiBoBd,CAAY,CjBpBZ,AWwEA,CAAe,CMpDf,CAAgB,INoDhB,EAAuB,QAAvB,IMpDyB,KAAzB,EAAgC,oCAAhC;ACkCA,AF9BA,AjBjBU,AQkKlB,AThBiD,CAAjD,CClJkB,GAAA,CAAA,EmB+CN,EnB/CM,GAAd,EmB+Ce,EF9BN,ACFD,KCgCc,ADhCT,CCgCU,AF9BnB,AjBjBe,CiBiBH,EjBjBhB,CiBiBI,CAAgB,AjBjBS,MAA7B,EAA0C,EmB+ClC,EnB/CR,EAAsD,AkBe9C,CCgCmC,GF9Bd,GCFrB,CAAA,CDEJ,CE8BI,CF9B4B,GE8BoB,OAAO,CAAC,eAAR,GF9BpD,EE8BgF,CF5BhF,QE4BA,EAA2F;AlBpD3F,AkBqDI,APkBJ,AI3CS,AhBtBT,AkBcI,AVoJZ,EQ5IiB,IGyBL,ElBrDA,KkBqDO,CAAC,ClBrDD,AWuEP,KXvEA,Ee4BK,CAAA,Ef5BY,AWuErB,CAAe,GOlBX,GAA0B,AHzBrB,CAAA,CJ2CT,EXvEA,AWuEyB,EXvES,CkBqDG,CAAC,AHzB7B,GAAb,GJ2CI,OI3CiB,EGyBa,CHzBlC,EAAkC,EGyB4B,SAA5B,GAAwC,AHzB1E,EAAgE,EGyB9B,GAA+C,OAAO,CAAC,eAAjF;AlBpDA,AkBqDH,AF7BD,AjBlBA,AkBaI,AVqJZ,AThBArD,KoBrGQ,EpBqGD,CClJK,ADkJJsD,EClJM,CmB+CC,EnB/CE,CkBaL,CAAA,AnBqIZ,CmBrIY,CDKC,AjBlBQ,CDkJH,EkBhIV,GAAW,AjBlBP,CAAJ,EiBkBA,AjBlBsB,EDkJFD,IAAV,EAAgB;AEvJtB,AkBqDA,APkBJ,AZjEI,AkBac,AVqJ1B,AThBI,QAAM,CajFG,GOlBK,AnB/CA,ADkJJ/C,IoBnGQ,AnB/CA,CiBmBV,AlB+HF,CAAU,CmBrIM,CAAA,CCkCR,AnB/CA,CmB+CU,AF5BX,AjBnBW,aAAW,CYiE/B,GAAmC,AZjEf,GiBmBhB,AjBnB+B,OiBmB/B,CAAA,EjBnBgB,ADkJlB,CAAN,EClJkD,GAA1B,EYiEpB,CZjEiD,GAAvC,CAAN,sBmB+CM,CAAN;AlBpDA,AkBqDH,APkBD,AK/CI,AjBlBH,AkBYiB,AVsJ1B,AThBC,CAFD,Qa/Ea,CXvEK,WAAW,GAAG,OAAO,SWuE/B,GAAuC,OXvEf,KAA+B,UAA/B,GAA4C,EWuEpE,qBXvEwB,GAAsE,OAA1F,CAH8B,CAK9B;AWuEJ,AKjDI,AjBjBP,AkBWqB,AVuJ1B,GRvKkB,MYuEL,KKjDD,ACNoB,CNuDxB,AKjDI,CAAA,ELiDU,CMvDe,KNuD7B,aMvDwB,EAAN,CAAA;AjBfd,AkBoDJ,APmBA,AKjDkB,ATiJ1B,AThBAN,MEvJY,CFuJL,CoBnGK,ApBmGJuD,CahFK,EXvEG,AFuJhB,CEvJiB,EFuJH,CEvJF,EWuEJ,CXvEe,CgBsBG,CLiDF,AKjDE,GhBtBE,AkBoDD,GAAQ,ApBmGT,EahFlB,EOnBA,IlBpD+B,CAAC,cAAD,CAAZ,CAA8B,SAAlC,GAAX;AACA,AkBoDJ,APmBA,AKlDkB,AjBjB1B,AQmKA,ATjB4B,MEtJhB,EkBoDA,CPmBC,AZnEb,ADkJmC,EEtJnB,CAAC,ADIjB,ADkJ4B,Oa/EpB,EXvEI,CWuEc,EXvEG,CkBoDA,GAAQ,IAA7B,APmBA,GXvEgC,CAAC,YAAD,CAA5B,CAP8B,CAS9B;AACA,AWqEJ,AIlDA,ACDkB,AjBnC1B,AkB4BkB,AV0JlB,ATlBwC,CCpKxC,ADoKA,ECpKA,MYsFa,GM1DK,EDOc,GCPT,EDOc,CCPX,EAAA,CFQd,AERc,CN0DlB,GAAuB,AM1DL,EAAR,IFQV,CAAe,GAAf,ACDwB,EDCJ,ACDF,CAAA,ELmDlB,EIlDA;AGgCA,APmBA,AJgGR,QWnHY,CPmBC,eOnBQ,EPmBb,GAAyB,COnBrB,GPmByB,COnBN,OAAO,OAAP,KAAmB,WAA1C,EAAuD,GPmB9B,EAAzB;AXrEI,AkBmDA,AHhCJ,AERI,AV2JZ,ATnBAvD,MEnJY,CFmJL,CAACwD,GEnJQ,CAAC,CFmJjB,GmBxIgB,AnBwIA,KEnJJ,AiBWA,EFQA,AERW,CjBXM,EFmJHC,GAAV,EAAe,EiBhIvB,CAAe,CfnBiB,CAAC,YemBjC,EfnBgC,AemBD,CfnBV,CAA4B,KAAI,CAAC,QemBtD,CfnBqB,EAA4C,KAAI,CAAC,GAAjD,CAAjB,CAX8B,CAa9B;AkBkDA,APmBJ,AKtDU,ACLF,AV2JhB,ATnBI,QAAM,Ca7EG,GKtDK,AlBmIJnD,EmBxIE,GDKO,ACLJ,AnBwIT,CAAU,Ca7EZ,CAAgB,AKtDE,CCLH,CDKG,ACLF,CDKE,ECLC,CAAC,CDKF,ELsDlB,AKtDU,GLsDkB,CM3DZ,CAAY,GAAZ,IAAmB,CN2DN,AM3Db,GAAuB,CN2DX,EAAU,AM3DtB,EnBwId,CmBxI2C,AnBwIjD,GmBxImB,KAAqC,kBAAgB,kBAAkB,CAAC,KAAD,CAAvE,CAAP;AjBTJ,AkBkDA,APkBuC,AInD3C,AhBlBR,AkBWa,AV2Jb,ATnBC,CAFD,KEhJY,IkBkDM,ClBlDF,CAAC,CWoEkC,KAAI,CAAC,EOlB3B,EHjCjB,CGiCoB,GHjCxB,CAAS,GfjBL,AkBkD2B,GlBlDA,IWoEY,CAAyB,GInDpE,CJmD2C,CAAA,AInDlB,CfjBiB,CAAC,IkBkDnB,KAA+B,SlBlDb,CAAtC,AkBkDoB,GAA4C,EHjCpE,EAAyC,gBAAzC,GGiCwB,GAAsE,OAA1F;AlBjDH,AkBkDG,APiBqE,AKrDrE,AjBfZ,AQsKA,IRtKA,CCdQ,AWkFA,COjBI,KlBlDG,CDDf,GAAA,CiBegB,KEoCW,AFpCf,EAAW,CEoCO,GnBnD9B,QmBmDyC,CAAC,IAAD,CAA7B;AlBjDA,AkBkDA,AHjCJ,ACHQ,AjBhBhB,AQuKA,ATpBAN,MEjJY,AkBkDA,CpB+FL,CAAC0D,GEjJQ,ADFhB,CCEiB,CFiJjB,CkBnIgB,ElBmIA,CiBhIH,ACHM,EjBhBnB,CgBmBQ,CfjBI,AgBcW,CAAC,AjBhBxB,CmBoD6B,AHjCV,AhBPlB,CCV4B,CgBcF,CEoCK,AHjCxB,ACHoB,ElBmID,CEjJO,CAAC,GgBcX,ChBdK,AgBcO,ChBdI,EkBkDG,AFpCnB,CEoCoB,ClBlDf,CAAjB,CgBc+B,CAAnB,GAAuB,GAAvB,GEoCmB,AFpCU,CEoCzC,EFpCW,KAAqC,kBAAgB,kBAAkB,CAAC,KAAD,CAAvE,CAAP;AhBbJ,AkBkDH,APgBD,AIhDA,ACJK,ATuJb,ATrB6B,MEhJjB,GWkEC,Ab8EuB,CAAP,CEhJb,CAAC,KekBJ,EJgDL,CAAgB,GIhDhB,CAAY,GJgDZ,AIhDA,CAAgB,EJgDU,CXlEtB,GAA2B,MWkEJ,KAAD,CIhDD,CJgDe,EXlEpC,EekBJ,EAAgC,qCAAhC,GAEA;AfnBC,AWiE4C,AZpEjD,AQwKJ,ATtBwC,CAAxC,CClJI,MAAA,CAAA,IYoEiD,KAAI,CAAC,IZpEtD,CAAkB,QAAlB,EAAkB,CYoE+B,CAAsB,KAAtB,CAAA,GZpEjD,EAA2B;AmBsDvB,APcyE,AI7CzE,AEXA,AV6JR,KIrGQ,GOdI,CAAC,AnBtDT,OgBuBQ,GEXJ,CAAA,ClBZJ,ImBsDkB,KH/BI,CG+Bd,IAAoB,AH/BD,OG+BQ,SAAP,KAAqB,MH/BP,KG+BlC,CH/BA,GG+BwD,CAAC,AH9BxD,OG8B+D,AH9BxD,CG8ByD,SAArE,EAAgF,EH9B3E,KAA0B,WAA1B,IAAyC,OAAO,IAAI,cAAJ,GAAqB,YAA5B,KAA6C,QAD3F,EACsG;AG+BlG,AH9BA,AhBxBJ,AkBWA,AV8JR,MWnHY,OAAO,AnBtDJ,CmBsDK,MH9BF,AhBxBI,GmBsDV,CH9BU,EG8BU,AnBtDjB,GgBwBG,CAAU,ChBxBK,ImBsDrB,InBtDJ,mFgBwBU,CAAN;AfrBP,AkBoDI,APcD,AI5CC,AhBxBJ,AkBUG,AV+JR,KWrHQ,AnBtDuB,IYsElB,EOdE,GD5CA,CC4CI,GPcX,AM1DW,GN0DM,EAAjB,EM1DO,CAAkB,KC4CL,KD5CM,CC4Cf,IAAmB,CAAC,CD5CN,EAAU,IC4CG,CAAC,CD5Cd,EAAgB,MC4ClC,EAA2C;AlBlDtD,AkBmDQ,APcJ,AKpDA,ACNI,AV+JZ,SIrGa,COdG,ID5CJ,EN0DJ,CM1DO,EN0DQ,AKpDf,CAAA,AjBnBuB,AkBab,CN0DV,EM1Da,CAAC,CC4CV,EAAqB,ID5Cf,CAAY,OAAZ,EAAqB,IAArB,CAAN;AC6CI,APcR,AI5CM,ACTN,ACLI,AV+JZ,QWnHgB,CPcH,GI5CC,EAAA,CG8BS,CAAC,CH9BM,CEdd,MN0DR,COdQ,EPce,AM1DnB,CC4CwB,CPc5B,cOdQ,MH9BF,EAAC,IAAI,GAAA,EAAA,CAAA,CAAA,CAAL,EAAO,KAAK,GAAA,EAAA,CAAA,CAAA,CAAZ;AG+BD,APcL,AI5CM,ACVN,AjBnBuB,AQ8K/B,GR9KI,MYyES,GI5CC,ECVC,IAAI,CDUE,GAAA,GCVN,CAAkB,ILsDzB,AI5Ca,EAAA,CJ4CgB,CI5ChB,CJ4Cb,CKtD0B,CDUb,EAAA,EAAA,EAAA,ACVY,CDUN,CCVgB,GDUtB,CAAA,ECVY,CDUC,CCVe,IDU5B,EAAkB,EAAlB,GAAuB,KAAK,OAA5B,CAAP;AftBG,AkBqDR,APcD,AI3CM,ACXF,AjBhBR,AkBWQ,AVgKZ,EPxKiB,ADHb,MAAA,CYsES,AZtET,GgB2BU,KfxBG,CAAA,AgBaD,ACLE,KFgBO,AhB3BrB,CiBgBkB,AjBhBA,CkBWG,CFgBgB,CfxBxB,AgBaQ,ChBbR,AiBQW,CN2DpB,GXnES,AWmEmB,AKtDxB,AjBhBR,CkBW4B,CN2DxB,AZtEc,AkBWW,CjBR7B,SiBQwB,CjBRN,AiBQsB,ElBXxC,EAA6B,GCG7B,EAAsC,MiBQd,CAAgC,GAAhC,CAAhB;AN4DJ,AI3CI,ARgJZ,SIrGa,AZvET,KgB4BQ,OJ2CJ,AZvEJ,GYuEwB,CAApB,AI3Ce,EAAE,KAAK,SAAL,CAAe,MADC;AG+BjC,APcA,AI3CI,ACZA,AjBhBJ,AkBWI,AViKZ,QWnHY,CAAC,APcA,IZvEE,CgB4BH,ICZI,ACLA,ElBXM,CgB4BH,EAAA,ChB5BJ,AkBWO,CC8CA,ED9CG,ElBXM,CgB0BU,CG+B7B,CFzCkB,ACLlB,EN4DJ,COdwB,EPcS,AKvDN,AjBhBpB,IAA4B,CmByDJ,APc/B,WOdwB,KAAuB,EnBzDO,IiBgBZ,AjBhB1C,IiBgBI,CEyCA,CFzC4C,GEyCc,CAAC,OAAO,CAAC,WAAvE,EAAoF;AAChF,APcJ,AI3CI,ACZI,AjBhBX,AQ4KL,KR9KiC,CmB2DrB,GPcC,IOdM,CAAC,AH7BR,ECZI,KDYG,CCZG,CDYD,ACZE,CLuDf,COdI,EPcmB,AKvDJ,CEyCO,CHhCO,GCTlB,CAAU,MEyCrB,MPcqC,CAAC,YAA1C,kDKvDe,CAAD,CAAN;AE0CP,APcD,AI3CI,ACZI,ACLJ,AViKZ,KWrHQ,IPgBK,EOdE,GH7BH,CG6BO,GD9CH,ElBdiB,MY0EzB,GAAyB,AI3CN,EG6BC,AH7BC,GJ2CrB,AM5DiB,EFiBS,CG6Bf,GD9CP,CC8C0B,CAAC,AD9CN,OC8Ca,CAAC,WAAhC,EAA6C;AAChD,APeJ,AIjDiC,ACP5B,ACLG,AViKhB,SIpGa,COfG,GHlCF,IGkCS,GD9CD,MN6Dd,CM7DqB,EN6DI,CM7DD,EAAhB,EC8CA,APesB,KOfO,GPeZ,CAAc,OOfnC,EAA8C,GPezB,CAA2B;AOd5C,APc8C,AZ5E7B,AQiLjC,GRjLI,GY4E0D,EOd9C,EPckD,EAAE,GOd7C,CAAC,WAAR,GAAsB,QPc0C,SOdhE;AACH,APa+C,AI1CpD,ACZI,AjBlBR,AkBYkB,AVkKtB,ER9KI,GYwE6B,CAAzB,EZxEJ,CAAA,OgB8BQ,ECZI,ECNM,EAAA,ClBZlB,CAAkB,CkBYA,IDMV,CDYc,EhB9BtB,EAAkB,CgB8BS,OhB9B3B,EAAwB,akBYN,KFkBwB,MAAtC,EAA8C;AG8B7C,APaJ,AI1CO,AEnBU,AVmKtB,SR/KI,KgB+BQ,MEnBW,ClBZnB,IgB+BmB,CAAC,AEnBD,GAAA,EAAA,CAAA,CAAA,CAAD,IFmBV,GAA2B,aAA3B;Af/BJ,AWoCJ,AIJK,ACbG,AjBlBJ,AkBWc,AVoKtB,aR/Ke,CAAC,IiBkBA,CjBlBK,CkBWQ,KAAA,GlBXd,AkBWc,EAAA,CAAA,ClBXK,AkBWL,ClBXM,AkBWb,CDOG,IjBlBe,KiBkBxB,IAAsB,EjBlB9B,ciBkBuC,WAAnC,EAAgD;AhBlBpD,AkB6DA,APzBJ,AKjBY,AjBlBX,AQ+KL,KRjL4B,ImB8Df,OlB7DD,AgBmBI,GE0CR,GAAkB,ClB7DP,CAAC,GgBmBO,EE0CM,CAAC,AF1CJ,IAAI,ChBnBtB,IAAuB,AgBmBG,CE0CZ,AF1Ca,IE0CS,ElB7DN,CAAC,CkB6DS,UlB7DjB,CAAoB,GgBmBzB,CAAgC,GhBnBtD,AgBmBsB,EhBnBkC,AgBmBG,gBE0CnB,CAAsB,KAAK,MAA3B,CAAxC;AlB5DI,AkB6DJ,APzBJ,AIJkB,ACd+C,ACPrD,AVqKhB,SWnHa,ODlDG,EDOqD,CDc/C,CfhCJ,AegCI,AhBlCM,GkBaL,CjBXD,AkB6Dd,ADlDgB,GCkDI,GDlDL,CAAP,EDOoE,CCPpD,CDOsD,ICPtE,CDO0E,CAAC,ChBlBzE,EAAN;AACH,AkB4DmB,APxBxB,AILkB,ACd6C,AT+JnE,iBS/J8B,CAAd;AE2CR,APvBJ,AINkB,ACbT,AjBrBe,AkBeZ,AVqKhB,GRpLI,WgBkCwB,CCfhB,IDeqB,CEnBb,CDMD,MCNH,EAAa,IFmBD,EAAN,CAAA;Af7Bd,AkB2DA,AF1CQ,AjBnBhB,AkBaoB,AVqKpB,SWrHa,AnB7Db,OCEY,CAAC,ADFb,CkBaoB,MjBXA,CAAC,AiBWM,CCgDnB,ADhDoB,GCgDK,ElB3DzB,EAAqB,CkB2DrB,ADhDmB,CAAP,GAAoB,KAAG,OAAvB;AjBVR,AkB2DJ,AF1CQ,AjBhChB,AkB0BiB,AVqKjB,CR/LA,EAAA,MmB0Ea,OAAL,CDvDyB,CASjB,CC8CO,ClB3DL,AgBiBI,IhBjBA,EkB2Dd,CF1CqB,EhBjBX,CAAU,AgBiBI,KAAI,CAAC,UAAL,CAAgB,GhBjB9B,CAAN,WgBiBoB,CAAgC,GAAhC,CAAhB;AhBhBP,AkB4DD,AP1BU,AIPJ,ARqJd,EI9IkB,OO0BL,GHjCC,GJOI,CAAA,CIPC,CGiCX,EHjCc,CGiCG,CP1BP,AIPI,CAAA,EGiCd,AP1BJ,EIPkB,EAAR,MJOW,UAArB,EAA8C,MAA9C,EAA+D,QAA/D,EAAuF,eAAvF,EAAqH;AO2BjH,AP1BA,AIPA,ACXQ,ATgKhB,SWpHa,EP1BE,IAAI,CO0BX,CHjCK,EGiCU,CF5CD,GE4Cd,IF5CqB,CLkBd,CAAkB,CKlBe,EAAhC,EDWR,CAAuB,IJOhB,EAA8B,KIPrC,CJOO,CIP6B,CJOS,IIP7C,IJOO,EAAgD,eAAhD,CAAP;AXlCA,AkB6DH,AP1BA,AIJS,ACdE,ACLA,AVqKhB,GIhJkB,SIFJ,If/BF,AgBiBI,ACLA,CjBZH,Ee+BQ,GAAM,CCdJ,ChBjBH,AgBiBI,ChBjBH,Ae+BS,AEnBL,GjBZjB,Ae+BsB,AEnBF,EjBZF,AgBiBV,ECLgB,CFmBL,ACdM,GDcG,CEnBA,CAAC,EFmBG,ACdxB,CDcyB,GAAL,EAAtB,YEnBc,CAA8B,GAA9B,EAAmC,SAAnC,EAA8C;AjBX9D,Ae+BJ,AhBnCR,AkBgBoB,AVqKpB,iBQlJa,CEnBO,EjBZF,Ge+BV,Cf/Bc,Ae+BF,CEnBO,EFmBnB,AEnBmB,CFmBH,Cf/BN,CAAU,KiBYD,CAAA,EAAA,EAAO,MFmBD,Cf/Bf,AiBYS,CjBZf,CiBYkC,EFmBtC,EAAgC,CEnBU,CAAC,OAAxB,6BFmBiD,OAApC,GAA2C,GAA3E;Af9BC,AkB+DQ,APGb,AInCqB,ACfH,AjBpBhB,AkBcoE,AVuK1E,EWlHiB,APGb,MAAA,CAAA,AZtEE,OmBmEW,CAAA,ADrDW,CAAZ,CFqBS,CAAA,ACfH,EAAA,AjBpBhB,CYsEF,AZtE0B,CYsEtB,CKlDc,CE+CL,CAAA,AnBnEX,EAAmC,GmBmExB,GAAb,EPGI,CAAA,KZtEF,EmBmEiB,AnBnEyC,EYsE5D,EAAI,OAAJ,CKlDkB,CLkDT,COHT,EAAkD;APElD,AIlCqB,ACfH,AjBnBlB,AkBgBS,AVqKb,MRrLQ,MAAM,GAAG,EAAb,GiBmBmB,MAAA,GAAA,EAAA,CAAA,CAAA,CAAD;AhBdR,Ae6BW,ACfH,ATmKtB,SIjHI,GXhEU,Ee6BiB,KAAK,CCfP,CLkDzB,IKlDyB,EhBdA,CgBcA,CDeE,Cf7BC,Ae6Be,ACflB,CAAA,CAAA,CDeE,ACfT,ChBdc,Ae6Be,Kf7BV,Ee6BV,EAA6B,WAA7B,CAAN,CAAA,Ef7BO,EAAlB,EAGN;AW8DA,AZrEJ,AkBiBQ,AVqKZ,MRtLQ,OYqEO,KAAK,AMpDJ,ClBjBK,AkBiBJ,ClBjBK,IAAD,CAAjB,EAAyB,CkBiBjB,EAAgB,GNoDpB;AX7DA,AW8DH,AKnDW,AjBlBR,AkBiBQ,AVqKhB,IRtLQ,CYmEK,KZnEC,GAAG,GCOL,AgBWI,OhBXG,AgBWI,ChBXH,AgBWI,MAAD,CAAP,GAAgB,ChBXxB,EAAyB,EgBWjB,CjBlB0B,IAAI,CAAC,UAAvC;ACQI,AewBE,ACZE,ACFA,AVqKhB,YQvJc,EfxBF,EgBYI,ACFA,INiDH,AInCS,CfxBH,CAAC,CewBK,EAAA,AEdA,CFcA,CCZE,CCFC,EFcH,ACZK,EDYhB,AEdkB,CjBVpB,CAAoB,AgBYE,GCFE,CAAC,CDEC,CAAC,ChBZ3B,GAA8B,YAAA,EiBUd,CAA8B,GDE5B,ACFF,CDEkC,ACF9C,GDEc,EAAqC;AhBXnD,AkBwDR,AF7C6D,AjBnB7D,AkBkBK,AVqKb,QRvLY,ImBgEJ,IlBxDQ,EgBWqD,IjBnB7D,EAAoB,EmBgEN,GAAG,ElBxDM,CAAC,CgBWoD,EAAE,EhBXtE,GgBW0E,CAAC,EE6CpD,IAAI,SF7CwB,kBE6CT,MAAlD;AlBvDQ,AWyDH,AIlCL,ACboG,AjBlBhG,AQuLZ,GItHI,GZjEQ,MAAM,ICQF,AeuBJ,AhB/BU,EiBkBsF,GhBVvF,GAAG,AeuBJ,CAAC,ACb8F,EAAA,ChBVvF,KDRS,EgB+BzB,ACbuG,CAAA,EAAA,EDa/E,ACbsF,GDalH,EAAiC,CfvBjB,CgBU2F,ChBVnG,CgBUsH,CjBlBhF,CAAC,GiBkBmF,CAAC,AjBlBrF,CAAhC,GAAsC,GiBkBuD,AjBlBvG;ACSC,AkBwDL,APOJ,AIxCQ,ACduD,AjBjB1D,AkBkBG,AVqKZ,EIhHI,MAAA,CAAA,MXlEQ,EgBYkB,CAAd,ACCA,CFaC,IGiCL,APOR,CAAI,CIxCI,CAAY,CGiChB,CAAS,CHjCL,CAAgB,EEbE,KNqDtB,AMrD2B,CNqD3B,IOPA,EAAyB,GPO7B,CIxCiC,CJwC7B,IIxCI,EAAgC,QJwCxC,CMrD8C,CNqD9B,KOPZ,AD9CI,EC8CqC,AD9CS,gBC8ClD,sBHjCyF,QAAQ,CAAC,UAA9D,GAAwE,GAAxG,EAD6B,CAG7B;AfxBH,AW2DL,AKlDS,AjBjBR,AkBkBW,AVqKhB,GR5LI,MAKO,IAAI,GkBkBC,IlBlBM,IAAP,CkBkBU,CAAC,GlBlBK,OkBkBf,ClBlBL,EAA8B,AkBkBF,aAAvB;AC+CR,AHhCI,AhBhCJ,AkBkBK,AVqKb,IRvLQ,MAAM,GAAG,EkBVgC,CA8BrC,CC4CC,EHhCI,IGgCT,CAAY,GAAZ,CAAgB,CHhCZ,GAAkB,IAAI,IhBhCQ,IAAI,CAAC,CmBgEd,KAAzB,AnBhEA,EmBgEgC,AHhCV,CAAc,QAAQ,CAAC,UAAT,IAAuB,EAArC,EAAyC,QAAQ,CAAC,UGgCK,AHhCvD,CAAlB,0BGgCwF,cAAf,CAA7C,GAA2E,IAA3G;AlBrDI,AesBA,ACfA,ATsKZ,YP7KY,MgBOI,CDeC,EftBI,GAAQ,EesBjB,EftBA,CesBe,KAAf;AGiCJ,AHhCC,ACfO,AjBlBR,AQwLR,QRxLY,CYoER,IIzCI,GGsCI,AF/CI,GDeD,EGgCE,APGb,CZpEI,EAAoB,GiBkBD,CAAC,QE+ChB,CF/CI,GAAwB,CE+CR,SF/CS,CAAD,EAAgB;AhBPhD,AkBsDwB,APIxB,AInCI,ACfQ,AjBlBR,AkBmBA,AVqKZ,MRxLY,MAAM,CYoEH,CMjDH,EjBTA,ADVU,EYoEF,CInCH,GCfO,ChBRL,AiBSE,CjBTD,AiBSE,EFcV,CCfgB,CLkDb,AKlDc,CDeF,CEdf,CjBTJ,AW0D0B,EX1DL,AeuBjB,AhBjCyB,AkBmBN,GNiDQ,CKlDnB,AjBlBE,EiBkBkB,CjBlBC,GAA7B,AkBmBoB,GNiDE,CAAgB,EMjDnB,EAAc,QNiDX,IAAgC,IAAnD,GAA2D,IAAlE;AXzDU,AkBqDV,APKH,AInCI,ACfe,AjBlBf,AkBmBO,AVqKhB,KItHoB,SXxDF,AkBqDiD,ED5CnD,KAAI,CAAC,CjBTM,CgBQC,EhBRE,EiBSd,CAAY,GAAZ,CjBTqB,AiBSL,CjBTM,OAApB,UiBSuB,WAAzB,EAAsC,4BAA0B,GAA1B,GAA6B,GAAnE;AjBRJ,AkBqDA,AF7CgB,AjBlBvB,AQwLL,cP9KY,MWuDQ,COFR,CAAA,AF7CgB,ChBRP,GAAG,CgBQQ,CAAC,MAAL,CAAY,ChBRN,CAAC,CgBQP,CAAgB,UhBRT,QgBQkB,KAAzB,EAAgC,oCAAkC,0BAAc,CAAC,CAAC,IAAhB,EAAsB,KAAI,CAAC,iBAA3B,CAAlC,GAA+E,GAA/G;AhBPZ,AkBoDJ,AH7BJ,AEfQ,AVsKhB,gBP9KgB,AiBQA,CFeH,IEfO,CAAC,IFeb,GAAiB,EfvBM,AiBQf,CjBRgB,EeuBF,AEfG,GjBRjB,CeuBS,CAAU,IEfnB,CFewB,GAAf,EAAoB,WAApB,CAAjB;AG6BI,APEQ,AK9CQ,AjBlBxB,AkBmBY,AVsKhB,GIzHI,MZhEO,MAAP,CmB8De,AD3CH,MDDY,ACCN,CC2CI,CAAC,CD3CF,EDDO,CAAC,CCCjB,CC2CG,CAAe,IAAI,EF5CV,CAAe,CAAC,CE4CV,AF5CW,CE4CD,GF5ChB,sEE4CM,CAAf,CAAP,CAAA;AlBnDI,AkBoDP,APML,AKlDqB,AjBlBxB,AkBmBe,AVsKhB,EIrHI,MAAA,CAAA,OX1DY,AiBSA,KjBTI,AgBKI,ChBLH,AgBQK,CLkDtB,AMjDmB,CNiDf,IX1DQ,CAAY,AgBQK,GhBRjB,CAAgB,CgBQN,EAAc,CLkDhC,CAAA,SAAJ,EAAI,EX1DiC,OAAzB,AW0DZ,EX1D8C,AW0DnC,4BX1DC;AWyDZ,AKhDwB,AjBjB5B,AkBkBa,AVsKb,eU3KY,ODIgB,KAAI,CAAC,KAAL,CAAW,KAAX;AhBRZ,AkBqDR,AX2HR,SIvHI,OXzDY,CkBqDH,IlBrDQ,AWyDjB,GXzDoB,IAAI,IkBqDpB,GAAoB,alBrDJ,EAAR;AACH,AkBoDe,APKpB,AKjDoB,ACEhB,AVsKZ,aIvHe,CM/CH,CjBdsB,EAInB,CWyDK,KM/CC,CAAC,EjBdY,CAAtB,CW6DG,CAAgB,EM/CnB,GAAoB,EN+CjB,IAA2B,EAAlC,EM/CyB,KAAD,EAAa;AjBTpC,AkBmDD,APMH,AKjDoB,AjBlBnB,AkBoBU,AVsKhB,KIzHe,IZjET,WkBoBc,KAAK,ClBpBnB,CAA4B,CkBoBD,GlBpB3B,CkBoBU,ClBpBmC,AkBmBN,CAE7B;AC0CR,AHjCH,ACXgB,AjBlBjB,AQ0LJ,GQ7MiB,GhBmBP,IAAI,GAAG,ImB8DJ,AnB9DQ,UAAJ,CAAe,IAAf,CAAb,CAD+C,CAG/C,EmB4DI,GAA4B,KAAK,aAAL,CAAmB,cAAnB,CAA5B;AACA,APKJ,AKjDa,ACED,AVsKhB,iBSlLgB,EEsDR,CAAA,AD1CY,OAAO,UAAP,KAAsB,WAAtB,IAAqC,KAAK,YAAY,UAA1D,EAAsE;AC0C9E,AHhCU,AhB5Bd,AkBmBgB,AVsKpB,EQ7JkB,IhB5BV,GAAG,GAAG,EAAV,IkBmBgB,IFSF,CAAA,AETO,GAAG,KAAK,CFSf,AETgB,CFShB,IETE,UFSF,GAAd,YAAA;AGgCI,AF1CQ,AjBjBZ,AkBmBa,AVsKjB,ERzLI,IAAI,CAAC,OmB2DK,AnB3DV,CAAa,CiBiBD,CCAA,EC0CG,IDxCI,ElBnBL,EiBiBS,CAAC,AjBjBX,EAAI,KiBiBL,GAAsB,CE0C9B,CAAA,QF1C+B,CAAD,EAAgB;AAClC,AjBjBZ,AkBmBY,AVsKpB,QRzLc,GAAG,GAAG,GAAG,CkBmBH,ElBnBM,EiBiBA,AjBjBN,CkBmBK,ElBnBM,CkBmBH,CDFG,CjBjBX,EiBiBc,ACEF,ClBnBK,EAA7B,CiBiB8B,CCEV,CAAU,GDFJ,CAAU,CAAC,CAAC,IAAF,IAAU,gBAApB,CAAd,SCEQ,CAAR;AlBlBZ,AkBmBS,AVsKjB,IRzLQ,GAAG,IAAI,OAAK,GAAL,GAAW,GAAG,CAAC,QAAJ,CAAa,EAAb,CAAX,GAA2B,GAAlC;ACOe,AkBkDf,AFxCY,AjBhBf,AQyLL,GR5LI,EAL+C,CAU/C,GYgEA,GOVI,EAAA,CAAA,IlBlDe,AkBkDf,APUQ,CX5DO,EW4DnB,AKlDoB,ELkDG,IKlDP,EAAY;AhBVT,AW6Df,AKlDgB,ACGR,AVsKhB,UIvHY,KAAK,CM/CD,CFKJ,GCRY,EDQP,AELK,CAAC,EDHK,CAAC,ECGP,CAAN,CN+CJ,CKlDY,CAAW,GLkDE,EKlDb,KDQZ,OAAA,CAAA,GJ0C2C,CAAC,YAA5C,IAA4D,KAAK,eAAL,KAAyB,kBAAkB,CAAC,YAA5G,EAA0H;AX7D3G,AW8DX,AI3CA,ACPS,AjBfjB,AkBkBS,AVsKb,SRxLW,GAAG,CAAC,CCGc,AW8DX,CMzDN,GCgDA,APSU,CX9DY,AgBUd,AjBbT,CAAW,CAAX,EmBwDM,APSC,AZjEO,CYiEG,CKlDD,CjBfC,CAAC,CCGA,CAAe,IDHnB,GCG0B,ADHb,CCGc,ADHzC,CmBwDC,AnBxDR,ECGyB,EAA6B,CkBqDnB,qEPSrB,CAAN;AX7DI,AkBoDuB,APU9B,AI5CG,ACNY,AjBfvB,AQwLD,ERtLA,YCCgB,AekBJ,CAAA,CAAA,EflBQ,EAAE,AgBYE,MAAM,ChBZD,AgBYE,ChBZD,IgBYA,CAAN,EhBbkC;AAE1C,AekBG,ACNE,ACGT,AVsKZ,cPrLgB,AiBeJ,CCoCA,IlBnDS,AekBF,CAAA,CflBI,CkBmDX,CAAA,ADpCS,CAAC,OjBjBoC,EiBiB9C,GAAsB,UAAC,OAAD,EAAsB;AjBdxC,AkBkDJ,APYJ,AI7CW,ACLF,AjBdjB,AkBiBgB,AVsKhB,UIvHY,CAAC,GX9DG,AW8DR,EAAU,AM/CF,CDVA,ICUI,CAAC,GjBfM,EAAE,CiBeb,CAAY,GAAZ,CAAgB,CjBfI,CAAC,eAAR,CiBeY,IjBfgB,CiBezC,EAAgC,CjBfnB,GAAmC,SAAnC,GAA+C,aAHlB,ciBkB+B,0BAAc,OAAO,CAAC,IAAtB,EAA4B,KAAI,CAAC,iBAAjC,CAAzC,GAA4F,GAA5H;AjBdA,AkBiDJ,APaA,AI9CO,ARqKnB,cPrLgB,AkBiDJ,APaM,AI9CO,CGiCb,CAAA,EPaU,CI9CQ,EfhBP,EAAA,AW8DL,CAAU,OX9DL,CAAA,KegBE,EAAN,CAAA,4BJ8CD,CAAN;AX7DQ,AkBkDF,APYT,AKlDO,ACEA,AVuKhB,YWnIkB,IFtCF,GEsCS,CDpCL,ECoCQ,GDpCJ,CAAC,CDFE,CAAC,IhBZQ,EgBYpB,CCEA,EDFqB,ACED,YDFC,ShBbd,0BkBmDL;AlBjDE,AkBkDR,AFtCQ,AjBhBd,AkBkBc,AVuKpB,SRzLM,QmBsDW,CFtCG,IjBhBd,AkBkBkB,CCoCZ,AFtCY,AjBhBM,CmBsDN,AFtCC,EjBhBnB,CmBsDM,CAAgB,AnBtDU,EiBgBlB,CAAY,GAAZ,CAAgB,ChBZI,UkBkDH,KAAzB,EAAgC,AFtCC,OEsCjC,GAEA,CFxCQ,EAAsC,sBAAoB,KAAI,CAAC,GAA/D;AhBdG,AWiEf,AIjDI,AhBjBR,AkBkBoB,AVuKxB,SRzLW,EYkEE,CZlEC,GCCS,CDDL,CCIK,EeaX,CAAA,AECY,CNgDhB,CAAgB,CZlEC,CCIK,CAAC,AiBcH,CAAC,GNgDrB,GXjEe,AWiEW,CXrEwB,CDGxC,CYkEV,AMhDgB,CAAe,GlBlBE,IkBkBK,CAAC,IAAvB,ElBlBb,KACF,GAAG,YAAY,WAAf,IAEI,GAAG,CAAC,WAAJ,IAAmB,GAAG,CAAC,WAAJ,CAAgB,IAAhB,KAAyB,aAH9C,CAAP;ACMY,AkBkDJ,APWP,AIlDO,ACDQ,AjBZnB,AkBeoB,AVuKrB,KI1Ie,SX1CC,IgBUI,CEwCR,ADvCQ,CjBXE,AkBkDV,ADrCU,EjBbE,CgBUA,CAAC,GCGI,EjBbE,CAAC,EiBaV,EAAc,CDHhB,ChBnBsC,EgBmBnB,WAAnB;AhBTJ,AkBiDJ,AHvCA,ACAQ,AjBXpB,AkBcwB,AVuKxB,cPpLgB,AeUG,EAAA,CAAA,CfVC,AgBUA,EhBVE,AWyCP,AM5BS,CFHL,EAAP,CAAA,ACAc,CCGE,CjBvB8B,AiBuB7B,CDHA,IAAT,ACGI,CAAW,KAAX;AjBZR,AkBgDJ,AFtCQ,AT0KpB,cPpLgB,AkBgDE,IFtCE,CEsCG,GlBhDC,EAAE,CgBUC,KEsCf,CAAA,ClB3D8C;AAY1C,AWuCD,AK7BE,ACEO,AVwKxB,GI7II,WXvCY,GgBKA,GhBLM,EAAE,eAAe,CAAC;AAZkB,AWwEtD,AIjDI,ACAK,AjBbP,AkBee,AVwKrB,SRvLM,ICVuB,CAAN,CAAA,AgBLX,CA4BE,GDAN,CAAA,AhBbF,CAA4B,EiBab,CAAP,EAAU,CjBblB,EAA6C,aAA7C,EAAoE,UAApE,EAA4F,GAA5F,EAAyG,kBAAzG,EAC4B,OAD5B,EAC2D,iBAD3D,EACuF,eADvF,EACiH,cADjH,EAC+I;AmB+CzI,AHnCJ,ACCQ,ACEC,AVwKjB,gBS1KgB,MAAM,CAAC,CAAD,CAAN;AEmCJ,AHpCJ,ACEQ,ACEH,AVwKb,YWxIY,EAAA,AHpCG,CGoCH,AD1CA,GFMJ,CGoCI,AHpCJ;AfvBI,AgB0BC,AT0Kb,YPpMY,QAAQ,GAAG,EAAA,CAAA,IAAA,EAAX;AkB6DA,AFlCH,ACEG,AVwKZ,aS/Ne,CAAP,ACuDI,CDvDJ,IEuFI,CAAA,GDhCS,CAAC,OAAV,GAAoB,UAAC,KAAD,EAAkB;ACgCtC,APeD,AM9CK,AVwKhB,EI1HW,aAAA,CAAA,SAAA,CAAA,KAAA,GAAP,YAAA;AOfQ,APgBJ,AIrDH,AEOW,AVwKhB,GQrLkB,MJ2DL,KOhBM,OAAO,APgBlB,COhBmB,EPgBC,IOhBT,CAAe,APgBD,IOhBK,KAAJ,CAAU,OAAV,CAAf,CAAP,CAAA,KPgBgB,EAApB;AACA,AZlEA,AkBoBQ,AVwKhB,UR5LQ,CYkEO,KAAK,CZlEL,GAAG,AkBoBE,ElBpBZ,IkBoBQ,EN8CR,AM9CoB;AN+CvB,AIrDO,ACEP,ACKe,AVwKpB,EQ/KY,CJkDD,AKvHM,YjBwDT,GkBoBY,IFPR,CAAA,AEOY,CAAC,KAAL,CAAW,EFPnB,CAAA,EhBbJ,AkBoBY,OlBpBZ,CAAA,OgBaI,GAAR,UAA0B,OAA1B,EAAgD,KAAhD,EAAoE;AGoCzD,AHnCP,AhBdA,AkBqBS,AVwKjB,QQ/KY,CAAC,OGmCM,AHnCC,CAAC,AEKL,IC8BQ,ED5BD,CFPf,EAAsB,UGmCX,KAA2B;AAAA,APmB5B,AIrDN,ACEK,AjBjBT,AkBsBY,AVwKpB,EI1HkB,AKnDD,IDFL,MhBfJ,CgBeW,AhBfX,CgBeY,AhBfZ,CYoEU,CAAA,KIrDN,CEOY,EFPM,CJqDZ,CAAA,AIrDN,CCEK,ACKY,CDLZ,ECKoB,IAAjB,CADG,CAEH,CDNH,CAAA,IAAA,GAAb,MLmDc,GAAd,CKnDkB,IAAlB,EAA2B,KLmD3B;AXlEQ,AkB+CG,AHjCN,AhBfa,AQ8LtB,cW9I8E,ElB/C9D,CDDM,CAAA,GCCV,EAAW;AACP,AkBgDE,AnBlDI,AkBuBF,AVwKpB,cW7IkB,MlBhDI,CkBgDG,CD3BD,EC2BI,ClBhDZ,IiBqBe,UAAP,KAAsB,WAAtB,IAAqC,KAAK,YAAY,UAA1D,EAAsE,6CC2BxE;AlB/CL,AkBgDD,AHnCJ,ACCA,AjBjBc,AkBwBE,AVwKxB,QQhLY,ICCA,AjBjBgB,CgBgBpB,ACCK,EDDM,GCCD,CEkCD,CD3BO,KC2BZ,AD3BiB,CC2BL,ED3BQ,CC2BpB,AFlCJ,CEkCoB,AnBnDkB,CiBiBf,CjBjBT,CAAA,AkBwBe,CAAC,KAAd,SC2Ba,KAAzB,EAAgC,OAAhC;AACA,AHnCA,ACCA,ACOS,AVwKrB,iBS/KY,CAAA,CCKQ,EC6BR,CAAA,GD3Be;AjBrBf,AkBgDA,AHlCA,ACAA,ACQY,AVwKxB,MQhLY,OAAO,CAAC,GfdH,GiBsBO,CFRZ,CAAgB,CfdhB,CAAY,CiBsBK,EjBtBjB,CACI,AiBqBgB,IAAI,KFRxB,AEQoB,CAAU,GFRK,KfbtB,OADb,Aec6C,EfZzC,GeYJ,oBEQoB,CAAR,MjBpBoB,GAA5B,GAA6B,GAFjC;AAIA,AkB4CA,APgBJ,AIjDI,ACDA,AjBlBE,AkB2BO,AVwKrB,URnMc,EiBkBK,GjBlBA,CmBoDA,APgBP,EX5DM,ADRI,CiBkBI,CAAC,AjBlBL,CCQV,AW4DK,AZpEK,EmBoDI,CAAC,CnBpDL,CiBkBH,CAAe,AjBlBpB,GmBoDK,CAAe,AFlCI,IEkCA,CPgB1B,AKlDsB,CAAU,GEkCV,CAAU,APgBP,OOhBH,CAAf,CAAP,CAAA,QPgB2C,CAAC,YAAhD,EAA8D,SKlDpC,CAAf,CAAP,CAAA;AEmCH,APgBG,AIjDH,ACDA,ATiLT,KQxLwE,CAShE,eJgDI,CAAA;AAAA,AZpEJ,AkB4BY,AVwKpB,cRpMY,IkB4BQ,ClB5BZ,EAAW,GkB4BO,CAAC,KAAD,CAAN;AjBnBR,AW2DA,AKjDJ,AjBlBI,AkB4BK,AVwKjB,YRpMY,GiBkBJ,ChBVQ,AW2DG,AKjDX,GjBlBW,IYmEO,AZnEP,CYmEQ,CX3Df,ADRO,ECQQ,CDRR,EYmEA,AZnEA,CYmEe,CZlElB,EAAA,CYkEsB,AZlErB,KYkEiB,CAAU,SZlE5B,CAAA,GAAmB,YAAU,KAD1B,IAAA,CAAP,oCYmEsB,CAAf,CAAP,CAAA;AX1DI,AW2DP,AIhDD,ACFA,AjBfC,AkB0BI,AVwKb,QQjLY,MfXI,CeWG,AEPP,CFOQ,OAAR,CAAgB,EfXA,CAAC,SAAD,CAAZ,EeWJ,CAAJ,EAAsC;AfVjC,AeWD,ACHJ,ACYC,AVwKT,USpLe,GCnEA,CAAP,CAAA,mBDmEmB,KAAK,MAAjB,EAAyB,KAAzB,EAAgC,KAAK,UAArC,EAAiD,KAAK,GAAtD,EAA4D,KAAK,kBAAjE,EAAqF,IAArF,EAA2F,KAAK,iBAAhG,EAAmH,KAAK,eAAxH,EAAyI,KAAK,OAA9I,CAAP,CAAA;AEmCA,APiBA,AIhDI,ARiLZ,aQjLmB,IG+BN,APiBA,GIhDa,CAAC,OAAR,CAAgB,GJgD3B,EOjBA,CPiBuB,EOjBE,IAAzB,GH/BW,CAAP,QJgDqC,CAAC,UAA1C;AX3DI,AW4DJ,AIhDC,ARiLT,gBP7LgB,CW4DH,MX5DU,AW4Df,CX5DgB,AW4DJ,GAAZ,CAAgB,OX5DZ,EAAyB,SW4DJ,KAAzB,EAAgC,yBAAhC;AX3DQ,AeYX,ACLA,ATsLL,GQ/LY,ACIK,WhBFD,OAAO,CAAC,WAAR,CAAoB,OAApB,GAA8B,IAA9B;AACH,ADPH,AkByBL,AV2KL,GUxQiB,OlBoEP,EAAA,GAAgB,kBAAkB,EAAlC,EAAC,IAAI,GAAA,EAAA,CAAA,CAAA,CAAL,EAAO,KAAK,GAAA,EAAA,CAAA,CAAA,CAAZ;AgBoBQ,ACLP,AjBdP,AQoMJ,EQjLkB,ACLP,QjBdP,OAAO,CAAC,IgBmBM,AhBnBP,CgBmBO,AhBnBd,GAAgB,CiBcT,CAAA,GjBdP,CgBmBc,CAAA,IAAA,ACLP,CAAA,EDKP,ECLO,GAAP,KDKmB,GAAnB,EAAgC,ECLhC,SDKA,EAAwD;ACJpD,AjBbJ,AkBwBO,AV2KX,EU3KW,ODXE,CjBbT,IiBaI,EjBbE,CAAC,GAAP,AkBwBO,ClBxBI,AkBwBJ,SAAA,CAAA,IAAA,GAAP,ClBxBoB,KAApB,EAA2B,EkBwBf,IlBxBmB,AkBwB/B,EAAqB,WlBxBM,GAAiB,4BAAjB,GAA8C,aAAa,CAAC,OAAD,EAAU,iBAAV,CAA3D,GAAuF,GAAlH;AiBcI,AjBZE,AkBuBF,AV2KR,QU3KY,ElBvBF,CiBYK,ECWE,KDXK,CAAC,GjBZD,AkBuBV,GlBvBa,CiBYV,ACWe,EDXtB,GCW2B,OlBvBG,CAAC,CkBuBT,CAAe,KlBvBP,CAAb,GAAyB,CkBuBpB,KAA8B,KAAK,ElBvBxC,GAAyC,MAAxD,SkBuBkD,CAA0B,IAA9E,EAAoF;ACoBvF,APoBO,AKlDP,AjBZgB,AkBuBT,AV2KZ,GW1LiB,AFCN,QCcM,MlBvBI,AkBuBT,ClBvBS,AkBuBG,CNuCZ,CAAA,CMvCA,CAAgB,kBAAS,KAAzB,EAAgC,0CAAwC,0BAAc,IAAd,EAAoB,KAAK,iBAAzB,CAAxC,GAAmF,GAAnH;ANuCA,AZ9DS,AkBwBT,AV2KZ,WU3KiB,SAAL,CAAe,IAAf,CAAoB,IAApB;ACoBD,APkBC,AKhDA,AjBdS,AkByBT,AV2KZ,EWxJW,AF9BC,UjBde,CkByBR,CNqCD,EOlBP,CAAA,EPkBY,CMrCG,CAAC,ClBzBU,CAAC,GmB4C3B,CAAA,AF9BC,AjBde,CiBcf,AjBd+B,AkByBxB,EAAP,CCmBD,AnB5CgB,CY8DT,CZ9D8B,CmB4C5C,APkBQ,CAAA,EKhDA,CAAA,KAAA,CE8BI,EF9BZ,EE8BA,EAAsC,MF9BxB,CAAd,EAAuB;AhBVnB,AkByCA,AF9BA,AjBdA,AkByBC,AV2KT,QWxJY,AF9BA,IjBdJ,CmB4CS,AF9BA,GhBXL,CAAC,EDHE,EAAA,GiBcP,ChBXa,CAAC,AgBWQ,EhBXtB,AkByCI,AnB7CoC,ECItB,GkByCM;AlBxCpB,AkBwCoB,AF7BpB,AjBdJ,AQoMR,WStLiB,CjBdT,OAAO,CCGG,CDHH,CiBcH,CAAiB,ChBXP,IgBWV,CjBdG,CAAA,EAAA,EAAO,OCGJ,ADHH,CCGiB,CDHE,OCGM,CAAC,MDH1B,CAFiC,GCK9B,EAAmC,QAAQ,CAAC,MAA5C,CAAN;AACH,AkBuCD,APiBI,AK7CA,AjBdJ,AkByBA,AV2KR,MW1JgE,KF5B/C,ACWF,CNkCH,AZ3DJ,EY2DI,CAAA,GMlCU,CNkCV,AMlCW,GDXX,EjBdQ,CiBcW,ACWhB,ClBzBK,AkByBU,QDXlB,IjBjBoC,wBkB4BjC,CAAP;ACkBI,AnB1CJ,AkByBH,AV2KL,GUnLW,SlBjBH,CmB0CW,OAAO,CAAC,MAAR,AnB1CI,CmB0CW,CnB1CX,GmB0Ce,KAAJ,CAAU,qEAAV,CAAf,CAAP;AlBtCE,AkBuCL,APiBG,AK7CA,AjBnBoC,AQyMhD,UStLgB,CjBnBW,CCQb,ADRO,CAAA,EiBmBA,EL6CJ,EXxDI,GAAG,AgBWZ,EAAkB,QL6ClB,GAAuB,KXxDO,CAAC,QAAD,EAAW,EWwDA,CAAC,IXxDM,CAAC,IWwDjD,QXxD8B,CAA5B;AACU,AWwDZ,AK7CI,ACWL,AV2KX,EU3KW,WDXU,IL6CJ,AIjDE,EfPK,CAAA,AgBWR,ACWL,CDXkB,ACWlB,CFfa,ACIR,QCWL,CFfoB,AEepB,GNkCC,CMlCD,ENkC0B,CIjDN,AEe3B,CFf2B,EJiDnB,SMlCR;AjBtBoB,AkBwChB,APiBI,AIlDmB,ACKlB,ACWL,AV2KR,QW1JY,ADjBA,CCiBC,IDjBI,CCiBC,GPiBD,KMlCT,CCiBA,APiBI,CAAY,AMlCI,CCiBC,EPiBjB,CAAgB,kBAAS,KAAzB,EAAgC,uCAAhC;AXzDY,AkByCZ,AHlCmB,ACMtB,AjBtBC,AkBiCE,AV2KZ,UR5MU,CmBkDO,GlBzCa,AeOC,CAAA,CAAA,EhBhBb,EmBkDN,ClBzCY,ADTH,CCSG,CkByCK,AnBlDR,CAAA,GmBkDY,CnBlDZ,EAAX,emBkDmB,CAAuB,KAAK,SAA5B,CAAjB;AACH,AHjCqB,ACKzB,AjBhBD,AkB2BQ,AV2KZ,GS/LY,EE8B8B,CASlC,InB9CJ,MAAM,CAAC,EgBWmB,CAAA,AhBX1B,CAAW,kBAAS,KAApB,EAA2B,MAAI,aAAJ,GAAiB,iDAAjB,GAAmE,QAAQ,CAAC,UAA5E,GAAsF,GAAjH;AgBW0B,AEiBlB,AV2KZ,WU3KiB,KAAL,CAAW,SAAX;AjB1BE,AeSgB,ACM9B,ACYS,AV2KT,SSvLA,GhBfc,EeSsB,KfTf,AeSoB,GfTjB,EAAA,CAAA,IAAA,EAAV,EeSsB,CCMpC,CDN8B,CAAA;AfPtB,AkB2CA,AFzJR,ATmTA,CSnTA,EAAA,QEyJe,KAAK,GlB3CZ,CAAA,KkB2CO,CAAe,IAAf,CAAoB,IAApB,CAAP;AlB3CA,AkB4CH,ADjBG,AV2KR,GWrKW,QDNI,OAAO,CAAC,OAAR,EAAP;AjB3BA,AWyDI,AIlDU,AEqBjB,AV2KL,GUnLW,SFbW,EfPP,GWyDE,AIlDU,CfPR,EeOW,EAAA,CAAA,IAAA,EAAR,GJkDV,GAAuB,OXzDpB,CACH,QAAQ,CAAC,CWwDgC,CAAC,IXzDvC,EAEH,MWuDA,EXvDQ,CAAC,UAFN,EAGH,OAHG,CAAP,CAAA;AkB8CS,APYL,AIlDI,ARgMhB,EW1JiB,cAAA,CAAA,APYA,AIlDI,MJkDT,CAAY,EOZP,CAAA,APYL,CAAgB,GOZX,GAAb,AHtCY,CAAuB,SGsCjB,EPYe,AIlDrB,EAAoC,CGsChD,EAA+B,APYvB,EAAgC,AIlD5B,kEJkD4F,GAAhE,GAAiE,IAAjG;AACA,AZ9DX,AkBiCW,AV2KZ,EU3KY,iBN6BA,CAAA,AM7BA,CAAA,SAAA,CAAA,KAAA,GAAR,UAAc,KAAd,EAAwC;AN6BhC,AZ5DZ,AkBgCQ,AV2KR;APrMK,AWsDO,AM3BJ,AV2KR,GPxRiB,KiB6GL,KAAK,CN2BE,OAAO,CAAC,AM3BnB,EAAoB,IN2BT,CAAe,GAAf,CAAP,CAAA;AM1BA,AV2KZ;APrMW,ADPL,AkBkCM,AV2KZ,EPtMW,ODPL,EkBkCW,MjB3BN,CAAA,EiB2BC,ClBlCN,AkBkCqB,ClBlCE,KCOlB,CAAA,ADPL,AkBkCM,ElBlC4C,CkBkCnB,YjB3B1B,AiB2B0B,CAAQ,CAAjC,CjB3BR,UAAuB,GAAvB,EAAkC;AAC9B,AeGkB,AhBVtB,AQ6MJ,MR7MQ,ECOI,IeGc,AhBVZ,GCOK,EDPA,CCOW,CeGG,CfHzB,EeG+B,GAAG,ChBVtC,EgBUsC,AhBVZ,KgBUS,GAAS,IAAI,CAAC,GAAL,EAAtB;AGoClB,AHnCY,AhBVZ,AkBiCI,AV4KZ,WR7Me,AkBiCE,IlBjCE,CmB6CP,CHnCa,GEuBb,CCYK,ADZU,EFvBP,CAAY,GAAZ,CAAgB,AhBVrB,CAAkB,CkBiCrB,GAA2B,GCY3B,KAAoB,IDZO,CFvBM,AEuBE,ClBjCL,AkBiC9B,IFvBQ,EAAgC,KhBVrC,CAAP,gCgBUgF,OAApC,GAA2C,GAA3E;AfHZ,AkBsCwB,AHlCK,AhBVhC,AQ6ML,QPvMY,WeIyB,CAAA,IfJhB,MAAT,IAAmB,KAAK,GAA5B,EAAiC;AAC7B,AkBqCJ,AHlC6B,AEuBzB,AV6KZ,WU7KiB,GCWkD,MDXvD,CAAe,OAAf,GAAyB,YAAA,CAAQ,CAAjC;AjBzBA,AkBqCA,AHnCyB,AhBRjC,AQ6MJ,MR7MQ,KCMS,CDNH,ECMF,AeE+B,CfFtB,EDNF,EmB2CF,AHnC+B,EhBR5C,EAAqB,ECMb,AkBqCA,ClBrCoB,AkBqCR,GlBrCZ,AkBqCA,AHnC+B,CGmCf,AHnC+B,CfFtB,EeEM,CAAoB,OfFzB,AeEK,CfFN,CeEmC,CfF/B,CAAJ,EAAK,CkBqCL,KAAzB,CHnC+B,CGmCC,AHnCP,CAAA,gCGmCsC,KAA/B,GAAoC,wEAApE;AlBrCmC,AkBsCnC,AnB3CJ,AkB+BI,AV8KZ,WR7Me,AkB+BE,IjB1B8B,KiB0BnC,CCYA,ADZe,CjB1B2B,AkBsC1C,GlBtC6C,CAAC,AiB0B9C,CjB1B+C,IAAF,ADL/B,CCKsC,IAAP,CAAV,EDLvC;ACK6D,AkBsCzD,APYP,AZtDA,AkB+BO,AV8KZ,GI1KkB,IX/BN,IiB2BK,SAAL,GAAiB,SAAjB;AjB1BH,AkBqCG,AHpCc,AE0BjB,AV8KT,YQxM0B,IGoCP,IHpCe,GGoCR,AHpCW,CGoCV,CHpCU,CAAA,IAAA,CGoClB,CHpCO,CGoCd,CAAA;AACH,APaS,AZtDd,AQ6MJ,EIvJkB,IZtDT,MAAkB,CAAC,EYsDV,CAAA,AZtDd,EAA6B,OYsDf,CAAA,aAAA,GAAd,YAAA;AXlDI,AeEY,AhBLZ,AkB+BA,AV8KR,SU9Ka,EjB5BE,ADHA,IkB+BP,CF1BgB,AE0BJ,ClB/BZ,CCGA,CiB4BA,CAAgB,IF1BQ,CAAC,UAAT,GE0BS,EF1Be,GAA5B,AE0BZ,EF1B6C,AE0Bb,uCAAhC;AjB3BH,AkBsCG,AHpCgB,AhBLnB,AQ6ML,GPjNW,akB6CC,GHpCiB,EGoCZ,IHpCO,CAAY,GAAZ,CAAgB,MGoC5B,KAAoB,OHpCiB,WAAzB,EAAsC,oDAAtC;AGoCQ,AHlCR,AEwBhB,AV+KR,QU/KY,KAAK,MFxBY,CEwBrB,EAAkB,IFxBF,GAAe,KAAf;AfHxB,AkBqCQ,AHjCa,AhBNjB,AkB8BQ,AV+KZ,SP3MA,ADFW,CkB8BK,GF5BI,AhBFL,CmBuCqD,CDT/C,IFxBM,IAAI,CfJ/B,EDFW,CAAkB,AkB8Bb,CAAkB,GFxBK,CAAC,ChBN7B,AkB8BK,ClB9BZ,KkB8ByC,GFxBd,EEwBmB,CAAC,EFxBI,GAA5B,EAAiC,CEwBf,KAAmB,KAAnB,IAA4B,KAAK,CAAC,IAAN,KAAe,IAAxE,CAAJ,EAAmF;AjBzJ/F,AkBmKY,AHjCY,AhBNvB,AkB8Be,AV+KhB,CPzUA,CAAqC,WiB0JhB,MCSJ,AHjCY,CEwBb,CAAa,GjB1J7B,CAAA,AkBmKY,AHjCY,AEwBS,CCST,AHjCY,GGiCxB,AHjCY,CGiCI,AHjCY,AEwBX,CAAU,iBCSF,AHjCY,KGiCrC,AHjCY,EGiCoB,AHjCY,gBEwBqB,KAAK,CAAC,IAA5C,GAAgD,ICSZ,ADTpC,GAAqD,ECShD,GAAoC,ADTiB,CAAC,MAA3D,GAAiE,IFxBK,AEwBhF,CAAb,OFxBqG,CAAC,UAA9D,GAAwE,GAAxG,EADoC,CAGpC,+BG+BZ;AACA,AnBtCZ,AkB6Ba,AV+Kb,OUjLY,MAEO,IAAI,ICSX,CAAA,ADTgB,YAAY,KAArB,EAA4B;ACSnC,AH/BY,AEuBR,AV+KhB,aU/KqB,MFvBQ,CEuBb,CAAa,KAAb,GFvBQ,GAAkB,IAAI,iBAAJ,CAAc,QAAQ,CAAC,UAAT,IAAuB,EAArC,EAAyC,QAAQ,CAAC,UAAlD,CAAlB;AG+BZ,AH9BY,AEuBX,AV+Kb,OUjLmB,MAEA,GCOA,GH9BU,EG8BL,KH9BA,GAAe,GG8B3B,CAAA,CH9BY;AfPxB,AkBsCS,APSD,AIvCa,AhBRrB,AkB+BgB,AV+KhB,IR9MA,KCAA,IeE2B,AE6BN,INgBR,EIvCc,CEuBX,GlB/BhB,GAAA,CCAA,CAA4B,QAA5B,CW+CQ,CX/CwC,ADAhD,EY+CoC,SAA5B,CX/CR,EAAyF;AACrF,AW+CI,AIvCgB,AhBLpB,AkB4BS,AV+Kb,MP9MQ,KDGJ,ECHA,IW+CS,aZ5CT,CAAY,OAAZ,EAAiC,EY4C7B,GAAiC,GZ5CrC,EY4CI,AZ5C2D;AmBoC3D,APUM,AIxCU,AhBLhB,AkB4BC,AV+KT,SR3Ma,GY6CC,IZ7CN,CmBmCK,CH9Be,ChBLL,OgBKa,AhBL5B,CgBK6B,CJwCP,GAAG,COVzB,EH9BgB,CG8BI,APUS,CIxCS,MJwCb,CAAY,UAAC,OAAD,EAAU,MAAV,EAAgB;AXhDzD,AkBsCwB,APWhB,AIxCgB,AhBLpB,AkB4BH,AV+KL,GUpMY,MlBPC,CCJD,IWiDA,GZ7CJ,EY6CQ,CAAC,AZ7CO,CgBKS,CfT7B,KeSwB,CAAY,AhBLhC,GgBKoB,CAAgB,KJwChC,GAAyB,OAAzB,GIxCyC,KAAzB,EAAgC,4CAA0C,0BAAc,QAAQ,CAAC,OAAvB,EAAgC,KAAK,iBAArC,CAA1C,GAAiG,GAAjI;AfRpB,AkBqCA,APYI,AZ7CP,AQ2ML,SP/Ma,KWiDD,KAAI,CAAC,EXjDT,eWiDI,GAAyB,MAAzB;AXhDA,AkBsCJ,APWC,AIzCmB,AEwBhB,AV+KZ,EU/KY,IjBhCA,OAAO,AW8Cc,CAAnB,EX9CQ,CkBsCT,GH9BmB,AEwBpB,CAAA,GjBhCkB,CAAC,AeQM,GG8B7B,EDNI,CCMe,ADNf,GFxBgB,CG8BG,ClBtCT,AeQ0B,EfRpC,IkBsCe,CAAY,ADN3B,GAAR,OCMoC,GDNf,ICMc,CDNnC,CCM2C,CDNX;AjB/BxB,AkBsCA,APYJ,AI1CwB,AhBJrB,AkB4BH,AV+KR,ER3MW,SkB4BI,KAAK,GNkBZ,CAAA,AMlBgB,ClB5Bb,CAAA,CgBI0B,IEwBN,IlB5BpB,CgBIqB,AhBJrB,AkB4ByB,CFxBW,AEwBV,MlB5B1B,EgBI4C,AEwB/B,CFxBgC,AhBJpD,IkB4B8C,GFxBlB,KhBJ5B,CkB4BW,IAAgD,OAAO,KAAK,CAAC,IAAb,KAAsB,QAA7E;ACOI,APWJ,AIzCqB,AhBJrB,AkB4BH,AV+KL,GUjLY,KlB1BE,KAAK,CmBkCP,EnBlCkB,GmBkCd,CAAC,CnBlCkB,OAAL,CAAa,SAAb,CmBkClB,AnBlCyC,GmBkCd,InBlCT,CAA+B,EmBkCjD,GnBlCsD,QAApC,CAAtB;ACJA,AkBuCC,APUD,AIxCiB,ARuMzB,SPhNa,IkBoCc,CAAnB,APaM,CXjDN,AeIgB,CGqChB,GPQW,EIxCY,QJwCjB,CAAgB,KAAhB,CAAsB,KAAK,QAAL,CAAc,cAApC,CAAN,CAAA;AXhDI,AeSgB,AhBLpB,AkB4BR,AVgLA,MPhNY,EDIA,CkB4BZ,IjBhCmB,ADIF,GCJK,ADIF,CAAC,CAAb,EAAgB,ICJM,CAAC,EiBgC/B,EjBhCsB,EAAV;AACA,AkBwCJ,AH/BoB,AhBLhB,AkB3IZ,AVuVA,CUvVA,EAAA,QlB2IiB,OAAL,CmBoCJ,AnBpCiB,CmBoCjB,CH/ByB,MAAL,CAAY,AhBL5B,CAAuB,EgBKP,CAAgB,GhBLhC,CAA8B,KAA9B,EAAqC,CAArC,MgBKyC,KAAzB,EAAgC,oDAAhC;AG+BpB,APOA,AIrCiB,AhBLhB,AQ4MT,YIlKQ,EAAA,CAAA,IAAA;AX9CA,AkBuCA,AH7Ba,ARuMrB,SPjNa,KkBuCC,ClBvCN,IkBuCW,YAAL,CAAkB,KAAlB,CAAN,CAAA;AlBtCA,ADKA,AQ4MR,QR5MY,CCLC,IDKI,MCLT,CDKI,CAAa,SAAb,CAAuB,MAAvB,KAAkC,CAAlC,IAAuC,KAAK,OAAL,CAAa,cAAxD,EAAwE;ACJxE,ADKI,AQ4MZ,SPjNa,EDKI,ICLT,GDKI,CAAa,cAAb,GAA8B,KAA9B,CAAoC,UAAC,CAAD,EAAE,CAAQ,CAA9C;ACJA,AkBmCJ,AnB9BC,AQ4MT,YPjNkB,IAAI,KAAJ,CAAa,YAAY,GAAA,oBAAzB,CAAN;AkBoCJ,AnB9BH,AQ4ML,GRrNW,SmBuCH,EAAA,CAAA,IAAA;AlBnCA,AOkNR;APjNY,AkBmCJ,APSU,AZvClB,AQ6MA,MPlNY,GDKZ,GYuCkB,CX5CC,GAAG,GkBmCd,CAAA,IlBnCsB,CAAC,GW4CG,AZvClC,CCLsB,EAAV,AW4CkD;AX3ClD,AkBkCJ,APUQ,AZ3DhB,AQiOA,CRjOA,EAAA,WY2DgB,QAAQ,EAAE,KAAK,QAAL,CAAc,IADsB;AXxD1D,AkB+CI,APWQ,AJsKhB,cWjLc,APWE,KOXG,EPWI,EAAE,KAAK,EOXtB,CAAA,KPWiB,CAAc;AAFuB,AIrC1C,AR8MpB,aIzKkB,GIrCM,CAAC,KAAK,OAAV,EAAmB;AfHnC,AW6CQ,AIzCY,AR8MxB,SPlNW,OAAP,CW6Ca,MAAL,CAAY,GAAZ,CAAgB,kBAAS,KAAzB,EAAgC,4BAAhC;AX5CX,AkB8BO,APgBI,AI1CY,AhBFxB,AQgNA,YWpLQ,EAAA,CAAA,IAAA,APgBI,AI1CiB,CJ0CjB,KI1CY,CAAY,GAAZ,CAAgB,kBAAS,KAAzB,EAAgC,0DAAwD,GAAC,CAAC,OAA1F;AJ0CZ,AIzCS,AhBFrB,AQgNA,IRhNA,SgBDoB,IhBCpB,EgBE2B,ChBF3B,YAAA;AY2CY,AIxCY,AhBQpB,AQsMJ,WRtMI,GYgCc,IIxCU,CJwCL,EIxCM,GhBQzB,CAAY,KYgCE,CAAiB,EIxCM,GJwCD,IZhCpC,EAAqC,WYgCN,AIxCX,CJwCkC,CIxCH,oBJwCpB,CAA6C,gBAA7C,CAAjB,CAAN,CAAA;AIvCgB,AhBQpB,AQsMR,SRtMa,eAAL,GAAuB,eAAvB;AgBPoB,AhBQpB,AQsMR,SRtMa,YgBRoB,ChBQzB,GAAqB,EgBRD,CAAY,GAAZ,CAAgB,AhBQpC,kBgBR6C,KAAzB,EAAgC,oDAAhC;AJsChB,AIrCa,AhBQpB,AQsML,YIzKY,EAAA,CAAA,AIxCY,IJwCZ,EIrCmB;AACH,AR8M5B;AIxKY,AIrCgB,AhBQjB,AQsMX,ERtMW,aAAA,CAAA,CY6BM,IIrCgB,EJqCrB,CAAY,CZ7Bb,CAAA,CY6BC,CAAgB,CZ7BjB,EgBRiB,ChBQxB,EgBR0C,GAAlB,KhBQb,IY6BsB,IZ7BjC,EAA+B,KY6BvB,EAAsC,AZ7B9C,EAA8C,sBY6BsB,KAAK,QAAL,CAAc,IAApC,GAAwC,IAA9E,GAEA;AOnBP,AHnBuB,AhBQpB,AQsMR,GWhNiB,KnBUL,QAAQ,IAAI,CgBRS,IhBQJ,GgBRD,GAAe,KAAf,IhBQpB,EAAsC;AY+BlC,AItCa,AhBQb,AQsMZ,cRtMoB,GY8BH,KZ9BL,SY8BA;AOlBM,APmBN,AItCS,AhBQL,AQsMhB,EW3LkB,WnBXG,GmBWH,CAAA,APmBD,SOnBC,CAAA,InBXY,IY8BlB,IOnBM,AnBXF,GmBWZ,UAA2B,KAA3B,EAAwC;APoBhC,AZ9BI,AQsMhB,aRtMqB,IY8BJ,cZ9Ba,KAAd,GY8BJ;AAEA,AZ/BQ,AQsMpB,eRtMyB,IY+Bb,CAAA,QZ/BQ,CAAmB,KAAnB,CAAyB,MAAI,IAAI,IAAJ,GAAW,WAAX,EAAJ,GAA4B,IAA5B,GAAiC,kBAAS,QAAT,CAAjC,GAAmD,IAAnD,GA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MR/MQ,EAAE,ImBTM,AnBSF,EmBTE,AnBSA,CmBTA,AHlBR,CAAA,GGkBQ,AnBSK,EAAjB,EAAqB;AgB3BjB,AhB4BA,AQ+MR,IR/MQ,SAAS,IAAO,EAAE,GAAA,IAAlB;AYiBH,AI7CG,AhB6BH,AQ+ML,GIjPkB,AZgCd,MAEO,CgB7BI,wBAAY,KAAK,MAAjB,EAAyB,aAAzB,EAAwC,KAAK,UAA7C,EAAyD,KAAK,GAA9D,EAAoE,KAAK,kBAAzE,EAA6F,IAA7F,EAAmG,KAAK,iBAAxG,EAA2H,KAAK,eAAhI,EAAiJ,KAAK,OAAtJ,CAAP,CAAA;AJ+CJ,AZjBI,AQ+MR,IR/MQ,SAAS,IAAI,cAAb;AACH,AQ+ML;AQ7OK,AR8OL,GQnPiB;AhBqCb,AQ+MJ,ER/MI,SAAS,IAAI,KAAG,OAAhB;AgB9Ba,AR8OjB,EQ9OiB,oBAAA,CAAA,SAAA,CAAA,IAAA,GAAb,YAAA;AGiBY,AnBeZ,AQ+MJ,MR/MQ,WmBfa,GnBejB,EAAoB,CmBfR,CAAY,GAAZ,CAAgB,kBAAS,KAAzB,EAAgC,kDAAgD,GAAhD,GAAiD,IAAjF;AACA,AP8BC,AZfT,AQ+MR,EIhMiB,EZfT,SAAS,EYeA,CAAA,CO9BI,AnBeA,OAAK,CYeT,CAAA,IAAA,CO9BD,EP8BZ,KZfI,OYeJ;AZdC,AQ+ML,GRjNI,MAEO;AACH,AQ+MR,IR/MQ,SAAS,IAAI,2BAAb;AACH,AQ+ML;AACA;AQnPQ,AhBqCJ,AQ+MJ,ER/MI,SAAS,IAAI,EgBrCJ,ChBqCT,KgBrCI,CAAY,GAAZ,CAAgB,kBAAS,KAAzB,EAAgC,2CAAhC,GAEA;AGkBI,AP6BE,AZXV,AQ+MJ,SR/MW,GYWG,KO7BG,CnBkBb,MYWsB,EO7Bd,CP6BiB,EO7BA,GP6BK,MO7BtB,MP6BE;AAEN,AIhDA,AhBoCP,AQ+MD,iBInMa,AIhDA,OAAL,GAAe,CJgDf,GAAmB,CIhDnB,IJgDwB,YAAL,EAAnB;AACA,AIhDA,ARmPR,iBQnPa,EJgDL,CAAA,MIhDA,CAAe,KAAf;AJgDA,AZXR,AQ+MA,SR/MA,SAAA,GAAA;AYWQ,AZVJ,AQ+MJ,MR/MQ,QYUM,AZVE,CAAC,IYUE,EZVf,EAAqB,OYUjB,CAAA;AZTA,AQ+MR,YR/MgB,OAAO,CAAC,QAAhB;AmBrBI,AnBsBA,AQ+MZ,WR/MiB,MmBtBA,CnBsBL,KmBtBA,CAAY,GAAZ,CAAgB,kBAAS,KAAzB,EAAgC,wFAAhC;AP8BJ,AZPQ,AQ+MhB,YIxMQ,EAAA,CAAA,AZPe,IYOf,QZPQ;AgBtCJ,ARsPZ,mBQtPY,CAAA;AAAA,AhBuCA,AQgNZ,WRhNiB,QAAL;AgBvCA,AhBwCI,AQgNhB,cQxPkB,ChBwCK,IgBxCA,GhBwCP,MgBxCJ,CAAA;ARyPZ;ARhNY,AQiNZ,WRjNiB,OAAL,oBYOA;AIhDA,AhB0CI,AQiNhB,YQ3PY,EAAA,CAAA,AhB0CW,IgB1CX,GhB0CI,CgBxCJ;AR0PZ;AI3MY,AZNA,AQkNZ,mBI5MY,CAAA;AOhCP,APgCO,AI9CA,AhByCI,AQkNhB,GWxQkB,YnBsDK,EgBzCN,KhByCa,CgBzClB,AhByCmB,CgBzCP,GAAZ,CAAgB,GhByCZ,egBzCqB,KAAzB,EAAgC,uDAAqD,KAAK,GAA1D,GAA6D,GAA7F;AJ8CA,AI5CM,AhB+BV,AQ2NR,YQ1PkB,EJ4CA,KI5CO,GAAG,EAAV,EJ4CN,CAAA;AO9BM,AHbA,AhBwCb,AQkNL,EW7OkB,CnBgBd,MAWO,GgBxCO,EAAA,EGaA,CAAA,AHbgB,SGahB,CAAA,aAAA,GAAd,MHbc,EAAC,EGaa,IHbb,GAAA,EAAA,CAAA,CAAA,CAAD,EGad,AHbqB,EGaqC,GHbhC,GAAA,EAAA,CAAA,CAAA,CAAZ;AACN,AhBwCJ,AQkNR,WRlNe,CgBxCH,ChBwCJ,MgBxCW,CAAC,MAAD,CAAP,GAAgB,KAAhB;AJyCA,AIvCM,AhBuCb,AQkNL,YQzPkB,aAAa,GAAgB;AJwCnC,AIvCI,AhBuCf,AQkND,YIlNY,EAAA,AIvCI,CJuCJ,IAAA,EIvCW,EAAA,QAAA,CAAA,EAAA,EAAO,OAAP,EAAmB,KAAK,OAAxB,CADwB;AAE/B,ARyPhB,cQzPgB,eAAe,EAAE,KAAK;AAFS,AhB0C/C,AQkNA,SRlNA,IgB1CkB,ahB0ClB,GAAA;AgBtC0B,AhBuCtB,AQkNJ,MRlNQ,QAAQ,CAAC,IgBvCS,CAAA,ChBuCtB,EAAqB;AmB9Bb,AHTc,AhBwClB,AQkNR,WRlNe,CmB/BH,GAAG,GAAG,AnB+BI,CAAC,ImB/BA,InB+BR,CAAiB,EmB/BpB,EnB+BJ;AmB9BA,AHVkB,AhByCrB,AQkNL,cQ3PgC,GGUnB,EHVwB,cAAL,EGUxB,AHVkB,CAAA,EGUQ,KAAK,OAAL,CAAa,kBAAvC;AXkPR;ARlNI,AQmNJ,SRnNW,SAAP;AgB1Cc,AhB2CjB,AQmND,YQ9PkB,KAAK,GAAG,EAAA,CAAA,IAAA,EAAR;AACN,AR8PZ,iBQ9PiB,iBAAL,CAAuB,aAAvB,EAAsC,KAAtC;AACA,AhB2CZ,AQmNA,SRnNA,UgB3CY,AhB2CZ,CgB3CY,EhB2CZ;AgB3CY,AhB4CR,AQmNJ,MRnNQ,QAAQ,CAAC,EmBjCD,InBiCZ,CmBjCiB,CnBiCI,MmBjCT,CAAa,iBAAb,OAAA,CAAA;AAAA,AHXJ,AhB6CJ,AQmNR,WRnNe,GgB7CG,KAAK,AhB6Cf,UgB7CU,CAAgB,MAAhB,CAAuB,KAAK,GAA5B,EAAkC,aAAlC,CAAN,CAAA;AGWI,AnBmCX,AQmNL,GRrNI,MAEO,KmBnCK,CAAA,CAAA;AnBoCR,AQmNR,WRnNe,OmBnCK,EnBmCZ,GmBnCiB,OAAL,CAAa,SAAb,KAA2B,8BAAkB,aAA7C,OAAA,CAAA;AAAA,AHZR,AhBgDP,AQmNL,YQnQY,EAAA,CAAA,IAAA;AGYQ,AnBqCnB,AQmND,cWxPoB,CAAA,CAAA,EACA;AHXR,ARmQZ,iBQnQiB,MAAL,CAAY,GAAZ,CAAgB,kBAAS,KAAzB,EAAgC,8CAAhC;AGYQ,AXwPpB,iBWxPyB,SAAL,GAAiB,KAAK,kBAAL,CAAwB,8BAAkB,UAA1C,CAAjB,EACA;AACA,APsBf,AJiOL,GI9OiB;AJ+OjB;AWvPoB,APuBR,AJiOZ,EIjOY,aAAA,CAAA,GOvBQ,CAAA,KPuBR,CAAA,YAAA,GAAR,UAAqB,KAArB,EAAkC;AOvBlB,APwBZ,AJiOR,QIjOY,KAAK,eAAL,KAAyB,kBAAkB,CAAC,YAAhD,EAA8D;AOxBlD,APyBR,AItCA,ARuQZ,WIjOiB,GOzBS,GPyBd,AItCK,CJsCO,COzBO,EPyBnB,CAAgB,CItChB,CAAY,GAAZ,CAAgB,KGaF,CAAoB,GAApB,EAAyB,CPyBd,KAAzB,CItCyB,CJsCO,IItChC,EGac,AHbkB,CGaxB,CAAA,wBPyBsD,KAA9B,GAAmC,MItCnE,GAEA,mDJoCA;AACA,AIpCA,ARqQZ,aIjOmB,OAAO,CAAC,OAAR,EAAP;AACH,AJiOT;AW9PoB,AHPR,ARsQZ,iBQtQiB,YAAL;AGQQ,AP8BZ,AJiOR,QIjOY,KAAK,eAAL,KAAyB,kBAAkB,CAAC,aAAhD,EAA+D;AO7BnD,AP8BR,AJiOZ,WIjOiB,CO9BG,EAAA,CAAA,EP8BR,CAAY,CO9BJ,EP8BR,CAAgB,kBAAS,KAAzB,EAAgC,iCAA+B,KAA/B,GAAoC,yEAApE;AACA,AJiOZ,aIjOmB,KAAK,WAAZ;AACH,AJiOT;AACA;AIhOQ,AJiOR,SIjOa,eAAL,GAAuB,kBAAkB,CAAC,aAA1C;AAEA,AJgOR,SIhOa,MAAL,CAAY,GAAZ,CAAgB,kBAAS,KAAzB,EAAgC,yBAAhC;AJiOR;AWnQoB,APoCZ,AJgOR,QIhOY,KAAK,KOpCS,IAAI,KAAJ,CAAU,KPoC5B,EAA+B,uEOpCb,CAAN;APqCR,AJgOZ;AI/NY,AJgOZ;AI/NY,AIhDP,ARgRL,GQjTiB;AJkFL,AJgOZ,WIhOiB,MAAL,CAAY,GAAZ,CAAgB,kBAAS,KAAzB,EAAgC,+DAAhC;AAEA,AIjDA,ARgRZ,EQhRY,IJiDA,YAAY,CAAC,GIjDb,CAAA,CJiDkB,QIjDlB,CAAA,WJiDY,CAAZ,AIjDA,GAAR,YAAA;AJkDQ,AIjDJ,ARgRR,QQhRY,GJiDK,EIjDA,OAAT,EAAkB,SJiDd,GAA4B,SAA5B;AAEA,AIlDA,ARgRZ,UQhRgB,CJkDC,SIlDS,GAAG,CJkDjB,8CIlDA;AGQQ,AP2CR,AJ8NZ,YWzQoB,CP2CD,OAAO,CAAC,OAAR,CO3CkB,CP2CzB,EO3CuD,IAA/C;AACA,AP2CX,AInDG,ARiRZ,UQjRgB,EGQI,GHRC,MGQQ,GAAG,CAAZ,AHRR,EAAqB;AACjB,ARiRhB,QQjRgB,UAAU,IAAI,aAAa,KAAK,UAAhC;AJoDR,AInDK,ARiRb,SI9Na,cAAL;AACA,AJ8NR,SI9Na,gBAAL;AACA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":"signalr_connect.dcff8d4d.js","sourceRoot":"..","sourcesContent":["// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n/** Error thrown when an HTTP request fails. */\r\nexport class HttpError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // tslint:disable-next-line:variable-name\r\n    private __proto__: Error;\r\n\r\n    /** The HTTP status code represented by this error. */\r\n    public statusCode: number;\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     * @param {number} statusCode The HTTP status code represented by this error.\r\n     */\r\n    constructor(errorMessage: string, statusCode: number) {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n        this.statusCode = statusCode;\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n\r\n/** Error thrown when a timeout elapses. */\r\nexport class TimeoutError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // tslint:disable-next-line:variable-name\r\n    private __proto__: Error;\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.TimeoutError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    constructor(errorMessage: string = \"A timeout occurred.\") {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n\r\n/** Error thrown when an action is aborted. */\r\nexport class AbortError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // tslint:disable-next-line:variable-name\r\n    private __proto__: Error;\r\n\r\n    /** Constructs a new instance of {@link AbortError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    constructor(errorMessage: string = \"An abort occurred.\") {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { AbortSignal } from \"./AbortController\";\r\nimport { MessageHeaders } from \"./IHubProtocol\";\r\n\r\n/** Represents an HTTP request. */\r\nexport interface HttpRequest {\r\n    /** The HTTP method to use for the request. */\r\n    method?: string;\r\n\r\n    /** The URL for the request. */\r\n    url?: string;\r\n\r\n    /** The body content for the request. May be a string or an ArrayBuffer (for binary data). */\r\n    content?: string | ArrayBuffer;\r\n\r\n    /** An object describing headers to apply to the request. */\r\n    headers?: MessageHeaders;\r\n\r\n    /** The XMLHttpRequestResponseType to apply to the request. */\r\n    responseType?: XMLHttpRequestResponseType;\r\n\r\n    /** An AbortSignal that can be monitored for cancellation. */\r\n    abortSignal?: AbortSignal;\r\n\r\n    /** The time to wait for the request to complete before throwing a TimeoutError. Measured in milliseconds. */\r\n    timeout?: number;\r\n\r\n    /** This controls whether credentials such as cookies are sent in cross-site requests. */\r\n    withCredentials?: boolean;\r\n}\r\n\r\n/** Represents an HTTP response. */\r\nexport class HttpResponse {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     */\r\n    constructor(statusCode: number);\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code and message.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     * @param {string} statusText The status message of the response.\r\n     */\r\n    constructor(statusCode: number, statusText: string);\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code, message and string content.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     * @param {string} statusText The status message of the response.\r\n     * @param {string} content The content of the response.\r\n     */\r\n    constructor(statusCode: number, statusText: string, content: string);\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code, message and binary content.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     * @param {string} statusText The status message of the response.\r\n     * @param {ArrayBuffer} content The content of the response.\r\n     */\r\n    constructor(statusCode: number, statusText: string, content: ArrayBuffer);\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code, message and binary content.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     * @param {string} statusText The status message of the response.\r\n     * @param {string | ArrayBuffer} content The content of the response.\r\n     */\r\n    constructor(statusCode: number, statusText: string, content: string | ArrayBuffer);\r\n    constructor(\r\n        public readonly statusCode: number,\r\n        public readonly statusText?: string,\r\n        public readonly content?: string | ArrayBuffer) {\r\n    }\r\n}\r\n\r\n/** Abstraction over an HTTP client.\r\n *\r\n * This class provides an abstraction over an HTTP client so that a different implementation can be provided on different platforms.\r\n */\r\nexport abstract class HttpClient {\r\n    /** Issues an HTTP GET request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public get(url: string): Promise<HttpResponse>;\r\n\r\n    /** Issues an HTTP GET request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @param {HttpRequest} options Additional options to configure the request. The 'url' field in this object will be overridden by the url parameter.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public get(url: string, options: HttpRequest): Promise<HttpResponse>;\r\n    public get(url: string, options?: HttpRequest): Promise<HttpResponse> {\r\n        return this.send({\r\n            ...options,\r\n            method: \"GET\",\r\n            url,\r\n        });\r\n    }\r\n\r\n    /** Issues an HTTP POST request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public post(url: string): Promise<HttpResponse>;\r\n\r\n    /** Issues an HTTP POST request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @param {HttpRequest} options Additional options to configure the request. The 'url' field in this object will be overridden by the url parameter.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public post(url: string, options: HttpRequest): Promise<HttpResponse>;\r\n    public post(url: string, options?: HttpRequest): Promise<HttpResponse> {\r\n        return this.send({\r\n            ...options,\r\n            method: \"POST\",\r\n            url,\r\n        });\r\n    }\r\n\r\n    /** Issues an HTTP DELETE request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public delete(url: string): Promise<HttpResponse>;\r\n\r\n    /** Issues an HTTP DELETE request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @param {HttpRequest} options Additional options to configure the request. The 'url' field in this object will be overridden by the url parameter.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public delete(url: string, options: HttpRequest): Promise<HttpResponse>;\r\n    public delete(url: string, options?: HttpRequest): Promise<HttpResponse> {\r\n        return this.send({\r\n            ...options,\r\n            method: \"DELETE\",\r\n            url,\r\n        });\r\n    }\r\n\r\n    /** Issues an HTTP request to the specified URL, returning a {@link Promise} that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {HttpRequest} request An {@link @microsoft/signalr.HttpRequest} describing the request to send.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an HttpResponse describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public abstract send(request: HttpRequest): Promise<HttpResponse>;\r\n\r\n    /** Gets all cookies that apply to the specified URL.\r\n     *\r\n     * @param url The URL that the cookies are valid for.\r\n     * @returns {string} A string containing all the key-value cookie pairs for the specified URL.\r\n     */\r\n    // @ts-ignore\r\n    public getCookieString(url: string): string {\r\n        return \"\";\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// These values are designed to match the ASP.NET Log Levels since that's the pattern we're emulating here.\r\n/** Indicates the severity of a log message.\r\n *\r\n * Log Levels are ordered in increasing severity. So `Debug` is more severe than `Trace`, etc.\r\n */\r\nexport enum LogLevel {\r\n    /** Log level for very low severity diagnostic messages. */\r\n    Trace = 0,\r\n    /** Log level for low severity diagnostic messages. */\r\n    Debug = 1,\r\n    /** Log level for informational diagnostic messages. */\r\n    Information = 2,\r\n    /** Log level for diagnostic messages that indicate a non-fatal problem. */\r\n    Warning = 3,\r\n    /** Log level for diagnostic messages that indicate a failure in the current operation. */\r\n    Error = 4,\r\n    /** Log level for diagnostic messages that indicate a failure that will terminate the entire application. */\r\n    Critical = 5,\r\n    /** The highest possible log level. Used when configuring logging to indicate that no log messages should be emitted. */\r\n    None = 6,\r\n}\r\n\r\n/** An abstraction that provides a sink for diagnostic messages. */\r\nexport interface ILogger {\r\n    /** Called by the framework to emit a diagnostic message.\r\n     *\r\n     * @param {LogLevel} logLevel The severity level of the message.\r\n     * @param {string} message The message.\r\n     */\r\n    log(logLevel: LogLevel, message: string): void;\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\n\r\n/** A logger that does nothing when log messages are sent to it. */\r\nexport class NullLogger implements ILogger {\r\n    /** The singleton instance of the {@link @microsoft/signalr.NullLogger}. */\r\n    public static instance: ILogger = new NullLogger();\r\n\r\n    private constructor() {}\r\n\r\n    /** @inheritDoc */\r\n    // tslint:disable-next-line\r\n    public log(_logLevel: LogLevel, _message: string): void {\r\n    }\r\n}\r\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { MessageHeaders } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { IStreamSubscriber, ISubscription } from \"./Stream\";\r\nimport { Subject } from \"./Subject\";\r\n\r\n// Version token that will be replaced by the prepack command\r\n/** The version of the SignalR client. */\r\nexport const VERSION: string = \"0.0.0-DEV_BUILD\";\r\n\r\n/** @private */\r\nexport class Arg {\r\n    public static isRequired(val: any, name: string): void {\r\n        if (val === null || val === undefined) {\r\n            throw new Error(`The '${name}' argument is required.`);\r\n        }\r\n    }\r\n    public static isNotEmpty(val: string, name: string): void {\r\n        if (!val || val.match(/^\\s*$/)) {\r\n            throw new Error(`The '${name}' argument should not be empty.`);\r\n        }\r\n    }\r\n\r\n    public static isIn(val: any, values: any, name: string): void {\r\n        // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.\r\n        if (!(val in values)) {\r\n            throw new Error(`Unknown ${name} value: ${val}.`);\r\n        }\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport class Platform {\r\n    public static get isBrowser(): boolean {\r\n        return typeof window === \"object\";\r\n    }\r\n\r\n    public static get isWebWorker(): boolean {\r\n        return typeof self === \"object\" && \"importScripts\" in self;\r\n    }\r\n\r\n    public static get isNode(): boolean {\r\n        return !this.isBrowser && !this.isWebWorker;\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport function getDataDetail(data: any, includeContent: boolean): string {\r\n    let detail = \"\";\r\n    if (isArrayBuffer(data)) {\r\n        detail = `Binary data of length ${data.byteLength}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${formatArrayBuffer(data)}'`;\r\n        }\r\n    } else if (typeof data === \"string\") {\r\n        detail = `String data of length ${data.length}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${data}'`;\r\n        }\r\n    }\r\n    return detail;\r\n}\r\n\r\n/** @private */\r\nexport function formatArrayBuffer(data: ArrayBuffer): string {\r\n    const view = new Uint8Array(data);\r\n\r\n    // Uint8Array.map only supports returning another Uint8Array?\r\n    let str = \"\";\r\n    view.forEach((num) => {\r\n        const pad = num < 16 ? \"0\" : \"\";\r\n        str += `0x${pad}${num.toString(16)} `;\r\n    });\r\n\r\n    // Trim of trailing space.\r\n    return str.substr(0, str.length - 1);\r\n}\r\n\r\n// Also in signalr-protocol-msgpack/Utils.ts\r\n/** @private */\r\nexport function isArrayBuffer(val: any): val is ArrayBuffer {\r\n    return val && typeof ArrayBuffer !== \"undefined\" &&\r\n        (val instanceof ArrayBuffer ||\r\n            // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\r\n            (val.constructor && val.constructor.name === \"ArrayBuffer\"));\r\n}\r\n\r\n/** @private */\r\nexport async function sendMessage(logger: ILogger, transportName: string, httpClient: HttpClient, url: string, accessTokenFactory: (() => string | Promise<string>) | undefined,\r\n                                  content: string | ArrayBuffer, logMessageContent: boolean, withCredentials: boolean, defaultHeaders: MessageHeaders): Promise<void> {\r\n    let headers = {};\r\n    if (accessTokenFactory) {\r\n        const token = await accessTokenFactory();\r\n        if (token) {\r\n            headers = {\r\n                [\"Authorization\"]: `Bearer ${token}`,\r\n            };\r\n        }\r\n    }\r\n\r\n    const [name, value] = getUserAgentHeader();\r\n    headers[name] = value;\r\n\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) sending data. ${getDataDetail(content, logMessageContent)}.`);\r\n\r\n    const responseType = isArrayBuffer(content) ? \"arraybuffer\" : \"text\";\r\n    const response = await httpClient.post(url, {\r\n        content,\r\n        headers: { ...headers, ...defaultHeaders},\r\n        responseType,\r\n        withCredentials,\r\n    });\r\n\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) request complete. Response status: ${response.statusCode}.`);\r\n}\r\n\r\n/** @private */\r\nexport function createLogger(logger?: ILogger | LogLevel) {\r\n    if (logger === undefined) {\r\n        return new ConsoleLogger(LogLevel.Information);\r\n    }\r\n\r\n    if (logger === null) {\r\n        return NullLogger.instance;\r\n    }\r\n\r\n    if ((logger as ILogger).log) {\r\n        return logger as ILogger;\r\n    }\r\n\r\n    return new ConsoleLogger(logger as LogLevel);\r\n}\r\n\r\n/** @private */\r\nexport class SubjectSubscription<T> implements ISubscription<T> {\r\n    private subject: Subject<T>;\r\n    private observer: IStreamSubscriber<T>;\r\n\r\n    constructor(subject: Subject<T>, observer: IStreamSubscriber<T>) {\r\n        this.subject = subject;\r\n        this.observer = observer;\r\n    }\r\n\r\n    public dispose(): void {\r\n        const index: number = this.subject.observers.indexOf(this.observer);\r\n        if (index > -1) {\r\n            this.subject.observers.splice(index, 1);\r\n        }\r\n\r\n        if (this.subject.observers.length === 0 && this.subject.cancelCallback) {\r\n            this.subject.cancelCallback().catch((_) => { });\r\n        }\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport class ConsoleLogger implements ILogger {\r\n    private readonly minimumLogLevel: LogLevel;\r\n\r\n    // Public for testing purposes.\r\n    public outputConsole: {\r\n        error(message: any): void,\r\n        warn(message: any): void,\r\n        info(message: any): void,\r\n        log(message: any): void,\r\n    };\r\n\r\n    constructor(minimumLogLevel: LogLevel) {\r\n        this.minimumLogLevel = minimumLogLevel;\r\n        this.outputConsole = console;\r\n    }\r\n\r\n    public log(logLevel: LogLevel, message: string): void {\r\n        if (logLevel >= this.minimumLogLevel) {\r\n            switch (logLevel) {\r\n                case LogLevel.Critical:\r\n                case LogLevel.Error:\r\n                    this.outputConsole.error(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\r\n                    break;\r\n                case LogLevel.Warning:\r\n                    this.outputConsole.warn(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\r\n                    break;\r\n                case LogLevel.Information:\r\n                    this.outputConsole.info(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\r\n                    break;\r\n                default:\r\n                    // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\r\n                    this.outputConsole.log(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport function getUserAgentHeader(): [string, string] {\r\n    let userAgentHeaderName = \"X-SignalR-User-Agent\";\r\n    if (Platform.isNode) {\r\n        userAgentHeaderName = \"User-Agent\";\r\n    }\r\n    return [ userAgentHeaderName, constructUserAgent(VERSION, getOsName(), getRuntime(), getRuntimeVersion()) ];\r\n}\r\n\r\n/** @private */\r\nexport function constructUserAgent(version: string, os: string, runtime: string, runtimeVersion: string | undefined): string {\r\n    // Microsoft SignalR/[Version] ([Detailed Version]; [Operating System]; [Runtime]; [Runtime Version])\r\n    let userAgent: string = \"Microsoft SignalR/\";\r\n\r\n    const majorAndMinor = version.split(\".\");\r\n    userAgent += `${majorAndMinor[0]}.${majorAndMinor[1]}`;\r\n    userAgent += ` (${version}; `;\r\n\r\n    if (os && os !== \"\") {\r\n        userAgent += `${os}; `;\r\n    } else {\r\n        userAgent += \"Unknown OS; \";\r\n    }\r\n\r\n    userAgent += `${runtime}`;\r\n\r\n    if (runtimeVersion) {\r\n        userAgent += `; ${runtimeVersion}`;\r\n    } else {\r\n        userAgent += \"; Unknown Runtime Version\";\r\n    }\r\n\r\n    userAgent += \")\";\r\n    return userAgent;\r\n}\r\n\r\nfunction getOsName(): string {\r\n    if (Platform.isNode) {\r\n        switch (process.platform) {\r\n            case \"win32\":\r\n                return \"Windows NT\";\r\n            case \"darwin\":\r\n                return \"macOS\";\r\n            case \"linux\":\r\n                return \"Linux\";\r\n            default:\r\n                return process.platform;\r\n        }\r\n    } else {\r\n        return \"\";\r\n    }\r\n}\r\n\r\nfunction getRuntimeVersion(): string | undefined {\r\n    if (Platform.isNode) {\r\n        return process.versions.node;\r\n    }\r\n    return undefined;\r\n}\r\n\r\nfunction getRuntime(): string {\r\n    if (Platform.isNode) {\r\n        return \"NodeJS\";\r\n    } else {\r\n        return \"Browser\";\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// @ts-ignore: This will be removed from built files and is here to make the types available during dev work\r\nimport * as tough from \"@types/tough-cookie\";\r\n\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { Platform } from \"./Utils\";\r\n\r\nexport class FetchHttpClient extends HttpClient {\r\n    private readonly abortControllerType: { prototype: AbortController, new(): AbortController };\r\n    private readonly fetchType: (input: RequestInfo, init?: RequestInit) => Promise<Response>;\r\n    private readonly jar?: tough.CookieJar;\r\n\r\n    private readonly logger: ILogger;\r\n\r\n    public constructor(logger: ILogger) {\r\n        super();\r\n        this.logger = logger;\r\n\r\n        if (typeof fetch === \"undefined\") {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n\r\n            // Cookies aren't automatically handled in Node so we need to add a CookieJar to preserve cookies across requests\r\n            this.jar = new (requireFunc(\"tough-cookie\")).CookieJar();\r\n            this.fetchType = requireFunc(\"node-fetch\");\r\n\r\n            // node-fetch doesn't have a nice API for getting and setting cookies\r\n            // fetch-cookie will wrap a fetch implementation with a default CookieJar or a provided one\r\n            this.fetchType = requireFunc(\"fetch-cookie\")(this.fetchType, this.jar);\r\n\r\n            // Node needs EventListener methods on AbortController which our custom polyfill doesn't provide\r\n            this.abortControllerType = requireFunc(\"abort-controller\");\r\n        } else {\r\n            this.fetchType = fetch.bind(self);\r\n            this.abortControllerType = AbortController;\r\n        }\r\n    }\r\n\r\n    /** @inheritDoc */\r\n    public async send(request: HttpRequest): Promise<HttpResponse> {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            throw new AbortError();\r\n        }\r\n\r\n        if (!request.method) {\r\n            throw new Error(\"No method defined.\");\r\n        }\r\n        if (!request.url) {\r\n            throw new Error(\"No url defined.\");\r\n        }\r\n\r\n        const abortController = new this.abortControllerType();\r\n\r\n        let error: any;\r\n        // Hook our abortSignal into the abort controller\r\n        if (request.abortSignal) {\r\n            request.abortSignal.onabort = () => {\r\n                abortController.abort();\r\n                error = new AbortError();\r\n            };\r\n        }\r\n\r\n        // If a timeout has been passed in, setup a timeout to call abort\r\n        // Type needs to be any to fit window.setTimeout and NodeJS.setTimeout\r\n        let timeoutId: any = null;\r\n        if (request.timeout) {\r\n            const msTimeout = request.timeout!;\r\n            timeoutId = setTimeout(() => {\r\n                abortController.abort();\r\n                this.logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                error = new TimeoutError();\r\n            }, msTimeout);\r\n        }\r\n\r\n        let response: Response;\r\n        try {\r\n            response = await this.fetchType(request.url!, {\r\n                body: request.content!,\r\n                cache: \"no-cache\",\r\n                credentials: request.withCredentials === true ? \"include\" : \"same-origin\",\r\n                headers: {\r\n                    \"Content-Type\": \"text/plain;charset=UTF-8\",\r\n                    \"X-Requested-With\": \"XMLHttpRequest\",\r\n                    ...request.headers,\r\n                },\r\n                method: request.method!,\r\n                mode: \"cors\",\r\n                redirect: \"manual\",\r\n                signal: abortController.signal,\r\n            });\r\n        } catch (e) {\r\n            if (error) {\r\n                throw error;\r\n            }\r\n            this.logger.log(\r\n                LogLevel.Warning,\r\n                `Error from HTTP request. ${e}.`,\r\n            );\r\n            throw e;\r\n        } finally {\r\n            if (timeoutId) {\r\n                clearTimeout(timeoutId);\r\n            }\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = null;\r\n            }\r\n        }\r\n\r\n        if (!response.ok) {\r\n            throw new HttpError(response.statusText, response.status);\r\n        }\r\n\r\n        const content = deserializeContent(response, request.responseType);\r\n        const payload = await content;\r\n\r\n        return new HttpResponse(\r\n            response.status,\r\n            response.statusText,\r\n            payload,\r\n        );\r\n    }\r\n\r\n    public getCookieString(url: string): string {\r\n        let cookies: string = \"\";\r\n        if (Platform.isNode && this.jar) {\r\n            // @ts-ignore: unused variable\r\n            this.jar.getCookies(url, (e, c) => cookies = c.join(\"; \"));\r\n        }\r\n        return cookies;\r\n    }\r\n}\r\n\r\nfunction deserializeContent(response: Response, responseType?: XMLHttpRequestResponseType): Promise<string | ArrayBuffer> {\r\n    let content;\r\n    switch (responseType) {\r\n        case \"arraybuffer\":\r\n            content = response.arrayBuffer();\r\n            break;\r\n        case \"text\":\r\n            content = response.text();\r\n            break;\r\n        case \"blob\":\r\n        case \"document\":\r\n        case \"json\":\r\n            throw new Error(`${responseType} is not supported.`);\r\n        default:\r\n            content = response.text();\r\n            break;\r\n    }\r\n\r\n    return content;\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\n\r\nexport class XhrHttpClient extends HttpClient {\r\n    private readonly logger: ILogger;\r\n\r\n    public constructor(logger: ILogger) {\r\n        super();\r\n        this.logger = logger;\r\n    }\r\n\r\n    /** @inheritDoc */\r\n    public send(request: HttpRequest): Promise<HttpResponse> {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n\r\n        return new Promise<HttpResponse>((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n\r\n            xhr.open(request.method!, request.url!, true);\r\n            xhr.withCredentials = request.withCredentials === undefined ? true : request.withCredentials;\r\n            xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n            // Explicitly setting the Content-Type header for React Native on Android platform.\r\n            xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\r\n\r\n            const headers = request.headers;\r\n            if (headers) {\r\n                Object.keys(headers)\r\n                    .forEach((header) => {\r\n                        xhr.setRequestHeader(header, headers[header]);\r\n                    });\r\n            }\r\n\r\n            if (request.responseType) {\r\n                xhr.responseType = request.responseType;\r\n            }\r\n\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = () => {\r\n                    xhr.abort();\r\n                    reject(new AbortError());\r\n                };\r\n            }\r\n\r\n            if (request.timeout) {\r\n                xhr.timeout = request.timeout;\r\n            }\r\n\r\n            xhr.onload = () => {\r\n                if (request.abortSignal) {\r\n                    request.abortSignal.onabort = null;\r\n                }\r\n\r\n                if (xhr.status >= 200 && xhr.status < 300) {\r\n                    resolve(new HttpResponse(xhr.status, xhr.statusText, xhr.response || xhr.responseText));\r\n                } else {\r\n                    reject(new HttpError(xhr.statusText, xhr.status));\r\n                }\r\n            };\r\n\r\n            xhr.onerror = () => {\r\n                this.logger.log(LogLevel.Warning, `Error from HTTP request. ${xhr.status}: ${xhr.statusText}.`);\r\n                reject(new HttpError(xhr.statusText, xhr.status));\r\n            };\r\n\r\n            xhr.ontimeout = () => {\r\n                this.logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                reject(new TimeoutError());\r\n            };\r\n\r\n            xhr.send(request.content || \"\");\r\n        });\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { AbortError } from \"./Errors\";\r\nimport { FetchHttpClient } from \"./FetchHttpClient\";\r\nimport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nimport { ILogger } from \"./ILogger\";\r\nimport { Platform } from \"./Utils\";\r\nimport { XhrHttpClient } from \"./XhrHttpClient\";\r\n\r\n/** Default implementation of {@link @microsoft/signalr.HttpClient}. */\r\nexport class DefaultHttpClient extends HttpClient {\r\n    private readonly httpClient: HttpClient;\r\n\r\n    /** Creates a new instance of the {@link @microsoft/signalr.DefaultHttpClient}, using the provided {@link @microsoft/signalr.ILogger} to log messages. */\r\n    public constructor(logger: ILogger) {\r\n        super();\r\n\r\n        if (typeof fetch !== \"undefined\" || Platform.isNode) {\r\n            this.httpClient = new FetchHttpClient(logger);\r\n        } else if (typeof XMLHttpRequest !== \"undefined\") {\r\n            this.httpClient = new XhrHttpClient(logger);\r\n        } else {\r\n            throw new Error(\"No usable HttpClient found.\");\r\n        }\r\n    }\r\n\r\n    /** @inheritDoc */\r\n    public send(request: HttpRequest): Promise<HttpResponse> {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n\r\n        return this.httpClient.send(request);\r\n    }\r\n\r\n    public getCookieString(url: string): string {\r\n        return this.httpClient.getCookieString(url);\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// Not exported from index\r\n/** @private */\r\nexport class TextMessageFormat {\r\n    public static RecordSeparatorCode = 0x1e;\r\n    public static RecordSeparator = String.fromCharCode(TextMessageFormat.RecordSeparatorCode);\r\n\r\n    public static write(output: string): string {\r\n        return `${output}${TextMessageFormat.RecordSeparator}`;\r\n    }\r\n\r\n    public static parse(input: string): string[] {\r\n        if (input[input.length - 1] !== TextMessageFormat.RecordSeparator) {\r\n            throw new Error(\"Message is incomplete.\");\r\n        }\r\n\r\n        const messages = input.split(TextMessageFormat.RecordSeparator);\r\n        messages.pop();\r\n        return messages;\r\n    }\r\n}\r\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\n\r\n/** @private */\r\nexport interface HandshakeRequestMessage {\r\n    readonly protocol: string;\r\n    readonly version: number;\r\n}\r\n\r\n/** @private */\r\nexport interface HandshakeResponseMessage {\r\n    readonly error: string;\r\n    readonly minorVersion: number;\r\n}\r\n\r\n/** @private */\r\nexport class HandshakeProtocol {\r\n    // Handshake request is always JSON\r\n    public writeHandshakeRequest(handshakeRequest: HandshakeRequestMessage): string {\r\n        return TextMessageFormat.write(JSON.stringify(handshakeRequest));\r\n    }\r\n\r\n    public parseHandshakeResponse(data: any): [any, HandshakeResponseMessage] {\r\n        let responseMessage: HandshakeResponseMessage;\r\n        let messageData: string;\r\n        let remainingData: any;\r\n\r\n        if (isArrayBuffer(data) || (typeof Buffer !== \"undefined\" && data instanceof Buffer)) {\r\n            // Format is binary but still need to read JSON text from handshake response\r\n            const binaryData = new Uint8Array(data);\r\n            const separatorIndex = binaryData.indexOf(TextMessageFormat.RecordSeparatorCode);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            const responseLength = separatorIndex + 1;\r\n            messageData = String.fromCharCode.apply(null, binaryData.slice(0, responseLength));\r\n            remainingData = (binaryData.byteLength > responseLength) ? binaryData.slice(responseLength).buffer : null;\r\n        } else {\r\n            const textData: string = data;\r\n            const separatorIndex = textData.indexOf(TextMessageFormat.RecordSeparator);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            const responseLength = separatorIndex + 1;\r\n            messageData = textData.substring(0, responseLength);\r\n            remainingData = (textData.length > responseLength) ? textData.substring(responseLength) : null;\r\n        }\r\n\r\n        // At this point we should have just the single handshake message\r\n        const messages = TextMessageFormat.parse(messageData);\r\n        const response = JSON.parse(messages[0]);\r\n        if (response.type) {\r\n            throw new Error(\"Expected a handshake response from the server.\");\r\n        }\r\n        responseMessage = response;\r\n\r\n        // multiple messages could have arrived with handshake\r\n        // return additional data to be parsed as usual, or null if all parsed\r\n        return [remainingData, responseMessage];\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { ILogger } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\n\r\n/** Defines the type of a Hub Message. */\r\nexport enum MessageType {\r\n    /** Indicates the message is an Invocation message and implements the {@link @microsoft/signalr.InvocationMessage} interface. */\r\n    Invocation = 1,\r\n    /** Indicates the message is a StreamItem message and implements the {@link @microsoft/signalr.StreamItemMessage} interface. */\r\n    StreamItem = 2,\r\n    /** Indicates the message is a Completion message and implements the {@link @microsoft/signalr.CompletionMessage} interface. */\r\n    Completion = 3,\r\n    /** Indicates the message is a Stream Invocation message and implements the {@link @microsoft/signalr.StreamInvocationMessage} interface. */\r\n    StreamInvocation = 4,\r\n    /** Indicates the message is a Cancel Invocation message and implements the {@link @microsoft/signalr.CancelInvocationMessage} interface. */\r\n    CancelInvocation = 5,\r\n    /** Indicates the message is a Ping message and implements the {@link @microsoft/signalr.PingMessage} interface. */\r\n    Ping = 6,\r\n    /** Indicates the message is a Close message and implements the {@link @microsoft/signalr.CloseMessage} interface. */\r\n    Close = 7,\r\n}\r\n\r\n/** Defines a dictionary of string keys and string values representing headers attached to a Hub message. */\r\nexport interface MessageHeaders {\r\n    /** Gets or sets the header with the specified key. */\r\n    [key: string]: string;\r\n}\r\n\r\n/** Union type of all known Hub messages. */\r\nexport type HubMessage =\r\n    InvocationMessage |\r\n    StreamInvocationMessage |\r\n    StreamItemMessage |\r\n    CompletionMessage |\r\n    CancelInvocationMessage |\r\n    PingMessage |\r\n    CloseMessage;\r\n\r\n/** Defines properties common to all Hub messages. */\r\nexport interface HubMessageBase {\r\n    /** A {@link @microsoft/signalr.MessageType} value indicating the type of this message. */\r\n    readonly type: MessageType;\r\n}\r\n\r\n/** Defines properties common to all Hub messages relating to a specific invocation. */\r\nexport interface HubInvocationMessage extends HubMessageBase {\r\n    /** A {@link @microsoft/signalr.MessageHeaders} dictionary containing headers attached to the message. */\r\n    readonly headers?: MessageHeaders;\r\n    /** The ID of the invocation relating to this message.\r\n     *\r\n     * This is expected to be present for {@link @microsoft/signalr.StreamInvocationMessage} and {@link @microsoft/signalr.CompletionMessage}. It may\r\n     * be 'undefined' for an {@link @microsoft/signalr.InvocationMessage} if the sender does not expect a response.\r\n     */\r\n    readonly invocationId?: string;\r\n}\r\n\r\n/** A hub message representing a non-streaming invocation. */\r\nexport interface InvocationMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.Invocation;\r\n    /** The target method name. */\r\n    readonly target: string;\r\n    /** The target method arguments. */\r\n    readonly arguments: any[];\r\n    /** The target methods stream IDs. */\r\n    readonly streamIds?: string[];\r\n}\r\n\r\n/** A hub message representing a streaming invocation. */\r\nexport interface StreamInvocationMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.StreamInvocation;\r\n\r\n    /** The invocation ID. */\r\n    readonly invocationId: string;\r\n    /** The target method name. */\r\n    readonly target: string;\r\n    /** The target method arguments. */\r\n    readonly arguments: any[];\r\n    /** The target methods stream IDs. */\r\n    readonly streamIds?: string[];\r\n}\r\n\r\n/** A hub message representing a single item produced as part of a result stream. */\r\nexport interface StreamItemMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.StreamItem;\r\n\r\n    /** The invocation ID. */\r\n    readonly invocationId: string;\r\n\r\n    /** The item produced by the server. */\r\n    readonly item?: any;\r\n}\r\n\r\n/** A hub message representing the result of an invocation. */\r\nexport interface CompletionMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.Completion;\r\n    /** The invocation ID. */\r\n    readonly invocationId: string;\r\n    /** The error produced by the invocation, if any.\r\n     *\r\n     * Either {@link @microsoft/signalr.CompletionMessage.error} or {@link @microsoft/signalr.CompletionMessage.result} must be defined, but not both.\r\n     */\r\n    readonly error?: string;\r\n    /** The result produced by the invocation, if any.\r\n     *\r\n     * Either {@link @microsoft/signalr.CompletionMessage.error} or {@link @microsoft/signalr.CompletionMessage.result} must be defined, but not both.\r\n     */\r\n    readonly result?: any;\r\n}\r\n\r\n/** A hub message indicating that the sender is still active. */\r\nexport interface PingMessage extends HubMessageBase {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.Ping;\r\n}\r\n\r\n/** A hub message indicating that the sender is closing the connection.\r\n *\r\n * If {@link @microsoft/signalr.CloseMessage.error} is defined, the sender is closing the connection due to an error.\r\n */\r\nexport interface CloseMessage extends HubMessageBase {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.Close;\r\n    /** The error that triggered the close, if any.\r\n     *\r\n     * If this property is undefined, the connection was closed normally and without error.\r\n     */\r\n    readonly error?: string;\r\n\r\n    /** If true, clients with automatic reconnects enabled should attempt to reconnect after receiving the CloseMessage. Otherwise, they should not. */\r\n    readonly allowReconnect?: boolean;\r\n}\r\n\r\n/** A hub message sent to request that a streaming invocation be canceled. */\r\nexport interface CancelInvocationMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.CancelInvocation;\r\n    /** The invocation ID. */\r\n    readonly invocationId: string;\r\n}\r\n\r\n/** A protocol abstraction for communicating with SignalR Hubs.  */\r\nexport interface IHubProtocol {\r\n    /** The name of the protocol. This is used by SignalR to resolve the protocol between the client and server. */\r\n    readonly name: string;\r\n    /** The version of the protocol. */\r\n    readonly version: number;\r\n    /** The {@link @microsoft/signalr.TransferFormat} of the protocol. */\r\n    readonly transferFormat: TransferFormat;\r\n\r\n    /** Creates an array of {@link @microsoft/signalr.HubMessage} objects from the specified serialized representation.\r\n     *\r\n     * If {@link @microsoft/signalr.IHubProtocol.transferFormat} is 'Text', the `input` parameter must be a string, otherwise it must be an ArrayBuffer.\r\n     *\r\n     * @param {string | ArrayBuffer | Buffer} input A string, ArrayBuffer, or Buffer containing the serialized representation.\r\n     * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.\r\n     */\r\n    parseMessages(input: string | ArrayBuffer | Buffer, logger: ILogger): HubMessage[];\r\n\r\n    /** Writes the specified {@link @microsoft/signalr.HubMessage} to a string or ArrayBuffer and returns it.\r\n     *\r\n     * If {@link @microsoft/signalr.IHubProtocol.transferFormat} is 'Text', the result of this method will be a string, otherwise it will be an ArrayBuffer.\r\n     *\r\n     * @param {HubMessage} message The message to write.\r\n     * @returns {string | ArrayBuffer} A string or ArrayBuffer containing the serialized representation of the message.\r\n     */\r\n    writeMessage(message: HubMessage): string | ArrayBuffer;\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { IStreamResult, IStreamSubscriber, ISubscription } from \"./Stream\";\r\nimport { SubjectSubscription } from \"./Utils\";\r\n\r\n/** Stream implementation to stream items to the server. */\r\nexport class Subject<T> implements IStreamResult<T> {\r\n    /** @internal */\r\n    public observers: Array<IStreamSubscriber<T>>;\r\n\r\n    /** @internal */\r\n    public cancelCallback?: () => Promise<void>;\r\n\r\n    constructor() {\r\n        this.observers = [];\r\n    }\r\n\r\n    public next(item: T): void {\r\n        for (const observer of this.observers) {\r\n            observer.next(item);\r\n        }\r\n    }\r\n\r\n    public error(err: any): void {\r\n        for (const observer of this.observers) {\r\n            if (observer.error) {\r\n                observer.error(err);\r\n            }\r\n        }\r\n    }\r\n\r\n    public complete(): void {\r\n        for (const observer of this.observers) {\r\n            if (observer.complete) {\r\n                observer.complete();\r\n            }\r\n        }\r\n    }\r\n\r\n    public subscribe(observer: IStreamSubscriber<T>): ISubscription<T> {\r\n        this.observers.push(observer);\r\n        return new SubjectSubscription(this, observer);\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { HandshakeProtocol, HandshakeRequestMessage, HandshakeResponseMessage } from \"./HandshakeProtocol\";\r\nimport { IConnection } from \"./IConnection\";\r\nimport { CancelInvocationMessage, CompletionMessage, IHubProtocol, InvocationMessage, MessageType, StreamInvocationMessage, StreamItemMessage } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { IRetryPolicy } from \"./IRetryPolicy\";\r\nimport { IStreamResult } from \"./Stream\";\r\nimport { Subject } from \"./Subject\";\r\nimport { Arg } from \"./Utils\";\r\n\r\nconst DEFAULT_TIMEOUT_IN_MS: number = 30 * 1000;\r\nconst DEFAULT_PING_INTERVAL_IN_MS: number = 15 * 1000;\r\n\r\n/** Describes the current state of the {@link HubConnection} to the server. */\r\nexport enum HubConnectionState {\r\n    /** The hub connection is disconnected. */\r\n    Disconnected = \"Disconnected\",\r\n    /** The hub connection is connecting. */\r\n    Connecting = \"Connecting\",\r\n    /** The hub connection is connected. */\r\n    Connected = \"Connected\",\r\n    /** The hub connection is disconnecting. */\r\n    Disconnecting = \"Disconnecting\",\r\n    /** The hub connection is reconnecting. */\r\n    Reconnecting = \"Reconnecting\",\r\n}\r\n\r\n/** Represents a connection to a SignalR Hub. */\r\nexport class HubConnection {\r\n    private readonly cachedPingMessage: string | ArrayBuffer;\r\n    private readonly connection: IConnection;\r\n    private readonly logger: ILogger;\r\n    private readonly reconnectPolicy?: IRetryPolicy;\r\n    private protocol: IHubProtocol;\r\n    private handshakeProtocol: HandshakeProtocol;\r\n    private callbacks: { [invocationId: string]: (invocationEvent: StreamItemMessage | CompletionMessage | null, error?: Error) => void };\r\n    private methods: { [name: string]: Array<(...args: any[]) => void> };\r\n    private invocationId: number;\r\n\r\n    private closedCallbacks: Array<(error?: Error) => void>;\r\n    private reconnectingCallbacks: Array<(error?: Error) => void>;\r\n    private reconnectedCallbacks: Array<(connectionId?: string) => void>;\r\n\r\n    private receivedHandshakeResponse: boolean;\r\n    private handshakeResolver!: (value?: PromiseLike<{}>) => void;\r\n    private handshakeRejecter!: (reason?: any) => void;\r\n    private stopDuringStartError?: Error;\r\n\r\n    private connectionState: HubConnectionState;\r\n    // connectionStarted is tracked independently from connectionState, so we can check if the\r\n    // connection ever did successfully transition from connecting to connected before disconnecting.\r\n    private connectionStarted: boolean;\r\n    private startPromise?: Promise<void>;\r\n    private stopPromise?: Promise<void>;\r\n    private nextKeepAlive: number = 0;\r\n\r\n    // The type of these a) doesn't matter and b) varies when building in browser and node contexts\r\n    // Since we're building the WebPack bundle directly from the TypeScript, this matters (previously\r\n    // we built the bundle from the compiled JavaScript).\r\n    private reconnectDelayHandle?: any;\r\n    private timeoutHandle?: any;\r\n    private pingServerHandle?: any;\r\n\r\n    /** The server timeout in milliseconds.\r\n     *\r\n     * If this timeout elapses without receiving any messages from the server, the connection will be terminated with an error.\r\n     * The default timeout value is 30,000 milliseconds (30 seconds).\r\n     */\r\n    public serverTimeoutInMilliseconds: number;\r\n\r\n    /** Default interval at which to ping the server.\r\n     *\r\n     * The default value is 15,000 milliseconds (15 seconds).\r\n     * Allows the server to detect hard disconnects (like when a client unplugs their computer).\r\n     * The ping will happen at most as often as the server pings.\r\n     * If the server pings every 5 seconds, a value lower than 5 will ping every 5 seconds.\r\n     */\r\n    public keepAliveIntervalInMilliseconds: number;\r\n\r\n    /** @internal */\r\n    // Using a public static factory method means we can have a private constructor and an _internal_\r\n    // create method that can be used by HubConnectionBuilder. An \"internal\" constructor would just\r\n    // be stripped away and the '.d.ts' file would have no constructor, which is interpreted as a\r\n    // public parameter-less constructor.\r\n    public static create(connection: IConnection, logger: ILogger, protocol: IHubProtocol, reconnectPolicy?: IRetryPolicy): HubConnection {\r\n        return new HubConnection(connection, logger, protocol, reconnectPolicy);\r\n    }\r\n\r\n    private constructor(connection: IConnection, logger: ILogger, protocol: IHubProtocol, reconnectPolicy?: IRetryPolicy) {\r\n        Arg.isRequired(connection, \"connection\");\r\n        Arg.isRequired(logger, \"logger\");\r\n        Arg.isRequired(protocol, \"protocol\");\r\n\r\n        this.serverTimeoutInMilliseconds = DEFAULT_TIMEOUT_IN_MS;\r\n        this.keepAliveIntervalInMilliseconds = DEFAULT_PING_INTERVAL_IN_MS;\r\n\r\n        this.logger = logger;\r\n        this.protocol = protocol;\r\n        this.connection = connection;\r\n        this.reconnectPolicy = reconnectPolicy;\r\n        this.handshakeProtocol = new HandshakeProtocol();\r\n\r\n        this.connection.onreceive = (data: any) => this.processIncomingData(data);\r\n        this.connection.onclose = (error?: Error) => this.connectionClosed(error);\r\n\r\n        this.callbacks = {};\r\n        this.methods = {};\r\n        this.closedCallbacks = [];\r\n        this.reconnectingCallbacks = [];\r\n        this.reconnectedCallbacks = [];\r\n        this.invocationId = 0;\r\n        this.receivedHandshakeResponse = false;\r\n        this.connectionState = HubConnectionState.Disconnected;\r\n        this.connectionStarted = false;\r\n\r\n        this.cachedPingMessage = this.protocol.writeMessage({ type: MessageType.Ping });\r\n    }\r\n\r\n    /** Indicates the state of the {@link HubConnection} to the server. */\r\n    get state(): HubConnectionState {\r\n        return this.connectionState;\r\n    }\r\n\r\n    /** Represents the connection id of the {@link HubConnection} on the server. The connection id will be null when the connection is either\r\n     *  in the disconnected state or if the negotiation step was skipped.\r\n     */\r\n    get connectionId(): string | null {\r\n        return this.connection ? (this.connection.connectionId || null) : null;\r\n    }\r\n\r\n    /** Indicates the url of the {@link HubConnection} to the server. */\r\n    get baseUrl(): string {\r\n        return this.connection.baseUrl || \"\";\r\n    }\r\n\r\n    /**\r\n     * Sets a new url for the HubConnection. Note that the url can only be changed when the connection is in either the Disconnected or\r\n     * Reconnecting states.\r\n     * @param {string} url The url to connect to.\r\n     */\r\n    set baseUrl(url: string) {\r\n        if (this.connectionState !== HubConnectionState.Disconnected && this.connectionState !== HubConnectionState.Reconnecting) {\r\n            throw new Error(\"The HubConnection must be in the Disconnected or Reconnecting state to change the url.\");\r\n        }\r\n\r\n        if (!url) {\r\n            throw new Error(\"The HubConnection url must be a valid url.\");\r\n        }\r\n\r\n        this.connection.baseUrl = url;\r\n    }\r\n\r\n    /** Starts the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully established, or rejects with an error.\r\n     */\r\n    public start(): Promise<void> {\r\n        this.startPromise = this.startWithStateTransitions();\r\n        return this.startPromise;\r\n    }\r\n\r\n    private async startWithStateTransitions(): Promise<void> {\r\n        if (this.connectionState !== HubConnectionState.Disconnected) {\r\n            return Promise.reject(new Error(\"Cannot start a HubConnection that is not in the 'Disconnected' state.\"));\r\n        }\r\n\r\n        this.connectionState = HubConnectionState.Connecting;\r\n        this.logger.log(LogLevel.Debug, \"Starting HubConnection.\");\r\n\r\n        try {\r\n            await this.startInternal();\r\n\r\n            this.connectionState = HubConnectionState.Connected;\r\n            this.connectionStarted = true;\r\n            this.logger.log(LogLevel.Debug, \"HubConnection connected successfully.\");\r\n        } catch (e) {\r\n            this.connectionState = HubConnectionState.Disconnected;\r\n            this.logger.log(LogLevel.Debug, `HubConnection failed to start successfully because of error '${e}'.`);\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n\r\n    private async startInternal() {\r\n        this.stopDuringStartError = undefined;\r\n        this.receivedHandshakeResponse = false;\r\n        // Set up the promise before any connection is (re)started otherwise it could race with received messages\r\n        const handshakePromise = new Promise((resolve, reject) => {\r\n            this.handshakeResolver = resolve;\r\n            this.handshakeRejecter = reject;\r\n        });\r\n\r\n        await this.connection.start(this.protocol.transferFormat);\r\n\r\n        try {\r\n            const handshakeRequest: HandshakeRequestMessage = {\r\n                protocol: this.protocol.name,\r\n                version: this.protocol.version,\r\n            };\r\n\r\n            this.logger.log(LogLevel.Debug, \"Sending handshake request.\");\r\n\r\n            await this.sendMessage(this.handshakeProtocol.writeHandshakeRequest(handshakeRequest));\r\n\r\n            this.logger.log(LogLevel.Information, `Using HubProtocol '${this.protocol.name}'.`);\r\n\r\n            // defensively cleanup timeout in case we receive a message from the server before we finish start\r\n            this.cleanupTimeout();\r\n            this.resetTimeoutPeriod();\r\n            this.resetKeepAliveInterval();\r\n\r\n            await handshakePromise;\r\n\r\n            // It's important to check the stopDuringStartError instead of just relying on the handshakePromise\r\n            // being rejected on close, because this continuation can run after both the handshake completed successfully\r\n            // and the connection was closed.\r\n            if (this.stopDuringStartError) {\r\n                // It's important to throw instead of returning a rejected promise, because we don't want to allow any state\r\n                // transitions to occur between now and the calling code observing the exceptions. Returning a rejected promise\r\n                // will cause the calling continuation to get scheduled to run later.\r\n                throw this.stopDuringStartError;\r\n            }\r\n        } catch (e) {\r\n            this.logger.log(LogLevel.Debug, `Hub handshake failed with error '${e}' during start(). Stopping HubConnection.`);\r\n\r\n            this.cleanupTimeout();\r\n            this.cleanupPingTimer();\r\n\r\n            // HttpConnection.stop() should not complete until after the onclose callback is invoked.\r\n            // This will transition the HubConnection to the disconnected state before HttpConnection.stop() completes.\r\n            await this.connection.stop(e);\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    /** Stops the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully terminated, or rejects with an error.\r\n     */\r\n    public async stop(): Promise<void> {\r\n        // Capture the start promise before the connection might be restarted in an onclose callback.\r\n        const startPromise = this.startPromise;\r\n\r\n        this.stopPromise = this.stopInternal();\r\n        await this.stopPromise;\r\n\r\n        try {\r\n            // Awaiting undefined continues immediately\r\n            await startPromise;\r\n        } catch (e) {\r\n            // This exception is returned to the user as a rejected Promise from the start method.\r\n        }\r\n    }\r\n\r\n    private stopInternal(error?: Error): Promise<void> {\r\n        if (this.connectionState === HubConnectionState.Disconnected) {\r\n            this.logger.log(LogLevel.Debug, `Call to HubConnection.stop(${error}) ignored because it is already in the disconnected state.`);\r\n            return Promise.resolve();\r\n        }\r\n\r\n        if (this.connectionState === HubConnectionState.Disconnecting) {\r\n            this.logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnecting state.`);\r\n            return this.stopPromise!;\r\n        }\r\n\r\n        this.connectionState = HubConnectionState.Disconnecting;\r\n\r\n        this.logger.log(LogLevel.Debug, \"Stopping HubConnection.\");\r\n\r\n        if (this.reconnectDelayHandle) {\r\n            // We're in a reconnect delay which means the underlying connection is currently already stopped.\r\n            // Just clear the handle to stop the reconnect loop (which no one is waiting on thankfully) and\r\n            // fire the onclose callbacks.\r\n            this.logger.log(LogLevel.Debug, \"Connection stopped during reconnect delay. Done reconnecting.\");\r\n\r\n            clearTimeout(this.reconnectDelayHandle);\r\n            this.reconnectDelayHandle = undefined;\r\n\r\n            this.completeClose();\r\n            return Promise.resolve();\r\n        }\r\n\r\n        this.cleanupTimeout();\r\n        this.cleanupPingTimer();\r\n        this.stopDuringStartError = error || new Error(\"The connection was stopped before the hub handshake could complete.\");\r\n\r\n        // HttpConnection.stop() should not complete until after either HttpConnection.start() fails\r\n        // or the onclose callback is invoked. The onclose callback will transition the HubConnection\r\n        // to the disconnected state if need be before HttpConnection.stop() completes.\r\n        return this.connection.stop(error);\r\n    }\r\n\r\n    /** Invokes a streaming hub method on the server using the specified name and arguments.\r\n     *\r\n     * @typeparam T The type of the items returned by the server.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {IStreamResult<T>} An object that yields results from the server as they are received.\r\n     */\r\n    public stream<T = any>(methodName: string, ...args: any[]): IStreamResult<T> {\r\n        const [streams, streamIds] = this.replaceStreamingParams(args);\r\n        const invocationDescriptor = this.createStreamInvocation(methodName, args, streamIds);\r\n\r\n        let promiseQueue: Promise<void>;\r\n        const subject = new Subject<T>();\r\n        subject.cancelCallback = () => {\r\n            const cancelInvocation: CancelInvocationMessage = this.createCancelInvocation(invocationDescriptor.invocationId);\r\n\r\n            delete this.callbacks[invocationDescriptor.invocationId];\r\n\r\n            return promiseQueue.then(() => {\r\n                return this.sendWithProtocol(cancelInvocation);\r\n            });\r\n        };\r\n\r\n        this.callbacks[invocationDescriptor.invocationId] = (invocationEvent: CompletionMessage | StreamItemMessage | null, error?: Error) => {\r\n            if (error) {\r\n                subject.error(error);\r\n                return;\r\n            } else if (invocationEvent) {\r\n                // invocationEvent will not be null when an error is not passed to the callback\r\n                if (invocationEvent.type === MessageType.Completion) {\r\n                    if (invocationEvent.error) {\r\n                        subject.error(new Error(invocationEvent.error));\r\n                    } else {\r\n                        subject.complete();\r\n                    }\r\n                } else {\r\n                    subject.next((invocationEvent.item) as T);\r\n                }\r\n            }\r\n        };\r\n\r\n        promiseQueue = this.sendWithProtocol(invocationDescriptor)\r\n            .catch((e) => {\r\n                subject.error(e);\r\n                delete this.callbacks[invocationDescriptor.invocationId];\r\n            });\r\n\r\n        this.launchStreams(streams, promiseQueue);\r\n\r\n        return subject;\r\n    }\r\n\r\n    private sendMessage(message: any) {\r\n        this.resetKeepAliveInterval();\r\n        return this.connection.send(message);\r\n    }\r\n\r\n    /**\r\n     * Sends a js object to the server.\r\n     * @param message The js object to serialize and send.\r\n     */\r\n    private sendWithProtocol(message: any) {\r\n        return this.sendMessage(this.protocol.writeMessage(message));\r\n    }\r\n\r\n    /** Invokes a hub method on the server using the specified name and arguments. Does not wait for a response from the receiver.\r\n     *\r\n     * The Promise returned by this method resolves when the client has sent the invocation to the server. The server may still\r\n     * be processing the invocation.\r\n     *\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<void>} A Promise that resolves when the invocation has been successfully sent, or rejects with an error.\r\n     */\r\n    public send(methodName: string, ...args: any[]): Promise<void> {\r\n        const [streams, streamIds] = this.replaceStreamingParams(args);\r\n        const sendPromise = this.sendWithProtocol(this.createInvocation(methodName, args, true, streamIds));\r\n\r\n        this.launchStreams(streams, sendPromise);\r\n\r\n        return sendPromise;\r\n    }\r\n\r\n    /** Invokes a hub method on the server using the specified name and arguments.\r\n     *\r\n     * The Promise returned by this method resolves when the server indicates it has finished invoking the method. When the promise\r\n     * resolves, the server has finished invoking the method. If the server method returns a result, it is produced as the result of\r\n     * resolving the Promise.\r\n     *\r\n     * @typeparam T The expected return type.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<T>} A Promise that resolves with the result of the server method (if any), or rejects with an error.\r\n     */\r\n    public invoke<T = any>(methodName: string, ...args: any[]): Promise<T> {\r\n        const [streams, streamIds] = this.replaceStreamingParams(args);\r\n        const invocationDescriptor = this.createInvocation(methodName, args, false, streamIds);\r\n\r\n        const p = new Promise<any>((resolve, reject) => {\r\n            // invocationId will always have a value for a non-blocking invocation\r\n            this.callbacks[invocationDescriptor.invocationId!] = (invocationEvent: StreamItemMessage | CompletionMessage | null, error?: Error) => {\r\n                if (error) {\r\n                    reject(error);\r\n                    return;\r\n                } else if (invocationEvent) {\r\n                    // invocationEvent will not be null when an error is not passed to the callback\r\n                    if (invocationEvent.type === MessageType.Completion) {\r\n                        if (invocationEvent.error) {\r\n                            reject(new Error(invocationEvent.error));\r\n                        } else {\r\n                            resolve(invocationEvent.result);\r\n                        }\r\n                    } else {\r\n                        reject(new Error(`Unexpected message type: ${invocationEvent.type}`));\r\n                    }\r\n                }\r\n            };\r\n\r\n            const promiseQueue = this.sendWithProtocol(invocationDescriptor)\r\n                .catch((e) => {\r\n                    reject(e);\r\n                    // invocationId will always have a value for a non-blocking invocation\r\n                    delete this.callbacks[invocationDescriptor.invocationId!];\r\n                });\r\n\r\n            this.launchStreams(streams, promiseQueue);\r\n        });\r\n\r\n        return p;\r\n    }\r\n\r\n    /** Registers a handler that will be invoked when the hub method with the specified method name is invoked.\r\n     *\r\n     * @param {string} methodName The name of the hub method to define.\r\n     * @param {Function} newMethod The handler that will be raised when the hub method is invoked.\r\n     */\r\n    public on(methodName: string, newMethod: (...args: any[]) => void) {\r\n        if (!methodName || !newMethod) {\r\n            return;\r\n        }\r\n\r\n        methodName = methodName.toLowerCase();\r\n        if (!this.methods[methodName]) {\r\n            this.methods[methodName] = [];\r\n        }\r\n\r\n        // Preventing adding the same handler multiple times.\r\n        if (this.methods[methodName].indexOf(newMethod) !== -1) {\r\n            return;\r\n        }\r\n\r\n        this.methods[methodName].push(newMethod);\r\n    }\r\n\r\n    /** Removes all handlers for the specified hub method.\r\n     *\r\n     * @param {string} methodName The name of the method to remove handlers for.\r\n     */\r\n    public off(methodName: string): void;\r\n\r\n    /** Removes the specified handler for the specified hub method.\r\n     *\r\n     * You must pass the exact same Function instance as was previously passed to {@link @microsoft/signalr.HubConnection.on}. Passing a different instance (even if the function\r\n     * body is the same) will not remove the handler.\r\n     *\r\n     * @param {string} methodName The name of the method to remove handlers for.\r\n     * @param {Function} method The handler to remove. This must be the same Function instance as the one passed to {@link @microsoft/signalr.HubConnection.on}.\r\n     */\r\n    public off(methodName: string, method: (...args: any[]) => void): void;\r\n    public off(methodName: string, method?: (...args: any[]) => void): void {\r\n        if (!methodName) {\r\n            return;\r\n        }\r\n\r\n        methodName = methodName.toLowerCase();\r\n        const handlers = this.methods[methodName];\r\n        if (!handlers) {\r\n            return;\r\n        }\r\n        if (method) {\r\n            const removeIdx = handlers.indexOf(method);\r\n            if (removeIdx !== -1) {\r\n                handlers.splice(removeIdx, 1);\r\n                if (handlers.length === 0) {\r\n                    delete this.methods[methodName];\r\n                }\r\n            }\r\n        } else {\r\n            delete this.methods[methodName];\r\n        }\r\n\r\n    }\r\n\r\n    /** Registers a handler that will be invoked when the connection is closed.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection is closed. Optionally receives a single argument containing the error that caused the connection to close (if any).\r\n     */\r\n    public onclose(callback: (error?: Error) => void) {\r\n        if (callback) {\r\n            this.closedCallbacks.push(callback);\r\n        }\r\n    }\r\n\r\n    /** Registers a handler that will be invoked when the connection starts reconnecting.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection starts reconnecting. Optionally receives a single argument containing the error that caused the connection to start reconnecting (if any).\r\n     */\r\n    public onreconnecting(callback: (error?: Error) => void) {\r\n        if (callback) {\r\n            this.reconnectingCallbacks.push(callback);\r\n        }\r\n    }\r\n\r\n    /** Registers a handler that will be invoked when the connection successfully reconnects.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection successfully reconnects.\r\n     */\r\n    public onreconnected(callback: (connectionId?: string) => void) {\r\n        if (callback) {\r\n            this.reconnectedCallbacks.push(callback);\r\n        }\r\n    }\r\n\r\n    private processIncomingData(data: any) {\r\n        this.cleanupTimeout();\r\n\r\n        if (!this.receivedHandshakeResponse) {\r\n            data = this.processHandshakeResponse(data);\r\n            this.receivedHandshakeResponse = true;\r\n        }\r\n\r\n        // Data may have all been read when processing handshake response\r\n        if (data) {\r\n            // Parse the messages\r\n            const messages = this.protocol.parseMessages(data, this.logger);\r\n\r\n            for (const message of messages) {\r\n                switch (message.type) {\r\n                    case MessageType.Invocation:\r\n                        this.invokeClientMethod(message);\r\n                        break;\r\n                    case MessageType.StreamItem:\r\n                    case MessageType.Completion:\r\n                        const callback = this.callbacks[message.invocationId];\r\n                        if (callback) {\r\n                            if (message.type === MessageType.Completion) {\r\n                                delete this.callbacks[message.invocationId];\r\n                            }\r\n                            callback(message);\r\n                        }\r\n                        break;\r\n                    case MessageType.Ping:\r\n                        // Don't care about pings\r\n                        break;\r\n                    case MessageType.Close:\r\n                        this.logger.log(LogLevel.Information, \"Close message received from server.\");\r\n\r\n                        const error = message.error ? new Error(\"Server returned an error on close: \" + message.error) : undefined;\r\n\r\n                        if (message.allowReconnect === true) {\r\n                            // It feels wrong not to await connection.stop() here, but processIncomingData is called as part of an onreceive callback which is not async,\r\n                            // this is already the behavior for serverTimeout(), and HttpConnection.Stop() should catch and log all possible exceptions.\r\n\r\n                            // tslint:disable-next-line:no-floating-promises\r\n                            this.connection.stop(error);\r\n                        } else {\r\n                            // We cannot await stopInternal() here, but subsequent calls to stop() will await this if stopInternal() is still ongoing.\r\n                            this.stopPromise = this.stopInternal(error);\r\n                        }\r\n\r\n                        break;\r\n                    default:\r\n                        this.logger.log(LogLevel.Warning, `Invalid message type: ${message.type}.`);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.resetTimeoutPeriod();\r\n    }\r\n\r\n    private processHandshakeResponse(data: any): any {\r\n        let responseMessage: HandshakeResponseMessage;\r\n        let remainingData: any;\r\n\r\n        try {\r\n            [remainingData, responseMessage] = this.handshakeProtocol.parseHandshakeResponse(data);\r\n        } catch (e) {\r\n            const message = \"Error parsing handshake response: \" + e;\r\n            this.logger.log(LogLevel.Error, message);\r\n\r\n            const error = new Error(message);\r\n            this.handshakeRejecter(error);\r\n            throw error;\r\n        }\r\n        if (responseMessage.error) {\r\n            const message = \"Server returned handshake error: \" + responseMessage.error;\r\n            this.logger.log(LogLevel.Error, message);\r\n\r\n            const error = new Error(message);\r\n            this.handshakeRejecter(error);\r\n            throw error;\r\n        } else {\r\n            this.logger.log(LogLevel.Debug, \"Server handshake complete.\");\r\n        }\r\n\r\n        this.handshakeResolver();\r\n        return remainingData;\r\n    }\r\n\r\n    private resetKeepAliveInterval() {\r\n        if (this.connection.features.inherentKeepAlive) {\r\n            return;\r\n        }\r\n\r\n        // Set the time we want the next keep alive to be sent\r\n        // Timer will be setup on next message receive\r\n        this.nextKeepAlive = new Date().getTime() + this.keepAliveIntervalInMilliseconds;\r\n\r\n        this.cleanupPingTimer();\r\n    }\r\n\r\n    private resetTimeoutPeriod() {\r\n        if (!this.connection.features || !this.connection.features.inherentKeepAlive) {\r\n            // Set the timeout timer\r\n            this.timeoutHandle = setTimeout(() => this.serverTimeout(), this.serverTimeoutInMilliseconds);\r\n\r\n            // Set keepAlive timer if there isn't one\r\n            if (this.pingServerHandle === undefined) {\r\n                let nextPing = this.nextKeepAlive - new Date().getTime();\r\n                if (nextPing < 0) {\r\n                    nextPing = 0;\r\n                }\r\n\r\n                // The timer needs to be set from a networking callback to avoid Chrome timer throttling from causing timers to run once a minute\r\n                this.pingServerHandle = setTimeout(async () => {\r\n                    if (this.connectionState === HubConnectionState.Connected) {\r\n                        try {\r\n                            await this.sendMessage(this.cachedPingMessage);\r\n                        } catch {\r\n                            // We don't care about the error. It should be seen elsewhere in the client.\r\n                            // The connection is probably in a bad or closed state now, cleanup the timer so it stops triggering\r\n                            this.cleanupPingTimer();\r\n                        }\r\n                    }\r\n                }, nextPing);\r\n            }\r\n        }\r\n    }\r\n\r\n    private serverTimeout() {\r\n        // The server hasn't talked to us in a while. It doesn't like us anymore ... :(\r\n        // Terminate the connection, but we don't need to wait on the promise. This could trigger reconnecting.\r\n        // tslint:disable-next-line:no-floating-promises\r\n        this.connection.stop(new Error(\"Server timeout elapsed without receiving a message from the server.\"));\r\n    }\r\n\r\n    private invokeClientMethod(invocationMessage: InvocationMessage) {\r\n        const methods = this.methods[invocationMessage.target.toLowerCase()];\r\n        if (methods) {\r\n            try {\r\n                methods.forEach((m) => m.apply(this, invocationMessage.arguments));\r\n            } catch (e) {\r\n                this.logger.log(LogLevel.Error, `A callback for the method ${invocationMessage.target.toLowerCase()} threw error '${e}'.`);\r\n            }\r\n\r\n            if (invocationMessage.invocationId) {\r\n                // This is not supported in v1. So we return an error to avoid blocking the server waiting for the response.\r\n                const message = \"Server requested a response, which is not supported in this version of the client.\";\r\n                this.logger.log(LogLevel.Error, message);\r\n\r\n                // We don't want to wait on the stop itself.\r\n                this.stopPromise = this.stopInternal(new Error(message));\r\n            }\r\n        } else {\r\n            this.logger.log(LogLevel.Warning, `No client method with the name '${invocationMessage.target}' found.`);\r\n        }\r\n    }\r\n\r\n    private connectionClosed(error?: Error) {\r\n        this.logger.log(LogLevel.Debug, `HubConnection.connectionClosed(${error}) called while in state ${this.connectionState}.`);\r\n\r\n        // Triggering this.handshakeRejecter is insufficient because it could already be resolved without the continuation having run yet.\r\n        this.stopDuringStartError = this.stopDuringStartError || error || new Error(\"The underlying connection was closed before the hub handshake could complete.\");\r\n\r\n        // If the handshake is in progress, start will be waiting for the handshake promise, so we complete it.\r\n        // If it has already completed, this should just noop.\r\n        if (this.handshakeResolver) {\r\n            this.handshakeResolver();\r\n        }\r\n\r\n        this.cancelCallbacksWithError(error || new Error(\"Invocation canceled due to the underlying connection being closed.\"));\r\n\r\n        this.cleanupTimeout();\r\n        this.cleanupPingTimer();\r\n\r\n        if (this.connectionState === HubConnectionState.Disconnecting) {\r\n            this.completeClose(error);\r\n        } else if (this.connectionState === HubConnectionState.Connected && this.reconnectPolicy) {\r\n            // tslint:disable-next-line:no-floating-promises\r\n            this.reconnect(error);\r\n        } else if (this.connectionState === HubConnectionState.Connected) {\r\n            this.completeClose(error);\r\n        }\r\n\r\n        // If none of the above if conditions were true were called the HubConnection must be in either:\r\n        // 1. The Connecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail it.\r\n        // 2. The Reconnecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail the current reconnect attempt\r\n        //    and potentially continue the reconnect() loop.\r\n        // 3. The Disconnected state in which case we're already done.\r\n    }\r\n\r\n    private completeClose(error?: Error) {\r\n        if (this.connectionStarted) {\r\n            this.connectionState = HubConnectionState.Disconnected;\r\n            this.connectionStarted = false;\r\n\r\n            try {\r\n                this.closedCallbacks.forEach((c) => c.apply(this, [error]));\r\n            } catch (e) {\r\n                this.logger.log(LogLevel.Error, `An onclose callback called with error '${error}' threw error '${e}'.`);\r\n            }\r\n        }\r\n    }\r\n\r\n    private async reconnect(error?: Error) {\r\n        const reconnectStartTime = Date.now();\r\n        let previousReconnectAttempts = 0;\r\n        let retryError = error !== undefined ? error : new Error(\"Attempting to reconnect due to a unknown error.\");\r\n\r\n        let nextRetryDelay = this.getNextRetryDelay(previousReconnectAttempts++, 0, retryError);\r\n\r\n        if (nextRetryDelay === null) {\r\n            this.logger.log(LogLevel.Debug, \"Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt.\");\r\n            this.completeClose(error);\r\n            return;\r\n        }\r\n\r\n        this.connectionState = HubConnectionState.Reconnecting;\r\n\r\n        if (error) {\r\n            this.logger.log(LogLevel.Information, `Connection reconnecting because of error '${error}'.`);\r\n        } else {\r\n            this.logger.log(LogLevel.Information, \"Connection reconnecting.\");\r\n        }\r\n\r\n        if (this.onreconnecting) {\r\n            try {\r\n                this.reconnectingCallbacks.forEach((c) => c.apply(this, [error]));\r\n            } catch (e) {\r\n                this.logger.log(LogLevel.Error, `An onreconnecting callback called with error '${error}' threw error '${e}'.`);\r\n            }\r\n\r\n            // Exit early if an onreconnecting callback called connection.stop().\r\n            if (this.connectionState !== HubConnectionState.Reconnecting) {\r\n                this.logger.log(LogLevel.Debug, \"Connection left the reconnecting state in onreconnecting callback. Done reconnecting.\");\r\n                return;\r\n            }\r\n        }\r\n\r\n        while (nextRetryDelay !== null) {\r\n            this.logger.log(LogLevel.Information, `Reconnect attempt number ${previousReconnectAttempts} will start in ${nextRetryDelay} ms.`);\r\n\r\n            await new Promise((resolve) => {\r\n                this.reconnectDelayHandle = setTimeout(resolve, nextRetryDelay!);\r\n            });\r\n            this.reconnectDelayHandle = undefined;\r\n\r\n            if (this.connectionState !== HubConnectionState.Reconnecting) {\r\n                this.logger.log(LogLevel.Debug, \"Connection left the reconnecting state during reconnect delay. Done reconnecting.\");\r\n                return;\r\n            }\r\n\r\n            try {\r\n                await this.startInternal();\r\n\r\n                this.connectionState = HubConnectionState.Connected;\r\n                this.logger.log(LogLevel.Information, \"HubConnection reconnected successfully.\");\r\n\r\n                if (this.onreconnected) {\r\n                    try {\r\n                        this.reconnectedCallbacks.forEach((c) => c.apply(this, [this.connection.connectionId]));\r\n                    } catch (e) {\r\n                        this.logger.log(LogLevel.Error, `An onreconnected callback called with connectionId '${this.connection.connectionId}; threw error '${e}'.`);\r\n                    }\r\n                }\r\n\r\n                return;\r\n            } catch (e) {\r\n                this.logger.log(LogLevel.Information, `Reconnect attempt failed because of error '${e}'.`);\r\n\r\n                if (this.connectionState !== HubConnectionState.Reconnecting) {\r\n                    this.logger.log(LogLevel.Debug, `Connection moved to the '${this.connectionState}' from the reconnecting state during reconnect attempt. Done reconnecting.`);\r\n                    // The TypeScript compiler thinks that connectionState must be Connected here. The TypeScript compiler is wrong.\r\n                    if (this.connectionState as any === HubConnectionState.Disconnecting) {\r\n                        this.completeClose();\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                retryError = e instanceof Error ? e : new Error(e.toString());\r\n                nextRetryDelay = this.getNextRetryDelay(previousReconnectAttempts++, Date.now() - reconnectStartTime, retryError);\r\n            }\r\n        }\r\n\r\n        this.logger.log(LogLevel.Information, `Reconnect retries have been exhausted after ${Date.now() - reconnectStartTime} ms and ${previousReconnectAttempts} failed attempts. Connection disconnecting.`);\r\n\r\n        this.completeClose();\r\n    }\r\n\r\n    private getNextRetryDelay(previousRetryCount: number, elapsedMilliseconds: number, retryReason: Error) {\r\n        try {\r\n            return this.reconnectPolicy!.nextRetryDelayInMilliseconds({\r\n                elapsedMilliseconds,\r\n                previousRetryCount,\r\n                retryReason,\r\n            });\r\n        } catch (e) {\r\n            this.logger.log(LogLevel.Error, `IRetryPolicy.nextRetryDelayInMilliseconds(${previousRetryCount}, ${elapsedMilliseconds}) threw error '${e}'.`);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    private cancelCallbacksWithError(error: Error) {\r\n        const callbacks = this.callbacks;\r\n        this.callbacks = {};\r\n\r\n        Object.keys(callbacks)\r\n            .forEach((key) => {\r\n                const callback = callbacks[key];\r\n                callback(null, error);\r\n            });\r\n    }\r\n\r\n    private cleanupPingTimer(): void {\r\n        if (this.pingServerHandle) {\r\n            clearTimeout(this.pingServerHandle);\r\n            this.pingServerHandle = undefined;\r\n        }\r\n    }\r\n\r\n    private cleanupTimeout(): void {\r\n        if (this.timeoutHandle) {\r\n            clearTimeout(this.timeoutHandle);\r\n        }\r\n    }\r\n\r\n    private createInvocation(methodName: string, args: any[], nonblocking: boolean, streamIds: string[]): InvocationMessage {\r\n        if (nonblocking) {\r\n            if (streamIds.length !== 0) {\r\n                return {\r\n                    arguments: args,\r\n                    streamIds,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            } else {\r\n                return {\r\n                    arguments: args,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n        } else {\r\n            const invocationId = this.invocationId;\r\n            this.invocationId++;\r\n\r\n            if (streamIds.length !== 0) {\r\n                return {\r\n                    arguments: args,\r\n                    invocationId: invocationId.toString(),\r\n                    streamIds,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            } else {\r\n                return {\r\n                    arguments: args,\r\n                    invocationId: invocationId.toString(),\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n    private launchStreams(streams: Array<IStreamResult<any>>, promiseQueue: Promise<void>): void {\r\n        if (streams.length === 0) {\r\n            return;\r\n        }\r\n\r\n        // Synchronize stream data so they arrive in-order on the server\r\n        if (!promiseQueue) {\r\n            promiseQueue = Promise.resolve();\r\n        }\r\n\r\n        // We want to iterate over the keys, since the keys are the stream ids\r\n        // tslint:disable-next-line:forin\r\n        for (const streamId in streams) {\r\n            streams[streamId].subscribe({\r\n                complete: () => {\r\n                    promiseQueue = promiseQueue.then(() => this.sendWithProtocol(this.createCompletionMessage(streamId)));\r\n                },\r\n                error: (err) => {\r\n                    let message: string;\r\n                    if (err instanceof Error) {\r\n                        message = err.message;\r\n                    } else if (err && err.toString) {\r\n                        message = err.toString();\r\n                    } else {\r\n                        message = \"Unknown error\";\r\n                    }\r\n\r\n                    promiseQueue = promiseQueue.then(() => this.sendWithProtocol(this.createCompletionMessage(streamId, message)));\r\n                },\r\n                next: (item) => {\r\n                    promiseQueue = promiseQueue.then(() => this.sendWithProtocol(this.createStreamItemMessage(streamId, item)));\r\n                },\r\n            });\r\n        }\r\n    }\r\n\r\n    private replaceStreamingParams(args: any[]): [Array<IStreamResult<any>>, string[]] {\r\n        const streams: Array<IStreamResult<any>> = [];\r\n        const streamIds: string[] = [];\r\n        for (let i = 0; i < args.length; i++) {\r\n            const argument = args[i];\r\n            if (this.isObservable(argument)) {\r\n                const streamId = this.invocationId;\r\n                this.invocationId++;\r\n                // Store the stream for later use\r\n                streams[streamId] = argument;\r\n                streamIds.push(streamId.toString());\r\n\r\n                // remove stream from args\r\n                args.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        return [streams, streamIds];\r\n    }\r\n\r\n    private isObservable(arg: any): arg is IStreamResult<any> {\r\n        // This allows other stream implementations to just work (like rxjs)\r\n        return arg && arg.subscribe && typeof arg.subscribe === \"function\";\r\n    }\r\n\r\n    private createStreamInvocation(methodName: string, args: any[], streamIds: string[]): StreamInvocationMessage {\r\n        const invocationId = this.invocationId;\r\n        this.invocationId++;\r\n\r\n        if (streamIds.length !== 0) {\r\n            return {\r\n                arguments: args,\r\n                invocationId: invocationId.toString(),\r\n                streamIds,\r\n                target: methodName,\r\n                type: MessageType.StreamInvocation,\r\n            };\r\n        } else {\r\n            return {\r\n                arguments: args,\r\n                invocationId: invocationId.toString(),\r\n                target: methodName,\r\n                type: MessageType.StreamInvocation,\r\n            };\r\n        }\r\n    }\r\n\r\n    private createCancelInvocation(id: string): CancelInvocationMessage {\r\n        return {\r\n            invocationId: id,\r\n            type: MessageType.CancelInvocation,\r\n        };\r\n    }\r\n\r\n    private createStreamItemMessage(id: string, item: any): StreamItemMessage {\r\n        return {\r\n            invocationId: id,\r\n            item,\r\n            type: MessageType.StreamItem,\r\n        };\r\n    }\r\n\r\n    private createCompletionMessage(id: string, error?: any, result?: any): CompletionMessage {\r\n        if (error) {\r\n            return {\r\n                error,\r\n                invocationId: id,\r\n                type: MessageType.Completion,\r\n            };\r\n        }\r\n\r\n        return {\r\n            invocationId: id,\r\n            result,\r\n            type: MessageType.Completion,\r\n        };\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { IRetryPolicy, RetryContext } from \"./IRetryPolicy\";\r\n\r\n// 0, 2, 10, 30 second delays before reconnect attempts.\r\nconst DEFAULT_RETRY_DELAYS_IN_MILLISECONDS = [0, 2000, 10000, 30000, null];\r\n\r\n/** @private */\r\nexport class DefaultReconnectPolicy implements IRetryPolicy {\r\n    private readonly retryDelays: Array<number | null>;\r\n\r\n    constructor(retryDelays?: number[]) {\r\n        this.retryDelays = retryDelays !== undefined ? [...retryDelays, null] : DEFAULT_RETRY_DELAYS_IN_MILLISECONDS;\r\n    }\r\n\r\n    public nextRetryDelayInMilliseconds(retryContext: RetryContext): number | null {\r\n        return this.retryDelays[retryContext.previousRetryCount];\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// This will be treated as a bit flag in the future, so we keep it using power-of-two values.\r\n/** Specifies a specific HTTP transport type. */\r\nexport enum HttpTransportType {\r\n    /** Specifies no transport preference. */\r\n    None = 0,\r\n    /** Specifies the WebSockets transport. */\r\n    WebSockets = 1,\r\n    /** Specifies the Server-Sent Events transport. */\r\n    ServerSentEvents = 2,\r\n    /** Specifies the Long Polling transport. */\r\n    LongPolling = 4,\r\n}\r\n\r\n/** Specifies the transfer format for a connection. */\r\nexport enum TransferFormat {\r\n    /** Specifies that only text data will be transmitted over the connection. */\r\n    Text = 1,\r\n    /** Specifies that binary data will be transmitted over the connection. */\r\n    Binary = 2,\r\n}\r\n\r\n/** An abstraction over the behavior of transports. This is designed to support the framework and not intended for use by applications. */\r\nexport interface ITransport {\r\n    connect(url: string, transferFormat: TransferFormat): Promise<void>;\r\n    send(data: any): Promise<void>;\r\n    stop(): Promise<void>;\r\n    onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    onclose: ((error?: Error) => void) | null;\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// Rough polyfill of https://developer.mozilla.org/en-US/docs/Web/API/AbortController\r\n// We don't actually ever use the API being polyfilled, we always use the polyfill because\r\n// it's a very new API right now.\r\n\r\n// Not exported from index.\r\n/** @private */\r\nexport class AbortController implements AbortSignal {\r\n    private isAborted: boolean = false;\r\n    public onabort: (() => void) | null = null;\r\n\r\n    public abort() {\r\n        if (!this.isAborted) {\r\n            this.isAborted = true;\r\n            if (this.onabort) {\r\n                this.onabort();\r\n            }\r\n        }\r\n    }\r\n\r\n    get signal(): AbortSignal {\r\n        return this;\r\n    }\r\n\r\n    get aborted(): boolean {\r\n        return this.isAborted;\r\n    }\r\n}\r\n\r\n/** Represents a signal that can be monitored to determine if a request has been aborted. */\r\nexport interface AbortSignal {\r\n    /** Indicates if the request has been aborted. */\r\n    aborted: boolean;\r\n    /** Set this to a handler that will be invoked when the request is aborted. */\r\n    onabort: (() => void) | null;\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { AbortController } from \"./AbortController\";\r\nimport { HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpRequest } from \"./HttpClient\";\r\nimport { MessageHeaders } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { ITransport, TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, sendMessage } from \"./Utils\";\r\n\r\n// Not exported from 'index', this type is internal.\r\n/** @private */\r\nexport class LongPollingTransport implements ITransport {\r\n    private readonly httpClient: HttpClient;\r\n    private readonly accessTokenFactory: (() => string | Promise<string>) | undefined;\r\n    private readonly logger: ILogger;\r\n    private readonly logMessageContent: boolean;\r\n    private readonly withCredentials: boolean;\r\n    private readonly pollAbort: AbortController;\r\n    private readonly headers: MessageHeaders;\r\n\r\n    private url?: string;\r\n    private running: boolean;\r\n    private receiving?: Promise<void>;\r\n    private closeError?: Error;\r\n\r\n    public onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    public onclose: ((error?: Error) => void) | null;\r\n\r\n    // This is an internal type, not exported from 'index' so this is really just internal.\r\n    public get pollAborted() {\r\n        return this.pollAbort.aborted;\r\n    }\r\n\r\n    constructor(httpClient: HttpClient, accessTokenFactory: (() => string | Promise<string>) | undefined, logger: ILogger, logMessageContent: boolean, withCredentials: boolean, headers: MessageHeaders) {\r\n        this.httpClient = httpClient;\r\n        this.accessTokenFactory = accessTokenFactory;\r\n        this.logger = logger;\r\n        this.pollAbort = new AbortController();\r\n        this.logMessageContent = logMessageContent;\r\n        this.withCredentials = withCredentials;\r\n        this.headers = headers;\r\n\r\n        this.running = false;\r\n\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n\r\n    public async connect(url: string, transferFormat: TransferFormat): Promise<void> {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n\r\n        this.url = url;\r\n\r\n        this.logger.log(LogLevel.Trace, \"(LongPolling transport) Connecting.\");\r\n\r\n        // Allow binary format on Node and Browsers that support binary content (indicated by the presence of responseType property)\r\n        if (transferFormat === TransferFormat.Binary &&\r\n            (typeof XMLHttpRequest !== \"undefined\" && typeof new XMLHttpRequest().responseType !== \"string\")) {\r\n            throw new Error(\"Binary protocols over XmlHttpRequest not implementing advanced features are not supported.\");\r\n        }\r\n\r\n        const [name, value] = getUserAgentHeader();\r\n        const headers = { [name]: value, ...this.headers };\r\n\r\n        const pollOptions: HttpRequest = {\r\n            abortSignal: this.pollAbort.signal,\r\n            headers,\r\n            timeout: 100000,\r\n            withCredentials: this.withCredentials,\r\n        };\r\n\r\n        if (transferFormat === TransferFormat.Binary) {\r\n            pollOptions.responseType = \"arraybuffer\";\r\n        }\r\n\r\n        const token = await this.getAccessToken();\r\n        this.updateHeaderToken(pollOptions, token);\r\n\r\n        // Make initial long polling request\r\n        // Server uses first long polling request to finish initializing connection and it returns without data\r\n        const pollUrl = `${url}&_=${Date.now()}`;\r\n        this.logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);\r\n        const response = await this.httpClient.get(pollUrl, pollOptions);\r\n        if (response.statusCode !== 200) {\r\n            this.logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);\r\n\r\n            // Mark running as false so that the poll immediately ends and runs the close logic\r\n            this.closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n            this.running = false;\r\n        } else {\r\n            this.running = true;\r\n        }\r\n\r\n        this.receiving = this.poll(this.url, pollOptions);\r\n    }\r\n\r\n    private async getAccessToken(): Promise<string | null> {\r\n        if (this.accessTokenFactory) {\r\n            return await this.accessTokenFactory();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    private updateHeaderToken(request: HttpRequest, token: string | null) {\r\n        if (!request.headers) {\r\n            request.headers = {};\r\n        }\r\n        if (token) {\r\n            // tslint:disable-next-line:no-string-literal\r\n            request.headers[\"Authorization\"] = `Bearer ${token}`;\r\n            return;\r\n        }\r\n        // tslint:disable-next-line:no-string-literal\r\n        if (request.headers[\"Authorization\"]) {\r\n            // tslint:disable-next-line:no-string-literal\r\n            delete request.headers[\"Authorization\"];\r\n        }\r\n    }\r\n\r\n    private async poll(url: string, pollOptions: HttpRequest): Promise<void> {\r\n        try {\r\n            while (this.running) {\r\n                // We have to get the access token on each poll, in case it changes\r\n                const token = await this.getAccessToken();\r\n                this.updateHeaderToken(pollOptions, token);\r\n\r\n                try {\r\n                    const pollUrl = `${url}&_=${Date.now()}`;\r\n                    this.logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);\r\n                    const response = await this.httpClient.get(pollUrl, pollOptions);\r\n\r\n                    if (response.statusCode === 204) {\r\n                        this.logger.log(LogLevel.Information, \"(LongPolling transport) Poll terminated by server.\");\r\n\r\n                        this.running = false;\r\n                    } else if (response.statusCode !== 200) {\r\n                        this.logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);\r\n\r\n                        // Unexpected status code\r\n                        this.closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n                        this.running = false;\r\n                    } else {\r\n                        // Process the response\r\n                        if (response.content) {\r\n                            this.logger.log(LogLevel.Trace, `(LongPolling transport) data received. ${getDataDetail(response.content, this.logMessageContent)}.`);\r\n                            if (this.onreceive) {\r\n                                this.onreceive(response.content);\r\n                            }\r\n                        } else {\r\n                            // This is another way timeout manifest.\r\n                            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    if (!this.running) {\r\n                        // Log but disregard errors that occur after stopping\r\n                        this.logger.log(LogLevel.Trace, `(LongPolling transport) Poll errored after shutdown: ${e.message}`);\r\n                    } else {\r\n                        if (e instanceof TimeoutError) {\r\n                            // Ignore timeouts and reissue the poll.\r\n                            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                        } else {\r\n                            // Close the connection with the error as the result.\r\n                            this.closeError = e;\r\n                            this.running = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } finally {\r\n            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Polling complete.\");\r\n\r\n            // We will reach here with pollAborted==false when the server returned a response causing the transport to stop.\r\n            // If pollAborted==true then client initiated the stop and the stop method will raise the close event after DELETE is sent.\r\n            if (!this.pollAborted) {\r\n                this.raiseOnClose();\r\n            }\r\n        }\r\n    }\r\n\r\n    public async send(data: any): Promise<void> {\r\n        if (!this.running) {\r\n            return Promise.reject(new Error(\"Cannot send until the transport is connected\"));\r\n        }\r\n        return sendMessage(this.logger, \"LongPolling\", this.httpClient, this.url!, this.accessTokenFactory, data, this.logMessageContent, this.withCredentials, this.headers);\r\n    }\r\n\r\n    public async stop(): Promise<void> {\r\n        this.logger.log(LogLevel.Trace, \"(LongPolling transport) Stopping polling.\");\r\n\r\n        // Tell receiving loop to stop, abort any current request, and then wait for it to finish\r\n        this.running = false;\r\n        this.pollAbort.abort();\r\n\r\n        try {\r\n            await this.receiving;\r\n\r\n            // Send DELETE to clean up long polling on the server\r\n            this.logger.log(LogLevel.Trace, `(LongPolling transport) sending DELETE request to ${this.url}.`);\r\n\r\n            const headers = {};\r\n            const [name, value] = getUserAgentHeader();\r\n            headers[name] = value;\r\n\r\n            const deleteOptions: HttpRequest = {\r\n                headers: { ...headers, ...this.headers },\r\n                withCredentials: this.withCredentials,\r\n            };\r\n            const token = await this.getAccessToken();\r\n            this.updateHeaderToken(deleteOptions, token);\r\n            await this.httpClient.delete(this.url!, deleteOptions);\r\n\r\n            this.logger.log(LogLevel.Trace, \"(LongPolling transport) DELETE request sent.\");\r\n        } finally {\r\n            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Stop finished.\");\r\n\r\n            // Raise close event here instead of in polling\r\n            // It needs to happen after the DELETE request is sent\r\n            this.raiseOnClose();\r\n        }\r\n    }\r\n\r\n    private raiseOnClose() {\r\n        if (this.onclose) {\r\n            let logMessage = \"(LongPolling transport) Firing onclose event.\";\r\n            if (this.closeError) {\r\n                logMessage += \" Error: \" + this.closeError;\r\n            }\r\n            this.logger.log(LogLevel.Trace, logMessage);\r\n            this.onclose(this.closeError);\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { MessageHeaders } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { ITransport, TransferFormat } from \"./ITransport\";\r\nimport { EventSourceConstructor } from \"./Polyfills\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, Platform, sendMessage } from \"./Utils\";\r\n\r\n/** @private */\r\nexport class ServerSentEventsTransport implements ITransport {\r\n    private readonly httpClient: HttpClient;\r\n    private readonly accessTokenFactory: (() => string | Promise<string>) | undefined;\r\n    private readonly logger: ILogger;\r\n    private readonly logMessageContent: boolean;\r\n    private readonly withCredentials: boolean;\r\n    private readonly eventSourceConstructor: EventSourceConstructor;\r\n    private eventSource?: EventSource;\r\n    private url?: string;\r\n    private headers: MessageHeaders;\r\n\r\n    public onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    public onclose: ((error?: Error) => void) | null;\r\n\r\n    constructor(httpClient: HttpClient, accessTokenFactory: (() => string | Promise<string>) | undefined, logger: ILogger,\r\n                logMessageContent: boolean, eventSourceConstructor: EventSourceConstructor, withCredentials: boolean, headers: MessageHeaders) {\r\n        this.httpClient = httpClient;\r\n        this.accessTokenFactory = accessTokenFactory;\r\n        this.logger = logger;\r\n        this.logMessageContent = logMessageContent;\r\n        this.withCredentials = withCredentials;\r\n        this.eventSourceConstructor = eventSourceConstructor;\r\n        this.headers = headers;\r\n\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n\r\n    public async connect(url: string, transferFormat: TransferFormat): Promise<void> {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n\r\n        this.logger.log(LogLevel.Trace, \"(SSE transport) Connecting.\");\r\n\r\n        // set url before accessTokenFactory because this.url is only for send and we set the auth header instead of the query string for send\r\n        this.url = url;\r\n\r\n        if (this.accessTokenFactory) {\r\n            const token = await this.accessTokenFactory();\r\n            if (token) {\r\n                url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + `access_token=${encodeURIComponent(token)}`;\r\n            }\r\n        }\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            let opened = false;\r\n            if (transferFormat !== TransferFormat.Text) {\r\n                reject(new Error(\"The Server-Sent Events transport only supports the 'Text' transfer format\"));\r\n                return;\r\n            }\r\n\r\n            let eventSource: EventSource;\r\n            if (Platform.isBrowser || Platform.isWebWorker) {\r\n                eventSource = new this.eventSourceConstructor(url, { withCredentials: this.withCredentials });\r\n            } else {\r\n                // Non-browser passes cookies via the dictionary\r\n                const cookies = this.httpClient.getCookieString(url);\r\n                const headers: MessageHeaders = {};\r\n                headers.Cookie = cookies;\r\n                const [name, value] = getUserAgentHeader();\r\n                headers[name] = value;\r\n\r\n                eventSource = new this.eventSourceConstructor(url, { withCredentials: this.withCredentials, headers: { ...headers, ...this.headers} } as EventSourceInit);\r\n            }\r\n\r\n            try {\r\n                eventSource.onmessage = (e: MessageEvent) => {\r\n                    if (this.onreceive) {\r\n                        try {\r\n                            this.logger.log(LogLevel.Trace, `(SSE transport) data received. ${getDataDetail(e.data, this.logMessageContent)}.`);\r\n                            this.onreceive(e.data);\r\n                        } catch (error) {\r\n                            this.close(error);\r\n                            return;\r\n                        }\r\n                    }\r\n                };\r\n\r\n                eventSource.onerror = (e: MessageEvent) => {\r\n                    const error = new Error(e.data || \"Error occurred\");\r\n                    if (opened) {\r\n                        this.close(error);\r\n                    } else {\r\n                        reject(error);\r\n                    }\r\n                };\r\n\r\n                eventSource.onopen = () => {\r\n                    this.logger.log(LogLevel.Information, `SSE connected to ${this.url}`);\r\n                    this.eventSource = eventSource;\r\n                    opened = true;\r\n                    resolve();\r\n                };\r\n            } catch (e) {\r\n                reject(e);\r\n                return;\r\n            }\r\n        });\r\n    }\r\n\r\n    public async send(data: any): Promise<void> {\r\n        if (!this.eventSource) {\r\n            return Promise.reject(new Error(\"Cannot send until the transport is connected\"));\r\n        }\r\n        return sendMessage(this.logger, \"SSE\", this.httpClient, this.url!, this.accessTokenFactory, data, this.logMessageContent, this.withCredentials, this.headers);\r\n    }\r\n\r\n    public stop(): Promise<void> {\r\n        this.close();\r\n        return Promise.resolve();\r\n    }\r\n\r\n    private close(e?: Error) {\r\n        if (this.eventSource) {\r\n            this.eventSource.close();\r\n            this.eventSource = undefined;\r\n\r\n            if (this.onclose) {\r\n                this.onclose(e);\r\n            }\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { MessageHeaders } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { ITransport, TransferFormat } from \"./ITransport\";\r\nimport { WebSocketConstructor } from \"./Polyfills\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, Platform } from \"./Utils\";\r\n\r\n/** @private */\r\nexport class WebSocketTransport implements ITransport {\r\n    private readonly logger: ILogger;\r\n    private readonly accessTokenFactory: (() => string | Promise<string>) | undefined;\r\n    private readonly logMessageContent: boolean;\r\n    private readonly webSocketConstructor: WebSocketConstructor;\r\n    private readonly httpClient: HttpClient;\r\n    private webSocket?: WebSocket;\r\n    private headers: MessageHeaders;\r\n\r\n    public onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    public onclose: ((error?: Error) => void) | null;\r\n\r\n    constructor(httpClient: HttpClient, accessTokenFactory: (() => string | Promise<string>) | undefined, logger: ILogger,\r\n                logMessageContent: boolean, webSocketConstructor: WebSocketConstructor, headers: MessageHeaders) {\r\n        this.logger = logger;\r\n        this.accessTokenFactory = accessTokenFactory;\r\n        this.logMessageContent = logMessageContent;\r\n        this.webSocketConstructor = webSocketConstructor;\r\n        this.httpClient = httpClient;\r\n\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n        this.headers = headers;\r\n    }\r\n\r\n    public async connect(url: string, transferFormat: TransferFormat): Promise<void> {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this.logger.log(LogLevel.Trace, \"(WebSockets transport) Connecting.\");\r\n\r\n        if (this.accessTokenFactory) {\r\n            const token = await this.accessTokenFactory();\r\n            if (token) {\r\n                url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + `access_token=${encodeURIComponent(token)}`;\r\n            }\r\n        }\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            url = url.replace(/^http/, \"ws\");\r\n            let webSocket: WebSocket | undefined;\r\n            const cookies = this.httpClient.getCookieString(url);\r\n            let opened = false;\r\n\r\n            if (Platform.isNode) {\r\n                const headers = {};\r\n                const [name, value] = getUserAgentHeader();\r\n                headers[name] = value;\r\n\r\n                if (cookies) {\r\n                    headers[`Cookie`] = `${cookies}`;\r\n                }\r\n\r\n                // Only pass headers when in non-browser environments\r\n                webSocket = new this.webSocketConstructor(url, undefined, {\r\n                    headers: { ...headers, ...this.headers },\r\n                });\r\n            }\r\n\r\n            if (!webSocket) {\r\n                // Chrome is not happy with passing 'undefined' as protocol\r\n                webSocket = new this.webSocketConstructor(url);\r\n            }\r\n\r\n            if (transferFormat === TransferFormat.Binary) {\r\n                webSocket.binaryType = \"arraybuffer\";\r\n            }\r\n\r\n            // tslint:disable-next-line:variable-name\r\n            webSocket.onopen = (_event: Event) => {\r\n                this.logger.log(LogLevel.Information, `WebSocket connected to ${url}.`);\r\n                this.webSocket = webSocket;\r\n                opened = true;\r\n                resolve();\r\n            };\r\n\r\n            webSocket.onerror = (event: Event) => {\r\n                let error: any = null;\r\n                // ErrorEvent is a browser only type we need to check if the type exists before using it\r\n                if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\r\n                    error = event.error;\r\n                } else {\r\n                    error = new Error(\"There was an error with the transport.\");\r\n                }\r\n\r\n                reject(error);\r\n            };\r\n\r\n            webSocket.onmessage = (message: MessageEvent) => {\r\n                this.logger.log(LogLevel.Trace, `(WebSockets transport) data received. ${getDataDetail(message.data, this.logMessageContent)}.`);\r\n                if (this.onreceive) {\r\n                    try {\r\n                        this.onreceive(message.data);\r\n                    } catch (error) {\r\n                        this.close(error);\r\n                        return;\r\n                    }\r\n                }\r\n            };\r\n\r\n            webSocket.onclose = (event: CloseEvent) => {\r\n                // Don't call close handler if connection was never established\r\n                // We'll reject the connect call instead\r\n                if (opened) {\r\n                    this.close(event);\r\n                } else {\r\n                    let error: any = null;\r\n                    // ErrorEvent is a browser only type we need to check if the type exists before using it\r\n                    if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\r\n                        error = event.error;\r\n                    } else {\r\n                        error = new Error(\"There was an error with the transport.\");\r\n                    }\r\n\r\n                    reject(error);\r\n                }\r\n            };\r\n        });\r\n    }\r\n\r\n    public send(data: any): Promise<void> {\r\n        if (this.webSocket && this.webSocket.readyState === this.webSocketConstructor.OPEN) {\r\n            this.logger.log(LogLevel.Trace, `(WebSockets transport) sending data. ${getDataDetail(data, this.logMessageContent)}.`);\r\n            this.webSocket.send(data);\r\n            return Promise.resolve();\r\n        }\r\n\r\n        return Promise.reject(\"WebSocket is not in the OPEN state\");\r\n    }\r\n\r\n    public stop(): Promise<void> {\r\n        if (this.webSocket) {\r\n            // Manually invoke onclose callback inline so we know the HttpConnection was closed properly before returning\r\n            // This also solves an issue where websocket.onclose could take 18+ seconds to trigger during network disconnects\r\n            this.close(undefined);\r\n        }\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    private close(event?: CloseEvent | Error): void {\r\n        // webSocket will be null if the transport did not start successfully\r\n        if (this.webSocket) {\r\n            // Clear websocket handlers because we are considering the socket closed now\r\n            this.webSocket.onclose = () => {};\r\n            this.webSocket.onmessage = () => {};\r\n            this.webSocket.onerror = () => {};\r\n            this.webSocket.close();\r\n            this.webSocket = undefined;\r\n        }\r\n\r\n        this.logger.log(LogLevel.Trace, \"(WebSockets transport) socket closed.\");\r\n        if (this.onclose) {\r\n            if (this.isCloseEvent(event) && (event.wasClean === false || event.code !== 1000)) {\r\n                this.onclose(new Error(`WebSocket closed with status code: ${event.code} (${event.reason}).`));\r\n            } else if (event instanceof Error) {\r\n                this.onclose(event);\r\n            } else {\r\n                this.onclose();\r\n            }\r\n        }\r\n    }\r\n\r\n    private isCloseEvent(event?: any): event is CloseEvent {\r\n        return event && typeof event.wasClean === \"boolean\" && typeof event.code === \"number\";\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { DefaultHttpClient } from \"./DefaultHttpClient\";\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { IConnection } from \"./IConnection\";\r\nimport { IHttpConnectionOptions } from \"./IHttpConnectionOptions\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { HttpTransportType, ITransport, TransferFormat } from \"./ITransport\";\r\nimport { LongPollingTransport } from \"./LongPollingTransport\";\r\nimport { ServerSentEventsTransport } from \"./ServerSentEventsTransport\";\r\nimport { Arg, createLogger, getUserAgentHeader, Platform } from \"./Utils\";\r\nimport { WebSocketTransport } from \"./WebSocketTransport\";\r\n\r\n/** @private */\r\nconst enum ConnectionState {\r\n    Connecting = \"Connecting\",\r\n    Connected = \"Connected\",\r\n    Disconnected = \"Disconnected\",\r\n    Disconnecting = \"Disconnecting\",\r\n}\r\n\r\n/** @private */\r\nexport interface INegotiateResponse {\r\n    connectionId?: string;\r\n    connectionToken?: string;\r\n    negotiateVersion?: number;\r\n    availableTransports?: IAvailableTransport[];\r\n    url?: string;\r\n    accessToken?: string;\r\n    error?: string;\r\n}\r\n\r\n/** @private */\r\nexport interface IAvailableTransport {\r\n    transport: keyof typeof HttpTransportType;\r\n    transferFormats: Array<keyof typeof TransferFormat>;\r\n}\r\n\r\nconst MAX_REDIRECTS = 100;\r\n\r\n/** @private */\r\nexport class HttpConnection implements IConnection {\r\n    private connectionState: ConnectionState;\r\n    // connectionStarted is tracked independently from connectionState, so we can check if the\r\n    // connection ever did successfully transition from connecting to connected before disconnecting.\r\n    private connectionStarted: boolean;\r\n    private readonly httpClient: HttpClient;\r\n    private readonly logger: ILogger;\r\n    private readonly options: IHttpConnectionOptions;\r\n    private transport?: ITransport;\r\n    private startInternalPromise?: Promise<void>;\r\n    private stopPromise?: Promise<void>;\r\n    private stopPromiseResolver: (value?: PromiseLike<void>) => void = () => {};\r\n    private stopError?: Error;\r\n    private accessTokenFactory?: () => string | Promise<string>;\r\n    private sendQueue?: TransportSendQueue;\r\n\r\n    public readonly features: any = {};\r\n    public baseUrl: string;\r\n    public connectionId?: string;\r\n    public onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    public onclose: ((e?: Error) => void) | null;\r\n\r\n    private readonly negotiateVersion: number = 1;\r\n\r\n    constructor(url: string, options: IHttpConnectionOptions = {}) {\r\n        Arg.isRequired(url, \"url\");\r\n\r\n        this.logger = createLogger(options.logger);\r\n        this.baseUrl = this.resolveUrl(url);\r\n\r\n        options = options || {};\r\n        options.logMessageContent = options.logMessageContent === undefined ? false : options.logMessageContent;\r\n        if (typeof options.withCredentials === \"boolean\" || options.withCredentials === undefined) {\r\n            options.withCredentials = options.withCredentials === undefined ? true : options.withCredentials;\r\n        } else {\r\n            throw new Error(\"withCredentials option was not a 'boolean' or 'undefined' value\");\r\n        }\r\n\r\n        let webSocketModule: any = null;\r\n        let eventSourceModule: any = null;\r\n\r\n        if (Platform.isNode && typeof require !== \"undefined\") {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n            webSocketModule = requireFunc(\"ws\");\r\n            eventSourceModule = requireFunc(\"eventsource\");\r\n        }\r\n\r\n        if (!Platform.isNode && typeof WebSocket !== \"undefined\" && !options.WebSocket) {\r\n            options.WebSocket = WebSocket;\r\n        } else if (Platform.isNode && !options.WebSocket) {\r\n            if (webSocketModule) {\r\n                options.WebSocket = webSocketModule;\r\n            }\r\n        }\r\n\r\n        if (!Platform.isNode && typeof EventSource !== \"undefined\" && !options.EventSource) {\r\n            options.EventSource = EventSource;\r\n        } else if (Platform.isNode && !options.EventSource) {\r\n            if (typeof eventSourceModule !== \"undefined\") {\r\n                options.EventSource = eventSourceModule;\r\n            }\r\n        }\r\n\r\n        this.httpClient = options.httpClient || new DefaultHttpClient(this.logger);\r\n        this.connectionState = ConnectionState.Disconnected;\r\n        this.connectionStarted = false;\r\n        this.options = options;\r\n\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n\r\n    public start(): Promise<void>;\r\n    public start(transferFormat: TransferFormat): Promise<void>;\r\n    public async start(transferFormat?: TransferFormat): Promise<void> {\r\n        transferFormat = transferFormat || TransferFormat.Binary;\r\n\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n\r\n        this.logger.log(LogLevel.Debug, `Starting connection with transfer format '${TransferFormat[transferFormat]}'.`);\r\n\r\n        if (this.connectionState !== ConnectionState.Disconnected) {\r\n            return Promise.reject(new Error(\"Cannot start an HttpConnection that is not in the 'Disconnected' state.\"));\r\n        }\r\n\r\n        this.connectionState = ConnectionState.Connecting;\r\n\r\n        this.startInternalPromise = this.startInternal(transferFormat);\r\n        await this.startInternalPromise;\r\n\r\n        // The TypeScript compiler thinks that connectionState must be Connecting here. The TypeScript compiler is wrong.\r\n        if (this.connectionState as any === ConnectionState.Disconnecting) {\r\n            // stop() was called and transitioned the client into the Disconnecting state.\r\n            const message = \"Failed to start the HttpConnection before stop() was called.\";\r\n            this.logger.log(LogLevel.Error, message);\r\n\r\n            // We cannot await stopPromise inside startInternal since stopInternal awaits the startInternalPromise.\r\n            await this.stopPromise;\r\n\r\n            return Promise.reject(new Error(message));\r\n        } else if (this.connectionState as any !== ConnectionState.Connected) {\r\n            // stop() was called and transitioned the client into the Disconnecting state.\r\n            const message = \"HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!\";\r\n            this.logger.log(LogLevel.Error, message);\r\n            return Promise.reject(new Error(message));\r\n        }\r\n\r\n        this.connectionStarted = true;\r\n    }\r\n\r\n    public send(data: string | ArrayBuffer): Promise<void> {\r\n        if (this.connectionState !== ConnectionState.Connected) {\r\n            return Promise.reject(new Error(\"Cannot send data if the connection is not in the 'Connected' State.\"));\r\n        }\r\n\r\n        if (!this.sendQueue) {\r\n            this.sendQueue = new TransportSendQueue(this.transport!);\r\n        }\r\n\r\n        // Transport will not be null if state is connected\r\n        return this.sendQueue.send(data);\r\n    }\r\n\r\n    public async stop(error?: Error): Promise<void> {\r\n        if (this.connectionState === ConnectionState.Disconnected) {\r\n            this.logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnected state.`);\r\n            return Promise.resolve();\r\n        }\r\n\r\n        if (this.connectionState === ConnectionState.Disconnecting) {\r\n            this.logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnecting state.`);\r\n            return this.stopPromise;\r\n        }\r\n\r\n        this.connectionState = ConnectionState.Disconnecting;\r\n\r\n        this.stopPromise = new Promise((resolve) => {\r\n            // Don't complete stop() until stopConnection() completes.\r\n            this.stopPromiseResolver = resolve;\r\n        });\r\n\r\n        // stopInternal should never throw so just observe it.\r\n        await this.stopInternal(error);\r\n        await this.stopPromise;\r\n    }\r\n\r\n    private async stopInternal(error?: Error): Promise<void> {\r\n        // Set error as soon as possible otherwise there is a race between\r\n        // the transport closing and providing an error and the error from a close message\r\n        // We would prefer the close message error.\r\n        this.stopError = error;\r\n\r\n        try {\r\n            await this.startInternalPromise;\r\n        } catch (e) {\r\n            // This exception is returned to the user as a rejected Promise from the start method.\r\n        }\r\n\r\n        // The transport's onclose will trigger stopConnection which will run our onclose event.\r\n        // The transport should always be set if currently connected. If it wasn't set, it's likely because\r\n        // stop was called during start() and start() failed.\r\n        if (this.transport) {\r\n            try {\r\n                await this.transport.stop();\r\n            } catch (e) {\r\n                this.logger.log(LogLevel.Error, `HttpConnection.transport.stop() threw error '${e}'.`);\r\n                this.stopConnection();\r\n            }\r\n\r\n            this.transport = undefined;\r\n        } else {\r\n            this.logger.log(LogLevel.Debug, \"HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.\");\r\n        }\r\n    }\r\n\r\n    private async startInternal(transferFormat: TransferFormat): Promise<void> {\r\n        // Store the original base url and the access token factory since they may change\r\n        // as part of negotiating\r\n        let url = this.baseUrl;\r\n        this.accessTokenFactory = this.options.accessTokenFactory;\r\n\r\n        try {\r\n            if (this.options.skipNegotiation) {\r\n                if (this.options.transport === HttpTransportType.WebSockets) {\r\n                    // No need to add a connection ID in this case\r\n                    this.transport = this.constructTransport(HttpTransportType.WebSockets);\r\n                    // We should just call connect directly in this case.\r\n                    // No fallback or negotiate in this case.\r\n                    await this.startTransport(url, transferFormat);\r\n                } else {\r\n                    throw new Error(\"Negotiation can only be skipped when using the WebSocket transport directly.\");\r\n                }\r\n            } else {\r\n                let negotiateResponse: INegotiateResponse | null = null;\r\n                let redirects = 0;\r\n\r\n                do {\r\n                    negotiateResponse = await this.getNegotiationResponse(url);\r\n                    // the user tries to stop the connection when it is being started\r\n                    if (this.connectionState === ConnectionState.Disconnecting || this.connectionState === ConnectionState.Disconnected) {\r\n                        throw new Error(\"The connection was stopped during negotiation.\");\r\n                    }\r\n\r\n                    if (negotiateResponse.error) {\r\n                        throw new Error(negotiateResponse.error);\r\n                    }\r\n\r\n                    if ((negotiateResponse as any).ProtocolVersion) {\r\n                        throw new Error(\"Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.\");\r\n                    }\r\n\r\n                    if (negotiateResponse.url) {\r\n                        url = negotiateResponse.url;\r\n                    }\r\n\r\n                    if (negotiateResponse.accessToken) {\r\n                        // Replace the current access token factory with one that uses\r\n                        // the returned access token\r\n                        const accessToken = negotiateResponse.accessToken;\r\n                        this.accessTokenFactory = () => accessToken;\r\n                    }\r\n\r\n                    redirects++;\r\n                }\r\n                while (negotiateResponse.url && redirects < MAX_REDIRECTS);\r\n\r\n                if (redirects === MAX_REDIRECTS && negotiateResponse.url) {\r\n                    throw new Error(\"Negotiate redirection limit exceeded.\");\r\n                }\r\n\r\n                await this.createTransport(url, this.options.transport, negotiateResponse, transferFormat);\r\n            }\r\n\r\n            if (this.transport instanceof LongPollingTransport) {\r\n                this.features.inherentKeepAlive = true;\r\n            }\r\n\r\n            if (this.connectionState === ConnectionState.Connecting) {\r\n                // Ensure the connection transitions to the connected state prior to completing this.startInternalPromise.\r\n                // start() will handle the case when stop was called and startInternal exits still in the disconnecting state.\r\n                this.logger.log(LogLevel.Debug, \"The HttpConnection connected successfully.\");\r\n                this.connectionState = ConnectionState.Connected;\r\n            }\r\n\r\n            // stop() is waiting on us via this.startInternalPromise so keep this.transport around so it can clean up.\r\n            // This is the only case startInternal can exit in neither the connected nor disconnected state because stopConnection()\r\n            // will transition to the disconnected state. start() will wait for the transition using the stopPromise.\r\n        } catch (e) {\r\n            this.logger.log(LogLevel.Error, \"Failed to start the connection: \" + e);\r\n            this.connectionState = ConnectionState.Disconnected;\r\n            this.transport = undefined;\r\n\r\n            // if start fails, any active calls to stop assume that start will complete the stop promise\r\n            this.stopPromiseResolver();\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n\r\n    private async getNegotiationResponse(url: string): Promise<INegotiateResponse> {\r\n        const headers = {};\r\n        if (this.accessTokenFactory) {\r\n            const token = await this.accessTokenFactory();\r\n            if (token) {\r\n                headers[`Authorization`] = `Bearer ${token}`;\r\n            }\r\n        }\r\n\r\n        const [name, value] = getUserAgentHeader();\r\n        headers[name] = value;\r\n\r\n        const negotiateUrl = this.resolveNegotiateUrl(url);\r\n        this.logger.log(LogLevel.Debug, `Sending negotiation request: ${negotiateUrl}.`);\r\n        try {\r\n            const response = await this.httpClient.post(negotiateUrl, {\r\n                content: \"\",\r\n                headers: { ...headers, ...this.options.headers },\r\n                withCredentials: this.options.withCredentials,\r\n            });\r\n\r\n            if (response.statusCode !== 200) {\r\n                return Promise.reject(new Error(`Unexpected status code returned from negotiate '${response.statusCode}'`));\r\n            }\r\n\r\n            const negotiateResponse = JSON.parse(response.content as string) as INegotiateResponse;\r\n            if (!negotiateResponse.negotiateVersion || negotiateResponse.negotiateVersion < 1) {\r\n                // Negotiate version 0 doesn't use connectionToken\r\n                // So we set it equal to connectionId so all our logic can use connectionToken without being aware of the negotiate version\r\n                negotiateResponse.connectionToken = negotiateResponse.connectionId;\r\n            }\r\n            return negotiateResponse;\r\n        } catch (e) {\r\n            this.logger.log(LogLevel.Error, \"Failed to complete negotiation with the server: \" + e);\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n\r\n    private createConnectUrl(url: string, connectionToken: string | null | undefined) {\r\n        if (!connectionToken) {\r\n            return url;\r\n        }\r\n\r\n        return url + (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + `id=${connectionToken}`;\r\n    }\r\n\r\n    private async createTransport(url: string, requestedTransport: HttpTransportType | ITransport | undefined, negotiateResponse: INegotiateResponse, requestedTransferFormat: TransferFormat): Promise<void> {\r\n        let connectUrl = this.createConnectUrl(url, negotiateResponse.connectionToken);\r\n        if (this.isITransport(requestedTransport)) {\r\n            this.logger.log(LogLevel.Debug, \"Connection was provided an instance of ITransport, using that directly.\");\r\n            this.transport = requestedTransport;\r\n            await this.startTransport(connectUrl, requestedTransferFormat);\r\n\r\n            this.connectionId = negotiateResponse.connectionId;\r\n            return;\r\n        }\r\n\r\n        const transportExceptions: any[] = [];\r\n        const transports = negotiateResponse.availableTransports || [];\r\n        let negotiate: INegotiateResponse | undefined = negotiateResponse;\r\n        for (const endpoint of transports) {\r\n            const transportOrError = this.resolveTransportOrError(endpoint, requestedTransport, requestedTransferFormat);\r\n            if (transportOrError instanceof Error) {\r\n                // Store the error and continue, we don't want to cause a re-negotiate in these cases\r\n                transportExceptions.push(`${endpoint.transport} failed: ${transportOrError}`);\r\n            } else if (this.isITransport(transportOrError)) {\r\n                this.transport = transportOrError;\r\n                if (!negotiate) {\r\n                    try {\r\n                        negotiate = await this.getNegotiationResponse(url);\r\n                    } catch (ex) {\r\n                        return Promise.reject(ex);\r\n                    }\r\n                    connectUrl = this.createConnectUrl(url, negotiate.connectionToken);\r\n                }\r\n                try {\r\n                    await this.startTransport(connectUrl, requestedTransferFormat);\r\n                    this.connectionId = negotiate.connectionId;\r\n                    return;\r\n                } catch (ex) {\r\n                    this.logger.log(LogLevel.Error, `Failed to start the transport '${endpoint.transport}': ${ex}`);\r\n                    negotiate = undefined;\r\n                    transportExceptions.push(`${endpoint.transport} failed: ${ex}`);\r\n\r\n                    if (this.connectionState !== ConnectionState.Connecting) {\r\n                        const message = \"Failed to select transport before stop() was called.\";\r\n                        this.logger.log(LogLevel.Debug, message);\r\n                        return Promise.reject(new Error(message));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (transportExceptions.length > 0) {\r\n            return Promise.reject(new Error(`Unable to connect to the server with any of the available transports. ${transportExceptions.join(\" \")}`));\r\n        }\r\n        return Promise.reject(new Error(\"None of the transports supported by the client are supported by the server.\"));\r\n    }\r\n\r\n    private constructTransport(transport: HttpTransportType): ITransport {\r\n        switch (transport) {\r\n            case HttpTransportType.WebSockets:\r\n                if (!this.options.WebSocket) {\r\n                    throw new Error(\"'WebSocket' is not supported in your environment.\");\r\n                }\r\n                return new WebSocketTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent || false, this.options.WebSocket, this.options.headers || {});\r\n            case HttpTransportType.ServerSentEvents:\r\n                if (!this.options.EventSource) {\r\n                    throw new Error(\"'EventSource' is not supported in your environment.\");\r\n                }\r\n                return new ServerSentEventsTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent || false, this.options.EventSource, this.options.withCredentials!, this.options.headers || {});\r\n            case HttpTransportType.LongPolling:\r\n                return new LongPollingTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent || false, this.options.withCredentials!, this.options.headers || {});\r\n            default:\r\n                throw new Error(`Unknown transport: ${transport}.`);\r\n        }\r\n    }\r\n\r\n    private startTransport(url: string, transferFormat: TransferFormat): Promise<void> {\r\n        this.transport!.onreceive = this.onreceive;\r\n        this.transport!.onclose = (e) => this.stopConnection(e);\r\n        return this.transport!.connect(url, transferFormat);\r\n    }\r\n\r\n    private resolveTransportOrError(endpoint: IAvailableTransport, requestedTransport: HttpTransportType | undefined, requestedTransferFormat: TransferFormat): ITransport | Error {\r\n        const transport = HttpTransportType[endpoint.transport];\r\n        if (transport === null || transport === undefined) {\r\n            this.logger.log(LogLevel.Debug, `Skipping transport '${endpoint.transport}' because it is not supported by this client.`);\r\n            return new Error(`Skipping transport '${endpoint.transport}' because it is not supported by this client.`);\r\n        } else {\r\n            if (transportMatches(requestedTransport, transport)) {\r\n                const transferFormats = endpoint.transferFormats.map((s) => TransferFormat[s]);\r\n                if (transferFormats.indexOf(requestedTransferFormat) >= 0) {\r\n                    if ((transport === HttpTransportType.WebSockets && !this.options.WebSocket) ||\r\n                        (transport === HttpTransportType.ServerSentEvents && !this.options.EventSource)) {\r\n                        this.logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it is not supported in your environment.'`);\r\n                        return new Error(`'${HttpTransportType[transport]}' is not supported in your environment.`);\r\n                    } else {\r\n                        this.logger.log(LogLevel.Debug, `Selecting transport '${HttpTransportType[transport]}'.`);\r\n                        try {\r\n                            return this.constructTransport(transport);\r\n                        } catch (ex) {\r\n                            return ex;\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it does not support the requested transfer format '${TransferFormat[requestedTransferFormat]}'.`);\r\n                    return new Error(`'${HttpTransportType[transport]}' does not support ${TransferFormat[requestedTransferFormat]}.`);\r\n                }\r\n            } else {\r\n                this.logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it was disabled by the client.`);\r\n                return new Error(`'${HttpTransportType[transport]}' is disabled by the client.`);\r\n            }\r\n        }\r\n    }\r\n\r\n    private isITransport(transport: any): transport is ITransport {\r\n        return transport && typeof (transport) === \"object\" && \"connect\" in transport;\r\n    }\r\n\r\n    private stopConnection(error?: Error): void {\r\n        this.logger.log(LogLevel.Debug, `HttpConnection.stopConnection(${error}) called while in state ${this.connectionState}.`);\r\n\r\n        this.transport = undefined;\r\n\r\n        // If we have a stopError, it takes precedence over the error from the transport\r\n        error = this.stopError || error;\r\n        this.stopError = undefined;\r\n\r\n        if (this.connectionState === ConnectionState.Disconnected) {\r\n            this.logger.log(LogLevel.Debug, `Call to HttpConnection.stopConnection(${error}) was ignored because the connection is already in the disconnected state.`);\r\n            return;\r\n        }\r\n\r\n        if (this.connectionState === ConnectionState.Connecting) {\r\n            this.logger.log(LogLevel.Warning, `Call to HttpConnection.stopConnection(${error}) was ignored because the connection is still in the connecting state.`);\r\n            throw new Error(`HttpConnection.stopConnection(${error}) was called while the connection is still in the connecting state.`);\r\n        }\r\n\r\n        if (this.connectionState === ConnectionState.Disconnecting) {\r\n            // A call to stop() induced this call to stopConnection and needs to be completed.\r\n            // Any stop() awaiters will be scheduled to continue after the onclose callback fires.\r\n            this.stopPromiseResolver();\r\n        }\r\n\r\n        if (error) {\r\n            this.logger.log(LogLevel.Error, `Connection disconnected with error '${error}'.`);\r\n        } else {\r\n            this.logger.log(LogLevel.Information, \"Connection disconnected.\");\r\n        }\r\n\r\n        if (this.sendQueue) {\r\n            this.sendQueue.stop().catch((e) => {\r\n                this.logger.log(LogLevel.Error, `TransportSendQueue.stop() threw error '${e}'.`);\r\n            });\r\n            this.sendQueue = undefined;\r\n        }\r\n\r\n        this.connectionId = undefined;\r\n        this.connectionState = ConnectionState.Disconnected;\r\n\r\n        if (this.connectionStarted) {\r\n            this.connectionStarted = false;\r\n            try {\r\n                if (this.onclose) {\r\n                    this.onclose(error);\r\n                }\r\n            } catch (e) {\r\n                this.logger.log(LogLevel.Error, `HttpConnection.onclose(${error}) threw error '${e}'.`);\r\n            }\r\n        }\r\n    }\r\n\r\n    private resolveUrl(url: string): string {\r\n        // startsWith is not supported in IE\r\n        if (url.lastIndexOf(\"https://\", 0) === 0 || url.lastIndexOf(\"http://\", 0) === 0) {\r\n            return url;\r\n        }\r\n\r\n        if (!Platform.isBrowser || !window.document) {\r\n            throw new Error(`Cannot resolve '${url}'.`);\r\n        }\r\n\r\n        // Setting the url to the href propery of an anchor tag handles normalization\r\n        // for us. There are 3 main cases.\r\n        // 1. Relative path normalization e.g \"b\" -> \"http://localhost:5000/a/b\"\r\n        // 2. Absolute path normalization e.g \"/a/b\" -> \"http://localhost:5000/a/b\"\r\n        // 3. Networkpath reference normalization e.g \"//localhost:5000/a/b\" -> \"http://localhost:5000/a/b\"\r\n        const aTag = window.document.createElement(\"a\");\r\n        aTag.href = url;\r\n\r\n        this.logger.log(LogLevel.Information, `Normalizing '${url}' to '${aTag.href}'.`);\r\n        return aTag.href;\r\n    }\r\n\r\n    private resolveNegotiateUrl(url: string): string {\r\n        const index = url.indexOf(\"?\");\r\n        let negotiateUrl = url.substring(0, index === -1 ? url.length : index);\r\n        if (negotiateUrl[negotiateUrl.length - 1] !== \"/\") {\r\n            negotiateUrl += \"/\";\r\n        }\r\n        negotiateUrl += \"negotiate\";\r\n        negotiateUrl += index === -1 ? \"\" : url.substring(index);\r\n\r\n        if (negotiateUrl.indexOf(\"negotiateVersion\") === -1) {\r\n            negotiateUrl += index === -1 ? \"?\" : \"&\";\r\n            negotiateUrl += \"negotiateVersion=\" + this.negotiateVersion;\r\n        }\r\n        return negotiateUrl;\r\n    }\r\n}\r\n\r\nfunction transportMatches(requestedTransport: HttpTransportType | undefined, actualTransport: HttpTransportType) {\r\n    return !requestedTransport || ((actualTransport & requestedTransport) !== 0);\r\n}\r\n\r\n/** @private */\r\nexport class TransportSendQueue {\r\n    private buffer: any[] = [];\r\n    private sendBufferedData: PromiseSource;\r\n    private executing: boolean = true;\r\n    private transportResult?: PromiseSource;\r\n    private sendLoopPromise: Promise<void>;\r\n\r\n    constructor(private readonly transport: ITransport) {\r\n        this.sendBufferedData = new PromiseSource();\r\n        this.transportResult = new PromiseSource();\r\n\r\n        this.sendLoopPromise = this.sendLoop();\r\n    }\r\n\r\n    public send(data: string | ArrayBuffer): Promise<void> {\r\n        this.bufferData(data);\r\n        if (!this.transportResult) {\r\n            this.transportResult = new PromiseSource();\r\n        }\r\n        return this.transportResult.promise;\r\n    }\r\n\r\n    public stop(): Promise<void> {\r\n        this.executing = false;\r\n        this.sendBufferedData.resolve();\r\n        return this.sendLoopPromise;\r\n    }\r\n\r\n    private bufferData(data: string | ArrayBuffer): void {\r\n        if (this.buffer.length && typeof(this.buffer[0]) !== typeof(data)) {\r\n            throw new Error(`Expected data to be of type ${typeof(this.buffer)} but was of type ${typeof(data)}`);\r\n        }\r\n\r\n        this.buffer.push(data);\r\n        this.sendBufferedData.resolve();\r\n    }\r\n\r\n    private async sendLoop(): Promise<void> {\r\n        while (true) {\r\n            await this.sendBufferedData.promise;\r\n\r\n            if (!this.executing) {\r\n                if (this.transportResult) {\r\n                    this.transportResult.reject(\"Connection stopped.\");\r\n                }\r\n\r\n                break;\r\n            }\r\n\r\n            this.sendBufferedData = new PromiseSource();\r\n\r\n            const transportResult = this.transportResult!;\r\n            this.transportResult = undefined;\r\n\r\n            const data = typeof(this.buffer[0]) === \"string\" ?\r\n                this.buffer.join(\"\") :\r\n                TransportSendQueue.concatBuffers(this.buffer);\r\n\r\n            this.buffer.length = 0;\r\n\r\n            try {\r\n                await this.transport.send(data);\r\n                transportResult.resolve();\r\n            } catch (error) {\r\n                transportResult.reject(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    private static concatBuffers(arrayBuffers: ArrayBuffer[]): ArrayBuffer {\r\n        const totalLength = arrayBuffers.map((b) => b.byteLength).reduce((a, b) => a + b);\r\n        const result = new Uint8Array(totalLength);\r\n        let offset = 0;\r\n        for (const item of arrayBuffers) {\r\n            result.set(new Uint8Array(item), offset);\r\n            offset += item.byteLength;\r\n        }\r\n\r\n        return result.buffer;\r\n    }\r\n}\r\n\r\nclass PromiseSource {\r\n    private resolver?: () => void;\r\n    private rejecter!: (reason?: any) => void;\r\n    public promise: Promise<void>;\r\n\r\n    constructor() {\r\n        this.promise = new Promise((resolve, reject) => [this.resolver, this.rejecter] = [resolve, reject]);\r\n    }\r\n\r\n    public resolve(): void {\r\n        this.resolver!();\r\n    }\r\n\r\n    public reject(reason?: any): void {\r\n        this.rejecter!(reason);\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { CompletionMessage, HubMessage, IHubProtocol, InvocationMessage, MessageType, StreamItemMessage } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\n\r\nconst JSON_HUB_PROTOCOL_NAME: string = \"json\";\r\n\r\n/** Implements the JSON Hub Protocol. */\r\nexport class JsonHubProtocol implements IHubProtocol {\r\n\r\n    /** @inheritDoc */\r\n    public readonly name: string = JSON_HUB_PROTOCOL_NAME;\r\n    /** @inheritDoc */\r\n    public readonly version: number = 1;\r\n\r\n    /** @inheritDoc */\r\n    public readonly transferFormat: TransferFormat = TransferFormat.Text;\r\n\r\n    /** Creates an array of {@link @microsoft/signalr.HubMessage} objects from the specified serialized representation.\r\n     *\r\n     * @param {string} input A string containing the serialized representation.\r\n     * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.\r\n     */\r\n    public parseMessages(input: string, logger: ILogger): HubMessage[] {\r\n        // The interface does allow \"ArrayBuffer\" to be passed in, but this implementation does not. So let's throw a useful error.\r\n        if (typeof input !== \"string\") {\r\n            throw new Error(\"Invalid input for JSON hub protocol. Expected a string.\");\r\n        }\r\n\r\n        if (!input) {\r\n            return [];\r\n        }\r\n\r\n        if (logger === null) {\r\n            logger = NullLogger.instance;\r\n        }\r\n\r\n        // Parse the messages\r\n        const messages = TextMessageFormat.parse(input);\r\n\r\n        const hubMessages = [];\r\n        for (const message of messages) {\r\n            const parsedMessage = JSON.parse(message) as HubMessage;\r\n            if (typeof parsedMessage.type !== \"number\") {\r\n                throw new Error(\"Invalid payload.\");\r\n            }\r\n            switch (parsedMessage.type) {\r\n                case MessageType.Invocation:\r\n                    this.isInvocationMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.StreamItem:\r\n                    this.isStreamItemMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Completion:\r\n                    this.isCompletionMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Ping:\r\n                    // Single value, no need to validate\r\n                    break;\r\n                case MessageType.Close:\r\n                    // All optional values, no need to validate\r\n                    break;\r\n                default:\r\n                    // Future protocol changes can add message types, old clients can ignore them\r\n                    logger.log(LogLevel.Information, \"Unknown message type '\" + parsedMessage.type + \"' ignored.\");\r\n                    continue;\r\n            }\r\n            hubMessages.push(parsedMessage);\r\n        }\r\n\r\n        return hubMessages;\r\n    }\r\n\r\n    /** Writes the specified {@link @microsoft/signalr.HubMessage} to a string and returns it.\r\n     *\r\n     * @param {HubMessage} message The message to write.\r\n     * @returns {string} A string containing the serialized representation of the message.\r\n     */\r\n    public writeMessage(message: HubMessage): string {\r\n        return TextMessageFormat.write(JSON.stringify(message));\r\n    }\r\n\r\n    private isInvocationMessage(message: InvocationMessage): void {\r\n        this.assertNotEmptyString(message.target, \"Invalid payload for Invocation message.\");\r\n\r\n        if (message.invocationId !== undefined) {\r\n            this.assertNotEmptyString(message.invocationId, \"Invalid payload for Invocation message.\");\r\n        }\r\n    }\r\n\r\n    private isStreamItemMessage(message: StreamItemMessage): void {\r\n        this.assertNotEmptyString(message.invocationId, \"Invalid payload for StreamItem message.\");\r\n\r\n        if (message.item === undefined) {\r\n            throw new Error(\"Invalid payload for StreamItem message.\");\r\n        }\r\n    }\r\n\r\n    private isCompletionMessage(message: CompletionMessage): void {\r\n        if (message.result && message.error) {\r\n            throw new Error(\"Invalid payload for Completion message.\");\r\n        }\r\n\r\n        if (!message.result && message.error) {\r\n            this.assertNotEmptyString(message.error, \"Invalid payload for Completion message.\");\r\n        }\r\n\r\n        this.assertNotEmptyString(message.invocationId, \"Invalid payload for Completion message.\");\r\n    }\r\n\r\n    private assertNotEmptyString(value: any, errorMessage: string): void {\r\n        if (typeof value !== \"string\" || value === \"\") {\r\n            throw new Error(errorMessage);\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { DefaultReconnectPolicy } from \"./DefaultReconnectPolicy\";\r\nimport { HttpConnection } from \"./HttpConnection\";\r\nimport { HubConnection } from \"./HubConnection\";\r\nimport { IHttpConnectionOptions } from \"./IHttpConnectionOptions\";\r\nimport { IHubProtocol } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { IRetryPolicy } from \"./IRetryPolicy\";\r\nimport { HttpTransportType } from \"./ITransport\";\r\nimport { JsonHubProtocol } from \"./JsonHubProtocol\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { Arg, ConsoleLogger } from \"./Utils\";\r\n\r\n// tslint:disable:object-literal-sort-keys\r\nconst LogLevelNameMapping = {\r\n    trace: LogLevel.Trace,\r\n    debug: LogLevel.Debug,\r\n    info: LogLevel.Information,\r\n    information: LogLevel.Information,\r\n    warn: LogLevel.Warning,\r\n    warning: LogLevel.Warning,\r\n    error: LogLevel.Error,\r\n    critical: LogLevel.Critical,\r\n    none: LogLevel.None,\r\n};\r\n\r\nfunction parseLogLevel(name: string): LogLevel {\r\n    // Case-insensitive matching via lower-casing\r\n    // Yes, I know case-folding is a complicated problem in Unicode, but we only support\r\n    // the ASCII strings defined in LogLevelNameMapping anyway, so it's fine -anurse.\r\n    const mapping = LogLevelNameMapping[name.toLowerCase()];\r\n    if (typeof mapping !== \"undefined\") {\r\n        return mapping;\r\n    } else {\r\n        throw new Error(`Unknown log level: ${name}`);\r\n    }\r\n}\r\n\r\n/** A builder for configuring {@link @microsoft/signalr.HubConnection} instances. */\r\nexport class HubConnectionBuilder {\r\n    /** @internal */\r\n    public protocol?: IHubProtocol;\r\n    /** @internal */\r\n    public httpConnectionOptions?: IHttpConnectionOptions;\r\n    /** @internal */\r\n    public url?: string;\r\n    /** @internal */\r\n    public logger?: ILogger;\r\n\r\n    /** If defined, this indicates the client should automatically attempt to reconnect if the connection is lost. */\r\n    /** @internal */\r\n    public reconnectPolicy?: IRetryPolicy;\r\n\r\n    /** Configures console logging for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @param {LogLevel} logLevel The minimum level of messages to log. Anything at this level, or a more severe level, will be logged.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public configureLogging(logLevel: LogLevel): HubConnectionBuilder;\r\n\r\n    /** Configures custom logging for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @param {ILogger} logger An object implementing the {@link @microsoft/signalr.ILogger} interface, which will be used to write all log messages.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public configureLogging(logger: ILogger): HubConnectionBuilder;\r\n\r\n    /** Configures custom logging for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @param {string} logLevel A string representing a LogLevel setting a minimum level of messages to log.\r\n     *    See {@link https://docs.microsoft.com/aspnet/core/signalr/configuration#configure-logging|the documentation for client logging configuration} for more details.\r\n     */\r\n    public configureLogging(logLevel: string): HubConnectionBuilder;\r\n\r\n    /** Configures custom logging for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @param {LogLevel | string | ILogger} logging A {@link @microsoft/signalr.LogLevel}, a string representing a LogLevel, or an object implementing the {@link @microsoft/signalr.ILogger} interface.\r\n     *    See {@link https://docs.microsoft.com/aspnet/core/signalr/configuration#configure-logging|the documentation for client logging configuration} for more details.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public configureLogging(logging: LogLevel | string | ILogger): HubConnectionBuilder;\r\n    public configureLogging(logging: LogLevel | string | ILogger): HubConnectionBuilder {\r\n        Arg.isRequired(logging, \"logging\");\r\n\r\n        if (isLogger(logging)) {\r\n            this.logger = logging;\r\n        } else if (typeof logging === \"string\") {\r\n            const logLevel = parseLogLevel(logging);\r\n            this.logger = new ConsoleLogger(logLevel);\r\n        } else {\r\n            this.logger = new ConsoleLogger(logging);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use HTTP-based transports to connect to the specified URL.\r\n     *\r\n     * The transport will be selected automatically based on what the server and client support.\r\n     *\r\n     * @param {string} url The URL the connection will use.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public withUrl(url: string): HubConnectionBuilder;\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use the specified HTTP-based transport to connect to the specified URL.\r\n     *\r\n     * @param {string} url The URL the connection will use.\r\n     * @param {HttpTransportType} transportType The specific transport to use.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public withUrl(url: string, transportType: HttpTransportType): HubConnectionBuilder;\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use HTTP-based transports to connect to the specified URL.\r\n     *\r\n     * @param {string} url The URL the connection will use.\r\n     * @param {IHttpConnectionOptions} options An options object used to configure the connection.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public withUrl(url: string, options: IHttpConnectionOptions): HubConnectionBuilder;\r\n    public withUrl(url: string, transportTypeOrOptions?: IHttpConnectionOptions | HttpTransportType): HubConnectionBuilder {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isNotEmpty(url, \"url\");\r\n\r\n        this.url = url;\r\n\r\n        // Flow-typing knows where it's at. Since HttpTransportType is a number and IHttpConnectionOptions is guaranteed\r\n        // to be an object, we know (as does TypeScript) this comparison is all we need to figure out which overload was called.\r\n        if (typeof transportTypeOrOptions === \"object\") {\r\n            this.httpConnectionOptions = { ...this.httpConnectionOptions, ...transportTypeOrOptions };\r\n        } else {\r\n            this.httpConnectionOptions = {\r\n                ...this.httpConnectionOptions,\r\n                transport: transportTypeOrOptions,\r\n            };\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use the specified Hub Protocol.\r\n     *\r\n     * @param {IHubProtocol} protocol The {@link @microsoft/signalr.IHubProtocol} implementation to use.\r\n     */\r\n    public withHubProtocol(protocol: IHubProtocol): HubConnectionBuilder {\r\n        Arg.isRequired(protocol, \"protocol\");\r\n\r\n        this.protocol = protocol;\r\n        return this;\r\n    }\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to automatically attempt to reconnect if the connection is lost.\r\n     * By default, the client will wait 0, 2, 10 and 30 seconds respectively before trying up to 4 reconnect attempts.\r\n     */\r\n    public withAutomaticReconnect(): HubConnectionBuilder;\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to automatically attempt to reconnect if the connection is lost.\r\n     *\r\n     * @param {number[]} retryDelays An array containing the delays in milliseconds before trying each reconnect attempt.\r\n     * The length of the array represents how many failed reconnect attempts it takes before the client will stop attempting to reconnect.\r\n     */\r\n    public withAutomaticReconnect(retryDelays: number[]): HubConnectionBuilder;\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to automatically attempt to reconnect if the connection is lost.\r\n     *\r\n     * @param {IRetryPolicy} reconnectPolicy An {@link @microsoft/signalR.IRetryPolicy} that controls the timing and number of reconnect attempts.\r\n     */\r\n    public withAutomaticReconnect(reconnectPolicy: IRetryPolicy): HubConnectionBuilder;\r\n    public withAutomaticReconnect(retryDelaysOrReconnectPolicy?: number[] | IRetryPolicy): HubConnectionBuilder {\r\n        if (this.reconnectPolicy) {\r\n            throw new Error(\"A reconnectPolicy has already been set.\");\r\n        }\r\n\r\n        if (!retryDelaysOrReconnectPolicy) {\r\n            this.reconnectPolicy = new DefaultReconnectPolicy();\r\n        } else if (Array.isArray(retryDelaysOrReconnectPolicy)) {\r\n            this.reconnectPolicy = new DefaultReconnectPolicy(retryDelaysOrReconnectPolicy);\r\n        } else {\r\n            this.reconnectPolicy = retryDelaysOrReconnectPolicy;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /** Creates a {@link @microsoft/signalr.HubConnection} from the configuration options specified in this builder.\r\n     *\r\n     * @returns {HubConnection} The configured {@link @microsoft/signalr.HubConnection}.\r\n     */\r\n    public build(): HubConnection {\r\n        // If httpConnectionOptions has a logger, use it. Otherwise, override it with the one\r\n        // provided to configureLogger\r\n        const httpConnectionOptions = this.httpConnectionOptions || {};\r\n\r\n        // If it's 'null', the user **explicitly** asked for null, don't mess with it.\r\n        if (httpConnectionOptions.logger === undefined) {\r\n            // If our logger is undefined or null, that's OK, the HttpConnection constructor will handle it.\r\n            httpConnectionOptions.logger = this.logger;\r\n        }\r\n\r\n        // Now create the connection\r\n        if (!this.url) {\r\n            throw new Error(\"The 'HubConnectionBuilder.withUrl' method must be called before building the connection.\");\r\n        }\r\n        const connection = new HttpConnection(this.url, httpConnectionOptions);\r\n\r\n        return HubConnection.create(\r\n            connection,\r\n            this.logger || NullLogger.instance,\r\n            this.protocol || new JsonHubProtocol(),\r\n            this.reconnectPolicy);\r\n    }\r\n}\r\n\r\nfunction isLogger(logger: any): logger is ILogger {\r\n    return logger.log !== undefined;\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// Everything that users need to access must be exported here. Including interfaces.\r\nexport { AbortSignal } from \"./AbortController\";\r\nexport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nexport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nexport { DefaultHttpClient } from \"./DefaultHttpClient\";\r\nexport { IHttpConnectionOptions } from \"./IHttpConnectionOptions\";\r\nexport { HubConnection, HubConnectionState } from \"./HubConnection\";\r\nexport { HubConnectionBuilder } from \"./HubConnectionBuilder\";\r\nexport { MessageType, MessageHeaders, HubMessage, HubMessageBase, HubInvocationMessage, InvocationMessage, StreamInvocationMessage, StreamItemMessage, CompletionMessage,\r\n    PingMessage, CloseMessage, CancelInvocationMessage, IHubProtocol } from \"./IHubProtocol\";\r\nexport { ILogger, LogLevel } from \"./ILogger\";\r\nexport { HttpTransportType, TransferFormat, ITransport } from \"./ITransport\";\r\nexport { IStreamSubscriber, IStreamResult, ISubscription } from \"./Stream\";\r\nexport { NullLogger } from \"./Loggers\";\r\nexport { JsonHubProtocol } from \"./JsonHubProtocol\";\r\nexport { Subject } from \"./Subject\";\r\nexport { IRetryPolicy, RetryContext } from \"./IRetryPolicy\";\r\nexport { VERSION } from \"./Utils\";\r\n","import * as signalR from \"@microsoft/signalr\";\r\n\r\nconst negotiateUrl = \"http://localhost:7071/api\";\r\n// const negotiateUrl = \"https://smarthighwayfunctionapp.azurewebsites.net/api\";\r\nconst lights = {\"t1\": [\"north\", \"south\"], \"t2\": [\"west\", \"east\"]};\r\nconst state_to_color = {0: \"Red\", 1:\"Green\"};\r\nconst laneIds = [\"north_t1\", \"south_t1\", \"east_t2\", \"west_t2\"];\r\nconst laneNames = {\"east_t2\": \"East to West\", \"west_t2\": \"West to East\",\r\n                    \"north_t1\": \"North to South\", \"south_t1\": \"South to North\"};\r\n\r\nconst connection = new signalR.HubConnectionBuilder()\r\n    .withUrl(`${negotiateUrl}`)\r\n    .withAutomaticReconnect()\r\n    .configureLogging(signalR.LogLevel.Information)\r\n    .build();\r\n\r\nasync function start() {\r\n    try {\r\n        await connection.start();\r\n        console.assert(connection.state === signalR.HubConnectionState.Connected);\r\n        console.log(\"SignalR Connected.\");\r\n    } catch (err) {\r\n        console.assert(connection.state === signalR.HubConnectionState.Disconnected);\r\n        console.log(err);\r\n        setTimeout(() => start(), 5000);\r\n    }\r\n};\r\n\r\n\r\nconnection.onclose(async () => {\r\n        await start();\r\n});\r\n\r\nconnection.on(\"newMessage\", (values, numCarsDict) => {\r\n    for (const [lightId, directions] of Object.entries(lights)){\r\n        for (var i = 0; i < directions.length; i++){\r\n            var direction = directions[i];\r\n            var lightElem = document.getElementById(`light_${direction}_${lightId}`);\r\n            if (typeof(Storage) != \"undefined\"){\r\n                localStorage.setItem(`light_${direction}_${lightId}`, state_to_color[values[lightId]]);\r\n            }\r\n            var oppositeDirection = directions[1 - i];\r\n            var content = document.createTextNode(`${direction} to ${oppositeDirection} is ${state_to_color[values[lightId]]}`);\r\n            if (lightElem.innerHTML != null){\r\n                lightElem.innerHTML = ``;\r\n            }\r\n            var fontElem = document.createElement(\"font\");\r\n            fontElem.appendChild(content);\r\n            fontElem.setAttribute(\"color\", state_to_color[values[lightId]].toLowerCase());\r\n            lightElem.appendChild(fontElem);\r\n        }\r\n    }\r\n    // var t1_north = document.getElementById(\"light_north_t1\");\r\n    // var t2 = document.getElementById(\"t2\");\r\n    \r\n    // var t1_content = document.createTextNode(`North to South and South to North is ${state_to_color[values[\"t1\"]]}`);\r\n    // var t2_content = document.createTextNode(`East to West and West to East is ${state_to_color[values[\"t2\"]]}`);\r\n\r\n    // t1.innerHTML = '';\r\n    // t2.innerHTML = '';\r\n    // t1.appendChild(t1_content);\r\n    // t2.appendChild(t2_content);\r\n\r\n    var laneDiv = document.getElementById(\"lanes\");\r\n    for (const [laneId, numCars] of Object.entries(numCarsDict)){\r\n        laneElem = laneDiv.querySelector(`#${laneId}`);\r\n        if (laneElem == null){\r\n            laneElem = document.createElement(\"h2\");\r\n            laneElem.setAttribute(\"id\", laneId);\r\n            laneDiv.appendChild(laneElem);\r\n        }\r\n        else{\r\n            if (laneElem.innerHTML != null){\r\n                laneElem.innerHTML = ``;\r\n            }\r\n        }\r\n        if (typeof(Storage) != \"undefined\"){\r\n            localStorage.setItem(laneId, numCars);\r\n        }\r\n        laneElem.setAttribute(\"class\", \"lane_info\");\r\n        laneElem.appendChild(document.createTextNode(`${laneNames[laneId]}\\n${numCars} 🚗`));\r\n    }\r\n});\r\n\r\n\r\nfunction loadPreviousData(){\r\n    if (typeof(Storage) == \"undefined\"){\r\n        console.log(\"localStorage is not supported\");\r\n        return;\r\n    }\r\n    console.log(\"localStorage is supported!\");\r\n    for (const [lightId, directions] of Object.entries(lights)){\r\n        for (var i = 0; i < directions.length; i++){\r\n            var direction = directions[i];\r\n            var color = localStorage.getItem(`light_${direction}_${lightId}`);\r\n            if (color == null){ // was not previously stored\r\n                console.log(`color is not stored for light_${direction}_${lightId}`);\r\n                continue;\r\n            }\r\n            var direction = directions[i];\r\n            var lightElem = document.getElementById(`light_${direction}_${lightId}`);\r\n            console.log(`lightElem = ${lightElem}, light_${direction}_${lightId}`);\r\n            var oppositeDirection = directions[1 - i];\r\n            var content = document.createTextNode(`${direction} to ${oppositeDirection} is ${color}`);\r\n            if (lightElem.innerHTML != null){\r\n                lightElem.innerHTML = ``;\r\n            }            var fontElem = document.createElement(\"font\");\r\n            fontElem.appendChild(content);\r\n            fontElem.setAttribute(\"color\", color.toLowerCase());\r\n            lightElem.appendChild(fontElem);\r\n        }\r\n    }\r\n\r\n    var laneDiv = document.getElementById(\"lanes\");\r\n    for (const laneId of laneIds){\r\n        var numCars = localStorage.getItem(laneId);\r\n        if (numCars == null){ // was not previously stored\r\n            continue;\r\n        }\r\n        laneElem = laneDiv.querySelector(`#${laneId}`);\r\n        if (laneElem == null){\r\n            laneElem = document.createElement(\"h2\");\r\n            laneElem.setAttribute(\"id\", laneId);\r\n            laneDiv.appendChild(laneElem);\r\n        }\r\n        else{\r\n            if (laneElem.innerHTML != null){\r\n                laneElem.innerHTML = ``;\r\n            }\r\n        }\r\n        laneElem.setAttribute(\"class\", \"lane_info\");\r\n        laneElem.appendChild(document.createTextNode(`${laneNames[laneId]}\\n${numCars} 🚗`));\r\n    }\r\n}\r\n\r\nasync function main() {\r\n    // start the signalR connection\r\n    start();\r\n\r\n    loadPreviousData();\r\n    \r\n}\r\n\r\nfunction simulate(){\r\n    var simulateUrl = \"http://localhost:7071/api/Simulate\";\r\n    // var simulateUrl = \"https://smarthighwayfunctionapp.azurewebsites.net/api/Simulate?\";\r\n    $.ajax(simulateUrl, {\r\n    type: 'GET',\r\n    data: {\r\n      num_times: 1\r\n    }\r\n  });\r\n}\r\n\r\nwindow.onload = function() {\r\n    var btn = document.getElementById(\"simulateBtn\");\r\n    btn.onclick = simulate;\r\n    main();\r\n}\r\n"]}