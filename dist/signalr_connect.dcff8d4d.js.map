{"version":3,"sources":["../../src/Errors.ts","../../src/HttpClient.ts","../../src/ILogger.ts","../../src/Loggers.ts","node_modules/process/browser.js","../../src/Utils.ts","../../src/FetchHttpClient.ts","../../src/XhrHttpClient.ts","../../src/DefaultHttpClient.ts","../../src/TextMessageFormat.ts","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/isarray/index.js","node_modules/node-libs-browser/node_modules/buffer/index.js","../../src/HandshakeProtocol.ts","../../src/IHubProtocol.ts","../../src/Subject.ts","../../src/HubConnection.ts","../../src/DefaultReconnectPolicy.ts","../../src/ITransport.ts","../../src/AbortController.ts","../../src/LongPollingTransport.ts","../../src/ServerSentEventsTransport.ts","../../src/WebSocketTransport.ts","../../src/HttpConnection.ts","../../src/JsonHubProtocol.ts","../../src/HubConnectionBuilder.ts","../../src/index.ts","signalr_connect.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["process","module","exports","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","setTimeout","e","clearTimeout","runTimeout","fun","call","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","nextTick","args","Array","arguments","i","push","Item","array","prototype","apply","title","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","negotiateUrl","lights","state_to_color","laneIds","laneNames","connection","signalR","HubConnectionBuilder","withUrl","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","console","assert","state","HubConnectionState","Connected","log","err","Disconnected","onclose","values","numCarsDict","lightId","directions","Object","entries","direction","lightElem","document","getElementById","Storage","localStorage","setItem","oppositeDirection","content","createTextNode","innerHTML","fontElem","createElement","appendChild","setAttribute","toLowerCase","laneDiv","laneId","numCars","laneElem","querySelector","loadPreviousData","color","getItem","main","simulate","simulateUrl","$","ajax","type","data","num_times","window","onload","btn","onclick","OVERLAY_ID","OldModule","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","clear","hmrApply","v","hmrAcceptRun","reload","close","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","body","remove","stackTrace","innerText","getParents","modules","parents","k","d","dep","isArray","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"signalr_connect.dcff8d4d.js","sourceRoot":"..","sourcesContent":["// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n/** Error thrown when an HTTP request fails. */\r\nexport class HttpError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // tslint:disable-next-line:variable-name\r\n    private __proto__: Error;\r\n\r\n    /** The HTTP status code represented by this error. */\r\n    public statusCode: number;\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     * @param {number} statusCode The HTTP status code represented by this error.\r\n     */\r\n    constructor(errorMessage: string, statusCode: number) {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n        this.statusCode = statusCode;\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n\r\n/** Error thrown when a timeout elapses. */\r\nexport class TimeoutError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // tslint:disable-next-line:variable-name\r\n    private __proto__: Error;\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.TimeoutError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    constructor(errorMessage: string = \"A timeout occurred.\") {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n\r\n/** Error thrown when an action is aborted. */\r\nexport class AbortError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // tslint:disable-next-line:variable-name\r\n    private __proto__: Error;\r\n\r\n    /** Constructs a new instance of {@link AbortError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    constructor(errorMessage: string = \"An abort occurred.\") {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { AbortSignal } from \"./AbortController\";\r\nimport { MessageHeaders } from \"./IHubProtocol\";\r\n\r\n/** Represents an HTTP request. */\r\nexport interface HttpRequest {\r\n    /** The HTTP method to use for the request. */\r\n    method?: string;\r\n\r\n    /** The URL for the request. */\r\n    url?: string;\r\n\r\n    /** The body content for the request. May be a string or an ArrayBuffer (for binary data). */\r\n    content?: string | ArrayBuffer;\r\n\r\n    /** An object describing headers to apply to the request. */\r\n    headers?: MessageHeaders;\r\n\r\n    /** The XMLHttpRequestResponseType to apply to the request. */\r\n    responseType?: XMLHttpRequestResponseType;\r\n\r\n    /** An AbortSignal that can be monitored for cancellation. */\r\n    abortSignal?: AbortSignal;\r\n\r\n    /** The time to wait for the request to complete before throwing a TimeoutError. Measured in milliseconds. */\r\n    timeout?: number;\r\n\r\n    /** This controls whether credentials such as cookies are sent in cross-site requests. */\r\n    withCredentials?: boolean;\r\n}\r\n\r\n/** Represents an HTTP response. */\r\nexport class HttpResponse {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     */\r\n    constructor(statusCode: number);\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code and message.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     * @param {string} statusText The status message of the response.\r\n     */\r\n    constructor(statusCode: number, statusText: string);\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code, message and string content.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     * @param {string} statusText The status message of the response.\r\n     * @param {string} content The content of the response.\r\n     */\r\n    constructor(statusCode: number, statusText: string, content: string);\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code, message and binary content.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     * @param {string} statusText The status message of the response.\r\n     * @param {ArrayBuffer} content The content of the response.\r\n     */\r\n    constructor(statusCode: number, statusText: string, content: ArrayBuffer);\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code, message and binary content.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     * @param {string} statusText The status message of the response.\r\n     * @param {string | ArrayBuffer} content The content of the response.\r\n     */\r\n    constructor(statusCode: number, statusText: string, content: string | ArrayBuffer);\r\n    constructor(\r\n        public readonly statusCode: number,\r\n        public readonly statusText?: string,\r\n        public readonly content?: string | ArrayBuffer) {\r\n    }\r\n}\r\n\r\n/** Abstraction over an HTTP client.\r\n *\r\n * This class provides an abstraction over an HTTP client so that a different implementation can be provided on different platforms.\r\n */\r\nexport abstract class HttpClient {\r\n    /** Issues an HTTP GET request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public get(url: string): Promise<HttpResponse>;\r\n\r\n    /** Issues an HTTP GET request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @param {HttpRequest} options Additional options to configure the request. The 'url' field in this object will be overridden by the url parameter.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public get(url: string, options: HttpRequest): Promise<HttpResponse>;\r\n    public get(url: string, options?: HttpRequest): Promise<HttpResponse> {\r\n        return this.send({\r\n            ...options,\r\n            method: \"GET\",\r\n            url,\r\n        });\r\n    }\r\n\r\n    /** Issues an HTTP POST request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public post(url: string): Promise<HttpResponse>;\r\n\r\n    /** Issues an HTTP POST request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @param {HttpRequest} options Additional options to configure the request. The 'url' field in this object will be overridden by the url parameter.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public post(url: string, options: HttpRequest): Promise<HttpResponse>;\r\n    public post(url: string, options?: HttpRequest): Promise<HttpResponse> {\r\n        return this.send({\r\n            ...options,\r\n            method: \"POST\",\r\n            url,\r\n        });\r\n    }\r\n\r\n    /** Issues an HTTP DELETE request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public delete(url: string): Promise<HttpResponse>;\r\n\r\n    /** Issues an HTTP DELETE request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @param {HttpRequest} options Additional options to configure the request. The 'url' field in this object will be overridden by the url parameter.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public delete(url: string, options: HttpRequest): Promise<HttpResponse>;\r\n    public delete(url: string, options?: HttpRequest): Promise<HttpResponse> {\r\n        return this.send({\r\n            ...options,\r\n            method: \"DELETE\",\r\n            url,\r\n        });\r\n    }\r\n\r\n    /** Issues an HTTP request to the specified URL, returning a {@link Promise} that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {HttpRequest} request An {@link @microsoft/signalr.HttpRequest} describing the request to send.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an HttpResponse describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public abstract send(request: HttpRequest): Promise<HttpResponse>;\r\n\r\n    /** Gets all cookies that apply to the specified URL.\r\n     *\r\n     * @param url The URL that the cookies are valid for.\r\n     * @returns {string} A string containing all the key-value cookie pairs for the specified URL.\r\n     */\r\n    // @ts-ignore\r\n    public getCookieString(url: string): string {\r\n        return \"\";\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// These values are designed to match the ASP.NET Log Levels since that's the pattern we're emulating here.\r\n/** Indicates the severity of a log message.\r\n *\r\n * Log Levels are ordered in increasing severity. So `Debug` is more severe than `Trace`, etc.\r\n */\r\nexport enum LogLevel {\r\n    /** Log level for very low severity diagnostic messages. */\r\n    Trace = 0,\r\n    /** Log level for low severity diagnostic messages. */\r\n    Debug = 1,\r\n    /** Log level for informational diagnostic messages. */\r\n    Information = 2,\r\n    /** Log level for diagnostic messages that indicate a non-fatal problem. */\r\n    Warning = 3,\r\n    /** Log level for diagnostic messages that indicate a failure in the current operation. */\r\n    Error = 4,\r\n    /** Log level for diagnostic messages that indicate a failure that will terminate the entire application. */\r\n    Critical = 5,\r\n    /** The highest possible log level. Used when configuring logging to indicate that no log messages should be emitted. */\r\n    None = 6,\r\n}\r\n\r\n/** An abstraction that provides a sink for diagnostic messages. */\r\nexport interface ILogger {\r\n    /** Called by the framework to emit a diagnostic message.\r\n     *\r\n     * @param {LogLevel} logLevel The severity level of the message.\r\n     * @param {string} message The message.\r\n     */\r\n    log(logLevel: LogLevel, message: string): void;\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\n\r\n/** A logger that does nothing when log messages are sent to it. */\r\nexport class NullLogger implements ILogger {\r\n    /** The singleton instance of the {@link @microsoft/signalr.NullLogger}. */\r\n    public static instance: ILogger = new NullLogger();\r\n\r\n    private constructor() {}\r\n\r\n    /** @inheritDoc */\r\n    // tslint:disable-next-line\r\n    public log(_logLevel: LogLevel, _message: string): void {\r\n    }\r\n}\r\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { MessageHeaders } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { IStreamSubscriber, ISubscription } from \"./Stream\";\r\nimport { Subject } from \"./Subject\";\r\n\r\n// Version token that will be replaced by the prepack command\r\n/** The version of the SignalR client. */\r\nexport const VERSION: string = \"0.0.0-DEV_BUILD\";\r\n\r\n/** @private */\r\nexport class Arg {\r\n    public static isRequired(val: any, name: string): void {\r\n        if (val === null || val === undefined) {\r\n            throw new Error(`The '${name}' argument is required.`);\r\n        }\r\n    }\r\n    public static isNotEmpty(val: string, name: string): void {\r\n        if (!val || val.match(/^\\s*$/)) {\r\n            throw new Error(`The '${name}' argument should not be empty.`);\r\n        }\r\n    }\r\n\r\n    public static isIn(val: any, values: any, name: string): void {\r\n        // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.\r\n        if (!(val in values)) {\r\n            throw new Error(`Unknown ${name} value: ${val}.`);\r\n        }\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport class Platform {\r\n    public static get isBrowser(): boolean {\r\n        return typeof window === \"object\";\r\n    }\r\n\r\n    public static get isWebWorker(): boolean {\r\n        return typeof self === \"object\" && \"importScripts\" in self;\r\n    }\r\n\r\n    public static get isNode(): boolean {\r\n        return !this.isBrowser && !this.isWebWorker;\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport function getDataDetail(data: any, includeContent: boolean): string {\r\n    let detail = \"\";\r\n    if (isArrayBuffer(data)) {\r\n        detail = `Binary data of length ${data.byteLength}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${formatArrayBuffer(data)}'`;\r\n        }\r\n    } else if (typeof data === \"string\") {\r\n        detail = `String data of length ${data.length}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${data}'`;\r\n        }\r\n    }\r\n    return detail;\r\n}\r\n\r\n/** @private */\r\nexport function formatArrayBuffer(data: ArrayBuffer): string {\r\n    const view = new Uint8Array(data);\r\n\r\n    // Uint8Array.map only supports returning another Uint8Array?\r\n    let str = \"\";\r\n    view.forEach((num) => {\r\n        const pad = num < 16 ? \"0\" : \"\";\r\n        str += `0x${pad}${num.toString(16)} `;\r\n    });\r\n\r\n    // Trim of trailing space.\r\n    return str.substr(0, str.length - 1);\r\n}\r\n\r\n// Also in signalr-protocol-msgpack/Utils.ts\r\n/** @private */\r\nexport function isArrayBuffer(val: any): val is ArrayBuffer {\r\n    return val && typeof ArrayBuffer !== \"undefined\" &&\r\n        (val instanceof ArrayBuffer ||\r\n            // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\r\n            (val.constructor && val.constructor.name === \"ArrayBuffer\"));\r\n}\r\n\r\n/** @private */\r\nexport async function sendMessage(logger: ILogger, transportName: string, httpClient: HttpClient, url: string, accessTokenFactory: (() => string | Promise<string>) | undefined,\r\n                                  content: string | ArrayBuffer, logMessageContent: boolean, withCredentials: boolean, defaultHeaders: MessageHeaders): Promise<void> {\r\n    let headers = {};\r\n    if (accessTokenFactory) {\r\n        const token = await accessTokenFactory();\r\n        if (token) {\r\n            headers = {\r\n                [\"Authorization\"]: `Bearer ${token}`,\r\n            };\r\n        }\r\n    }\r\n\r\n    const [name, value] = getUserAgentHeader();\r\n    headers[name] = value;\r\n\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) sending data. ${getDataDetail(content, logMessageContent)}.`);\r\n\r\n    const responseType = isArrayBuffer(content) ? \"arraybuffer\" : \"text\";\r\n    const response = await httpClient.post(url, {\r\n        content,\r\n        headers: { ...headers, ...defaultHeaders},\r\n        responseType,\r\n        withCredentials,\r\n    });\r\n\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) request complete. Response status: ${response.statusCode}.`);\r\n}\r\n\r\n/** @private */\r\nexport function createLogger(logger?: ILogger | LogLevel) {\r\n    if (logger === undefined) {\r\n        return new ConsoleLogger(LogLevel.Information);\r\n    }\r\n\r\n    if (logger === null) {\r\n        return NullLogger.instance;\r\n    }\r\n\r\n    if ((logger as ILogger).log) {\r\n        return logger as ILogger;\r\n    }\r\n\r\n    return new ConsoleLogger(logger as LogLevel);\r\n}\r\n\r\n/** @private */\r\nexport class SubjectSubscription<T> implements ISubscription<T> {\r\n    private subject: Subject<T>;\r\n    private observer: IStreamSubscriber<T>;\r\n\r\n    constructor(subject: Subject<T>, observer: IStreamSubscriber<T>) {\r\n        this.subject = subject;\r\n        this.observer = observer;\r\n    }\r\n\r\n    public dispose(): void {\r\n        const index: number = this.subject.observers.indexOf(this.observer);\r\n        if (index > -1) {\r\n            this.subject.observers.splice(index, 1);\r\n        }\r\n\r\n        if (this.subject.observers.length === 0 && this.subject.cancelCallback) {\r\n            this.subject.cancelCallback().catch((_) => { });\r\n        }\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport class ConsoleLogger implements ILogger {\r\n    private readonly minimumLogLevel: LogLevel;\r\n\r\n    // Public for testing purposes.\r\n    public outputConsole: {\r\n        error(message: any): void,\r\n        warn(message: any): void,\r\n        info(message: any): void,\r\n        log(message: any): void,\r\n    };\r\n\r\n    constructor(minimumLogLevel: LogLevel) {\r\n        this.minimumLogLevel = minimumLogLevel;\r\n        this.outputConsole = console;\r\n    }\r\n\r\n    public log(logLevel: LogLevel, message: string): void {\r\n        if (logLevel >= this.minimumLogLevel) {\r\n            switch (logLevel) {\r\n                case LogLevel.Critical:\r\n                case LogLevel.Error:\r\n                    this.outputConsole.error(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\r\n                    break;\r\n                case LogLevel.Warning:\r\n                    this.outputConsole.warn(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\r\n                    break;\r\n                case LogLevel.Information:\r\n                    this.outputConsole.info(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\r\n                    break;\r\n                default:\r\n                    // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\r\n                    this.outputConsole.log(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport function getUserAgentHeader(): [string, string] {\r\n    let userAgentHeaderName = \"X-SignalR-User-Agent\";\r\n    if (Platform.isNode) {\r\n        userAgentHeaderName = \"User-Agent\";\r\n    }\r\n    return [ userAgentHeaderName, constructUserAgent(VERSION, getOsName(), getRuntime(), getRuntimeVersion()) ];\r\n}\r\n\r\n/** @private */\r\nexport function constructUserAgent(version: string, os: string, runtime: string, runtimeVersion: string | undefined): string {\r\n    // Microsoft SignalR/[Version] ([Detailed Version]; [Operating System]; [Runtime]; [Runtime Version])\r\n    let userAgent: string = \"Microsoft SignalR/\";\r\n\r\n    const majorAndMinor = version.split(\".\");\r\n    userAgent += `${majorAndMinor[0]}.${majorAndMinor[1]}`;\r\n    userAgent += ` (${version}; `;\r\n\r\n    if (os && os !== \"\") {\r\n        userAgent += `${os}; `;\r\n    } else {\r\n        userAgent += \"Unknown OS; \";\r\n    }\r\n\r\n    userAgent += `${runtime}`;\r\n\r\n    if (runtimeVersion) {\r\n        userAgent += `; ${runtimeVersion}`;\r\n    } else {\r\n        userAgent += \"; Unknown Runtime Version\";\r\n    }\r\n\r\n    userAgent += \")\";\r\n    return userAgent;\r\n}\r\n\r\nfunction getOsName(): string {\r\n    if (Platform.isNode) {\r\n        switch (process.platform) {\r\n            case \"win32\":\r\n                return \"Windows NT\";\r\n            case \"darwin\":\r\n                return \"macOS\";\r\n            case \"linux\":\r\n                return \"Linux\";\r\n            default:\r\n                return process.platform;\r\n        }\r\n    } else {\r\n        return \"\";\r\n    }\r\n}\r\n\r\nfunction getRuntimeVersion(): string | undefined {\r\n    if (Platform.isNode) {\r\n        return process.versions.node;\r\n    }\r\n    return undefined;\r\n}\r\n\r\nfunction getRuntime(): string {\r\n    if (Platform.isNode) {\r\n        return \"NodeJS\";\r\n    } else {\r\n        return \"Browser\";\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// @ts-ignore: This will be removed from built files and is here to make the types available during dev work\r\nimport * as tough from \"@types/tough-cookie\";\r\n\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { Platform } from \"./Utils\";\r\n\r\nexport class FetchHttpClient extends HttpClient {\r\n    private readonly abortControllerType: { prototype: AbortController, new(): AbortController };\r\n    private readonly fetchType: (input: RequestInfo, init?: RequestInit) => Promise<Response>;\r\n    private readonly jar?: tough.CookieJar;\r\n\r\n    private readonly logger: ILogger;\r\n\r\n    public constructor(logger: ILogger) {\r\n        super();\r\n        this.logger = logger;\r\n\r\n        if (typeof fetch === \"undefined\") {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n\r\n            // Cookies aren't automatically handled in Node so we need to add a CookieJar to preserve cookies across requests\r\n            this.jar = new (requireFunc(\"tough-cookie\")).CookieJar();\r\n            this.fetchType = requireFunc(\"node-fetch\");\r\n\r\n            // node-fetch doesn't have a nice API for getting and setting cookies\r\n            // fetch-cookie will wrap a fetch implementation with a default CookieJar or a provided one\r\n            this.fetchType = requireFunc(\"fetch-cookie\")(this.fetchType, this.jar);\r\n\r\n            // Node needs EventListener methods on AbortController which our custom polyfill doesn't provide\r\n            this.abortControllerType = requireFunc(\"abort-controller\");\r\n        } else {\r\n            this.fetchType = fetch.bind(self);\r\n            this.abortControllerType = AbortController;\r\n        }\r\n    }\r\n\r\n    /** @inheritDoc */\r\n    public async send(request: HttpRequest): Promise<HttpResponse> {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            throw new AbortError();\r\n        }\r\n\r\n        if (!request.method) {\r\n            throw new Error(\"No method defined.\");\r\n        }\r\n        if (!request.url) {\r\n            throw new Error(\"No url defined.\");\r\n        }\r\n\r\n        const abortController = new this.abortControllerType();\r\n\r\n        let error: any;\r\n        // Hook our abortSignal into the abort controller\r\n        if (request.abortSignal) {\r\n            request.abortSignal.onabort = () => {\r\n                abortController.abort();\r\n                error = new AbortError();\r\n            };\r\n        }\r\n\r\n        // If a timeout has been passed in, setup a timeout to call abort\r\n        // Type needs to be any to fit window.setTimeout and NodeJS.setTimeout\r\n        let timeoutId: any = null;\r\n        if (request.timeout) {\r\n            const msTimeout = request.timeout!;\r\n            timeoutId = setTimeout(() => {\r\n                abortController.abort();\r\n                this.logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                error = new TimeoutError();\r\n            }, msTimeout);\r\n        }\r\n\r\n        let response: Response;\r\n        try {\r\n            response = await this.fetchType(request.url!, {\r\n                body: request.content!,\r\n                cache: \"no-cache\",\r\n                credentials: request.withCredentials === true ? \"include\" : \"same-origin\",\r\n                headers: {\r\n                    \"Content-Type\": \"text/plain;charset=UTF-8\",\r\n                    \"X-Requested-With\": \"XMLHttpRequest\",\r\n                    ...request.headers,\r\n                },\r\n                method: request.method!,\r\n                mode: \"cors\",\r\n                redirect: \"manual\",\r\n                signal: abortController.signal,\r\n            });\r\n        } catch (e) {\r\n            if (error) {\r\n                throw error;\r\n            }\r\n            this.logger.log(\r\n                LogLevel.Warning,\r\n                `Error from HTTP request. ${e}.`,\r\n            );\r\n            throw e;\r\n        } finally {\r\n            if (timeoutId) {\r\n                clearTimeout(timeoutId);\r\n            }\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = null;\r\n            }\r\n        }\r\n\r\n        if (!response.ok) {\r\n            throw new HttpError(response.statusText, response.status);\r\n        }\r\n\r\n        const content = deserializeContent(response, request.responseType);\r\n        const payload = await content;\r\n\r\n        return new HttpResponse(\r\n            response.status,\r\n            response.statusText,\r\n            payload,\r\n        );\r\n    }\r\n\r\n    public getCookieString(url: string): string {\r\n        let cookies: string = \"\";\r\n        if (Platform.isNode && this.jar) {\r\n            // @ts-ignore: unused variable\r\n            this.jar.getCookies(url, (e, c) => cookies = c.join(\"; \"));\r\n        }\r\n        return cookies;\r\n    }\r\n}\r\n\r\nfunction deserializeContent(response: Response, responseType?: XMLHttpRequestResponseType): Promise<string | ArrayBuffer> {\r\n    let content;\r\n    switch (responseType) {\r\n        case \"arraybuffer\":\r\n            content = response.arrayBuffer();\r\n            break;\r\n        case \"text\":\r\n            content = response.text();\r\n            break;\r\n        case \"blob\":\r\n        case \"document\":\r\n        case \"json\":\r\n            throw new Error(`${responseType} is not supported.`);\r\n        default:\r\n            content = response.text();\r\n            break;\r\n    }\r\n\r\n    return content;\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\n\r\nexport class XhrHttpClient extends HttpClient {\r\n    private readonly logger: ILogger;\r\n\r\n    public constructor(logger: ILogger) {\r\n        super();\r\n        this.logger = logger;\r\n    }\r\n\r\n    /** @inheritDoc */\r\n    public send(request: HttpRequest): Promise<HttpResponse> {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n\r\n        return new Promise<HttpResponse>((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n\r\n            xhr.open(request.method!, request.url!, true);\r\n            xhr.withCredentials = request.withCredentials === undefined ? true : request.withCredentials;\r\n            xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n            // Explicitly setting the Content-Type header for React Native on Android platform.\r\n            xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\r\n\r\n            const headers = request.headers;\r\n            if (headers) {\r\n                Object.keys(headers)\r\n                    .forEach((header) => {\r\n                        xhr.setRequestHeader(header, headers[header]);\r\n                    });\r\n            }\r\n\r\n            if (request.responseType) {\r\n                xhr.responseType = request.responseType;\r\n            }\r\n\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = () => {\r\n                    xhr.abort();\r\n                    reject(new AbortError());\r\n                };\r\n            }\r\n\r\n            if (request.timeout) {\r\n                xhr.timeout = request.timeout;\r\n            }\r\n\r\n            xhr.onload = () => {\r\n                if (request.abortSignal) {\r\n                    request.abortSignal.onabort = null;\r\n                }\r\n\r\n                if (xhr.status >= 200 && xhr.status < 300) {\r\n                    resolve(new HttpResponse(xhr.status, xhr.statusText, xhr.response || xhr.responseText));\r\n                } else {\r\n                    reject(new HttpError(xhr.statusText, xhr.status));\r\n                }\r\n            };\r\n\r\n            xhr.onerror = () => {\r\n                this.logger.log(LogLevel.Warning, `Error from HTTP request. ${xhr.status}: ${xhr.statusText}.`);\r\n                reject(new HttpError(xhr.statusText, xhr.status));\r\n            };\r\n\r\n            xhr.ontimeout = () => {\r\n                this.logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                reject(new TimeoutError());\r\n            };\r\n\r\n            xhr.send(request.content || \"\");\r\n        });\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { AbortError } from \"./Errors\";\r\nimport { FetchHttpClient } from \"./FetchHttpClient\";\r\nimport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nimport { ILogger } from \"./ILogger\";\r\nimport { Platform } from \"./Utils\";\r\nimport { XhrHttpClient } from \"./XhrHttpClient\";\r\n\r\n/** Default implementation of {@link @microsoft/signalr.HttpClient}. */\r\nexport class DefaultHttpClient extends HttpClient {\r\n    private readonly httpClient: HttpClient;\r\n\r\n    /** Creates a new instance of the {@link @microsoft/signalr.DefaultHttpClient}, using the provided {@link @microsoft/signalr.ILogger} to log messages. */\r\n    public constructor(logger: ILogger) {\r\n        super();\r\n\r\n        if (typeof fetch !== \"undefined\" || Platform.isNode) {\r\n            this.httpClient = new FetchHttpClient(logger);\r\n        } else if (typeof XMLHttpRequest !== \"undefined\") {\r\n            this.httpClient = new XhrHttpClient(logger);\r\n        } else {\r\n            throw new Error(\"No usable HttpClient found.\");\r\n        }\r\n    }\r\n\r\n    /** @inheritDoc */\r\n    public send(request: HttpRequest): Promise<HttpResponse> {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n\r\n        return this.httpClient.send(request);\r\n    }\r\n\r\n    public getCookieString(url: string): string {\r\n        return this.httpClient.getCookieString(url);\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// Not exported from index\r\n/** @private */\r\nexport class TextMessageFormat {\r\n    public static RecordSeparatorCode = 0x1e;\r\n    public static RecordSeparator = String.fromCharCode(TextMessageFormat.RecordSeparatorCode);\r\n\r\n    public static write(output: string): string {\r\n        return `${output}${TextMessageFormat.RecordSeparator}`;\r\n    }\r\n\r\n    public static parse(input: string): string[] {\r\n        if (input[input.length - 1] !== TextMessageFormat.RecordSeparator) {\r\n            throw new Error(\"Message is incomplete.\");\r\n        }\r\n\r\n        const messages = input.split(TextMessageFormat.RecordSeparator);\r\n        messages.pop();\r\n        return messages;\r\n    }\r\n}\r\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\n\r\n/** @private */\r\nexport interface HandshakeRequestMessage {\r\n    readonly protocol: string;\r\n    readonly version: number;\r\n}\r\n\r\n/** @private */\r\nexport interface HandshakeResponseMessage {\r\n    readonly error: string;\r\n    readonly minorVersion: number;\r\n}\r\n\r\n/** @private */\r\nexport class HandshakeProtocol {\r\n    // Handshake request is always JSON\r\n    public writeHandshakeRequest(handshakeRequest: HandshakeRequestMessage): string {\r\n        return TextMessageFormat.write(JSON.stringify(handshakeRequest));\r\n    }\r\n\r\n    public parseHandshakeResponse(data: any): [any, HandshakeResponseMessage] {\r\n        let responseMessage: HandshakeResponseMessage;\r\n        let messageData: string;\r\n        let remainingData: any;\r\n\r\n        if (isArrayBuffer(data) || (typeof Buffer !== \"undefined\" && data instanceof Buffer)) {\r\n            // Format is binary but still need to read JSON text from handshake response\r\n            const binaryData = new Uint8Array(data);\r\n            const separatorIndex = binaryData.indexOf(TextMessageFormat.RecordSeparatorCode);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            const responseLength = separatorIndex + 1;\r\n            messageData = String.fromCharCode.apply(null, binaryData.slice(0, responseLength));\r\n            remainingData = (binaryData.byteLength > responseLength) ? binaryData.slice(responseLength).buffer : null;\r\n        } else {\r\n            const textData: string = data;\r\n            const separatorIndex = textData.indexOf(TextMessageFormat.RecordSeparator);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            const responseLength = separatorIndex + 1;\r\n            messageData = textData.substring(0, responseLength);\r\n            remainingData = (textData.length > responseLength) ? textData.substring(responseLength) : null;\r\n        }\r\n\r\n        // At this point we should have just the single handshake message\r\n        const messages = TextMessageFormat.parse(messageData);\r\n        const response = JSON.parse(messages[0]);\r\n        if (response.type) {\r\n            throw new Error(\"Expected a handshake response from the server.\");\r\n        }\r\n        responseMessage = response;\r\n\r\n        // multiple messages could have arrived with handshake\r\n        // return additional data to be parsed as usual, or null if all parsed\r\n        return [remainingData, responseMessage];\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { ILogger } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\n\r\n/** Defines the type of a Hub Message. */\r\nexport enum MessageType {\r\n    /** Indicates the message is an Invocation message and implements the {@link @microsoft/signalr.InvocationMessage} interface. */\r\n    Invocation = 1,\r\n    /** Indicates the message is a StreamItem message and implements the {@link @microsoft/signalr.StreamItemMessage} interface. */\r\n    StreamItem = 2,\r\n    /** Indicates the message is a Completion message and implements the {@link @microsoft/signalr.CompletionMessage} interface. */\r\n    Completion = 3,\r\n    /** Indicates the message is a Stream Invocation message and implements the {@link @microsoft/signalr.StreamInvocationMessage} interface. */\r\n    StreamInvocation = 4,\r\n    /** Indicates the message is a Cancel Invocation message and implements the {@link @microsoft/signalr.CancelInvocationMessage} interface. */\r\n    CancelInvocation = 5,\r\n    /** Indicates the message is a Ping message and implements the {@link @microsoft/signalr.PingMessage} interface. */\r\n    Ping = 6,\r\n    /** Indicates the message is a Close message and implements the {@link @microsoft/signalr.CloseMessage} interface. */\r\n    Close = 7,\r\n}\r\n\r\n/** Defines a dictionary of string keys and string values representing headers attached to a Hub message. */\r\nexport interface MessageHeaders {\r\n    /** Gets or sets the header with the specified key. */\r\n    [key: string]: string;\r\n}\r\n\r\n/** Union type of all known Hub messages. */\r\nexport type HubMessage =\r\n    InvocationMessage |\r\n    StreamInvocationMessage |\r\n    StreamItemMessage |\r\n    CompletionMessage |\r\n    CancelInvocationMessage |\r\n    PingMessage |\r\n    CloseMessage;\r\n\r\n/** Defines properties common to all Hub messages. */\r\nexport interface HubMessageBase {\r\n    /** A {@link @microsoft/signalr.MessageType} value indicating the type of this message. */\r\n    readonly type: MessageType;\r\n}\r\n\r\n/** Defines properties common to all Hub messages relating to a specific invocation. */\r\nexport interface HubInvocationMessage extends HubMessageBase {\r\n    /** A {@link @microsoft/signalr.MessageHeaders} dictionary containing headers attached to the message. */\r\n    readonly headers?: MessageHeaders;\r\n    /** The ID of the invocation relating to this message.\r\n     *\r\n     * This is expected to be present for {@link @microsoft/signalr.StreamInvocationMessage} and {@link @microsoft/signalr.CompletionMessage}. It may\r\n     * be 'undefined' for an {@link @microsoft/signalr.InvocationMessage} if the sender does not expect a response.\r\n     */\r\n    readonly invocationId?: string;\r\n}\r\n\r\n/** A hub message representing a non-streaming invocation. */\r\nexport interface InvocationMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.Invocation;\r\n    /** The target method name. */\r\n    readonly target: string;\r\n    /** The target method arguments. */\r\n    readonly arguments: any[];\r\n    /** The target methods stream IDs. */\r\n    readonly streamIds?: string[];\r\n}\r\n\r\n/** A hub message representing a streaming invocation. */\r\nexport interface StreamInvocationMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.StreamInvocation;\r\n\r\n    /** The invocation ID. */\r\n    readonly invocationId: string;\r\n    /** The target method name. */\r\n    readonly target: string;\r\n    /** The target method arguments. */\r\n    readonly arguments: any[];\r\n    /** The target methods stream IDs. */\r\n    readonly streamIds?: string[];\r\n}\r\n\r\n/** A hub message representing a single item produced as part of a result stream. */\r\nexport interface StreamItemMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.StreamItem;\r\n\r\n    /** The invocation ID. */\r\n    readonly invocationId: string;\r\n\r\n    /** The item produced by the server. */\r\n    readonly item?: any;\r\n}\r\n\r\n/** A hub message representing the result of an invocation. */\r\nexport interface CompletionMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.Completion;\r\n    /** The invocation ID. */\r\n    readonly invocationId: string;\r\n    /** The error produced by the invocation, if any.\r\n     *\r\n     * Either {@link @microsoft/signalr.CompletionMessage.error} or {@link @microsoft/signalr.CompletionMessage.result} must be defined, but not both.\r\n     */\r\n    readonly error?: string;\r\n    /** The result produced by the invocation, if any.\r\n     *\r\n     * Either {@link @microsoft/signalr.CompletionMessage.error} or {@link @microsoft/signalr.CompletionMessage.result} must be defined, but not both.\r\n     */\r\n    readonly result?: any;\r\n}\r\n\r\n/** A hub message indicating that the sender is still active. */\r\nexport interface PingMessage extends HubMessageBase {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.Ping;\r\n}\r\n\r\n/** A hub message indicating that the sender is closing the connection.\r\n *\r\n * If {@link @microsoft/signalr.CloseMessage.error} is defined, the sender is closing the connection due to an error.\r\n */\r\nexport interface CloseMessage extends HubMessageBase {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.Close;\r\n    /** The error that triggered the close, if any.\r\n     *\r\n     * If this property is undefined, the connection was closed normally and without error.\r\n     */\r\n    readonly error?: string;\r\n\r\n    /** If true, clients with automatic reconnects enabled should attempt to reconnect after receiving the CloseMessage. Otherwise, they should not. */\r\n    readonly allowReconnect?: boolean;\r\n}\r\n\r\n/** A hub message sent to request that a streaming invocation be canceled. */\r\nexport interface CancelInvocationMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.CancelInvocation;\r\n    /** The invocation ID. */\r\n    readonly invocationId: string;\r\n}\r\n\r\n/** A protocol abstraction for communicating with SignalR Hubs.  */\r\nexport interface IHubProtocol {\r\n    /** The name of the protocol. This is used by SignalR to resolve the protocol between the client and server. */\r\n    readonly name: string;\r\n    /** The version of the protocol. */\r\n    readonly version: number;\r\n    /** The {@link @microsoft/signalr.TransferFormat} of the protocol. */\r\n    readonly transferFormat: TransferFormat;\r\n\r\n    /** Creates an array of {@link @microsoft/signalr.HubMessage} objects from the specified serialized representation.\r\n     *\r\n     * If {@link @microsoft/signalr.IHubProtocol.transferFormat} is 'Text', the `input` parameter must be a string, otherwise it must be an ArrayBuffer.\r\n     *\r\n     * @param {string | ArrayBuffer | Buffer} input A string, ArrayBuffer, or Buffer containing the serialized representation.\r\n     * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.\r\n     */\r\n    parseMessages(input: string | ArrayBuffer | Buffer, logger: ILogger): HubMessage[];\r\n\r\n    /** Writes the specified {@link @microsoft/signalr.HubMessage} to a string or ArrayBuffer and returns it.\r\n     *\r\n     * If {@link @microsoft/signalr.IHubProtocol.transferFormat} is 'Text', the result of this method will be a string, otherwise it will be an ArrayBuffer.\r\n     *\r\n     * @param {HubMessage} message The message to write.\r\n     * @returns {string | ArrayBuffer} A string or ArrayBuffer containing the serialized representation of the message.\r\n     */\r\n    writeMessage(message: HubMessage): string | ArrayBuffer;\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { IStreamResult, IStreamSubscriber, ISubscription } from \"./Stream\";\r\nimport { SubjectSubscription } from \"./Utils\";\r\n\r\n/** Stream implementation to stream items to the server. */\r\nexport class Subject<T> implements IStreamResult<T> {\r\n    /** @internal */\r\n    public observers: Array<IStreamSubscriber<T>>;\r\n\r\n    /** @internal */\r\n    public cancelCallback?: () => Promise<void>;\r\n\r\n    constructor() {\r\n        this.observers = [];\r\n    }\r\n\r\n    public next(item: T): void {\r\n        for (const observer of this.observers) {\r\n            observer.next(item);\r\n        }\r\n    }\r\n\r\n    public error(err: any): void {\r\n        for (const observer of this.observers) {\r\n            if (observer.error) {\r\n                observer.error(err);\r\n            }\r\n        }\r\n    }\r\n\r\n    public complete(): void {\r\n        for (const observer of this.observers) {\r\n            if (observer.complete) {\r\n                observer.complete();\r\n            }\r\n        }\r\n    }\r\n\r\n    public subscribe(observer: IStreamSubscriber<T>): ISubscription<T> {\r\n        this.observers.push(observer);\r\n        return new SubjectSubscription(this, observer);\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { HandshakeProtocol, HandshakeRequestMessage, HandshakeResponseMessage } from \"./HandshakeProtocol\";\r\nimport { IConnection } from \"./IConnection\";\r\nimport { CancelInvocationMessage, CompletionMessage, IHubProtocol, InvocationMessage, MessageType, StreamInvocationMessage, StreamItemMessage } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { IRetryPolicy } from \"./IRetryPolicy\";\r\nimport { IStreamResult } from \"./Stream\";\r\nimport { Subject } from \"./Subject\";\r\nimport { Arg } from \"./Utils\";\r\n\r\nconst DEFAULT_TIMEOUT_IN_MS: number = 30 * 1000;\r\nconst DEFAULT_PING_INTERVAL_IN_MS: number = 15 * 1000;\r\n\r\n/** Describes the current state of the {@link HubConnection} to the server. */\r\nexport enum HubConnectionState {\r\n    /** The hub connection is disconnected. */\r\n    Disconnected = \"Disconnected\",\r\n    /** The hub connection is connecting. */\r\n    Connecting = \"Connecting\",\r\n    /** The hub connection is connected. */\r\n    Connected = \"Connected\",\r\n    /** The hub connection is disconnecting. */\r\n    Disconnecting = \"Disconnecting\",\r\n    /** The hub connection is reconnecting. */\r\n    Reconnecting = \"Reconnecting\",\r\n}\r\n\r\n/** Represents a connection to a SignalR Hub. */\r\nexport class HubConnection {\r\n    private readonly cachedPingMessage: string | ArrayBuffer;\r\n    private readonly connection: IConnection;\r\n    private readonly logger: ILogger;\r\n    private readonly reconnectPolicy?: IRetryPolicy;\r\n    private protocol: IHubProtocol;\r\n    private handshakeProtocol: HandshakeProtocol;\r\n    private callbacks: { [invocationId: string]: (invocationEvent: StreamItemMessage | CompletionMessage | null, error?: Error) => void };\r\n    private methods: { [name: string]: Array<(...args: any[]) => void> };\r\n    private invocationId: number;\r\n\r\n    private closedCallbacks: Array<(error?: Error) => void>;\r\n    private reconnectingCallbacks: Array<(error?: Error) => void>;\r\n    private reconnectedCallbacks: Array<(connectionId?: string) => void>;\r\n\r\n    private receivedHandshakeResponse: boolean;\r\n    private handshakeResolver!: (value?: PromiseLike<{}>) => void;\r\n    private handshakeRejecter!: (reason?: any) => void;\r\n    private stopDuringStartError?: Error;\r\n\r\n    private connectionState: HubConnectionState;\r\n    // connectionStarted is tracked independently from connectionState, so we can check if the\r\n    // connection ever did successfully transition from connecting to connected before disconnecting.\r\n    private connectionStarted: boolean;\r\n    private startPromise?: Promise<void>;\r\n    private stopPromise?: Promise<void>;\r\n    private nextKeepAlive: number = 0;\r\n\r\n    // The type of these a) doesn't matter and b) varies when building in browser and node contexts\r\n    // Since we're building the WebPack bundle directly from the TypeScript, this matters (previously\r\n    // we built the bundle from the compiled JavaScript).\r\n    private reconnectDelayHandle?: any;\r\n    private timeoutHandle?: any;\r\n    private pingServerHandle?: any;\r\n\r\n    /** The server timeout in milliseconds.\r\n     *\r\n     * If this timeout elapses without receiving any messages from the server, the connection will be terminated with an error.\r\n     * The default timeout value is 30,000 milliseconds (30 seconds).\r\n     */\r\n    public serverTimeoutInMilliseconds: number;\r\n\r\n    /** Default interval at which to ping the server.\r\n     *\r\n     * The default value is 15,000 milliseconds (15 seconds).\r\n     * Allows the server to detect hard disconnects (like when a client unplugs their computer).\r\n     * The ping will happen at most as often as the server pings.\r\n     * If the server pings every 5 seconds, a value lower than 5 will ping every 5 seconds.\r\n     */\r\n    public keepAliveIntervalInMilliseconds: number;\r\n\r\n    /** @internal */\r\n    // Using a public static factory method means we can have a private constructor and an _internal_\r\n    // create method that can be used by HubConnectionBuilder. An \"internal\" constructor would just\r\n    // be stripped away and the '.d.ts' file would have no constructor, which is interpreted as a\r\n    // public parameter-less constructor.\r\n    public static create(connection: IConnection, logger: ILogger, protocol: IHubProtocol, reconnectPolicy?: IRetryPolicy): HubConnection {\r\n        return new HubConnection(connection, logger, protocol, reconnectPolicy);\r\n    }\r\n\r\n    private constructor(connection: IConnection, logger: ILogger, protocol: IHubProtocol, reconnectPolicy?: IRetryPolicy) {\r\n        Arg.isRequired(connection, \"connection\");\r\n        Arg.isRequired(logger, \"logger\");\r\n        Arg.isRequired(protocol, \"protocol\");\r\n\r\n        this.serverTimeoutInMilliseconds = DEFAULT_TIMEOUT_IN_MS;\r\n        this.keepAliveIntervalInMilliseconds = DEFAULT_PING_INTERVAL_IN_MS;\r\n\r\n        this.logger = logger;\r\n        this.protocol = protocol;\r\n        this.connection = connection;\r\n        this.reconnectPolicy = reconnectPolicy;\r\n        this.handshakeProtocol = new HandshakeProtocol();\r\n\r\n        this.connection.onreceive = (data: any) => this.processIncomingData(data);\r\n        this.connection.onclose = (error?: Error) => this.connectionClosed(error);\r\n\r\n        this.callbacks = {};\r\n        this.methods = {};\r\n        this.closedCallbacks = [];\r\n        this.reconnectingCallbacks = [];\r\n        this.reconnectedCallbacks = [];\r\n        this.invocationId = 0;\r\n        this.receivedHandshakeResponse = false;\r\n        this.connectionState = HubConnectionState.Disconnected;\r\n        this.connectionStarted = false;\r\n\r\n        this.cachedPingMessage = this.protocol.writeMessage({ type: MessageType.Ping });\r\n    }\r\n\r\n    /** Indicates the state of the {@link HubConnection} to the server. */\r\n    get state(): HubConnectionState {\r\n        return this.connectionState;\r\n    }\r\n\r\n    /** Represents the connection id of the {@link HubConnection} on the server. The connection id will be null when the connection is either\r\n     *  in the disconnected state or if the negotiation step was skipped.\r\n     */\r\n    get connectionId(): string | null {\r\n        return this.connection ? (this.connection.connectionId || null) : null;\r\n    }\r\n\r\n    /** Indicates the url of the {@link HubConnection} to the server. */\r\n    get baseUrl(): string {\r\n        return this.connection.baseUrl || \"\";\r\n    }\r\n\r\n    /**\r\n     * Sets a new url for the HubConnection. Note that the url can only be changed when the connection is in either the Disconnected or\r\n     * Reconnecting states.\r\n     * @param {string} url The url to connect to.\r\n     */\r\n    set baseUrl(url: string) {\r\n        if (this.connectionState !== HubConnectionState.Disconnected && this.connectionState !== HubConnectionState.Reconnecting) {\r\n            throw new Error(\"The HubConnection must be in the Disconnected or Reconnecting state to change the url.\");\r\n        }\r\n\r\n        if (!url) {\r\n            throw new Error(\"The HubConnection url must be a valid url.\");\r\n        }\r\n\r\n        this.connection.baseUrl = url;\r\n    }\r\n\r\n    /** Starts the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully established, or rejects with an error.\r\n     */\r\n    public start(): Promise<void> {\r\n        this.startPromise = this.startWithStateTransitions();\r\n        return this.startPromise;\r\n    }\r\n\r\n    private async startWithStateTransitions(): Promise<void> {\r\n        if (this.connectionState !== HubConnectionState.Disconnected) {\r\n            return Promise.reject(new Error(\"Cannot start a HubConnection that is not in the 'Disconnected' state.\"));\r\n        }\r\n\r\n        this.connectionState = HubConnectionState.Connecting;\r\n        this.logger.log(LogLevel.Debug, \"Starting HubConnection.\");\r\n\r\n        try {\r\n            await this.startInternal();\r\n\r\n            this.connectionState = HubConnectionState.Connected;\r\n            this.connectionStarted = true;\r\n            this.logger.log(LogLevel.Debug, \"HubConnection connected successfully.\");\r\n        } catch (e) {\r\n            this.connectionState = HubConnectionState.Disconnected;\r\n            this.logger.log(LogLevel.Debug, `HubConnection failed to start successfully because of error '${e}'.`);\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n\r\n    private async startInternal() {\r\n        this.stopDuringStartError = undefined;\r\n        this.receivedHandshakeResponse = false;\r\n        // Set up the promise before any connection is (re)started otherwise it could race with received messages\r\n        const handshakePromise = new Promise((resolve, reject) => {\r\n            this.handshakeResolver = resolve;\r\n            this.handshakeRejecter = reject;\r\n        });\r\n\r\n        await this.connection.start(this.protocol.transferFormat);\r\n\r\n        try {\r\n            const handshakeRequest: HandshakeRequestMessage = {\r\n                protocol: this.protocol.name,\r\n                version: this.protocol.version,\r\n            };\r\n\r\n            this.logger.log(LogLevel.Debug, \"Sending handshake request.\");\r\n\r\n            await this.sendMessage(this.handshakeProtocol.writeHandshakeRequest(handshakeRequest));\r\n\r\n            this.logger.log(LogLevel.Information, `Using HubProtocol '${this.protocol.name}'.`);\r\n\r\n            // defensively cleanup timeout in case we receive a message from the server before we finish start\r\n            this.cleanupTimeout();\r\n            this.resetTimeoutPeriod();\r\n            this.resetKeepAliveInterval();\r\n\r\n            await handshakePromise;\r\n\r\n            // It's important to check the stopDuringStartError instead of just relying on the handshakePromise\r\n            // being rejected on close, because this continuation can run after both the handshake completed successfully\r\n            // and the connection was closed.\r\n            if (this.stopDuringStartError) {\r\n                // It's important to throw instead of returning a rejected promise, because we don't want to allow any state\r\n                // transitions to occur between now and the calling code observing the exceptions. Returning a rejected promise\r\n                // will cause the calling continuation to get scheduled to run later.\r\n                throw this.stopDuringStartError;\r\n            }\r\n        } catch (e) {\r\n            this.logger.log(LogLevel.Debug, `Hub handshake failed with error '${e}' during start(). Stopping HubConnection.`);\r\n\r\n            this.cleanupTimeout();\r\n            this.cleanupPingTimer();\r\n\r\n            // HttpConnection.stop() should not complete until after the onclose callback is invoked.\r\n            // This will transition the HubConnection to the disconnected state before HttpConnection.stop() completes.\r\n            await this.connection.stop(e);\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    /** Stops the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully terminated, or rejects with an error.\r\n     */\r\n    public async stop(): Promise<void> {\r\n        // Capture the start promise before the connection might be restarted in an onclose callback.\r\n        const startPromise = this.startPromise;\r\n\r\n        this.stopPromise = this.stopInternal();\r\n        await this.stopPromise;\r\n\r\n        try {\r\n            // Awaiting undefined continues immediately\r\n            await startPromise;\r\n        } catch (e) {\r\n            // This exception is returned to the user as a rejected Promise from the start method.\r\n        }\r\n    }\r\n\r\n    private stopInternal(error?: Error): Promise<void> {\r\n        if (this.connectionState === HubConnectionState.Disconnected) {\r\n            this.logger.log(LogLevel.Debug, `Call to HubConnection.stop(${error}) ignored because it is already in the disconnected state.`);\r\n            return Promise.resolve();\r\n        }\r\n\r\n        if (this.connectionState === HubConnectionState.Disconnecting) {\r\n            this.logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnecting state.`);\r\n            return this.stopPromise!;\r\n        }\r\n\r\n        this.connectionState = HubConnectionState.Disconnecting;\r\n\r\n        this.logger.log(LogLevel.Debug, \"Stopping HubConnection.\");\r\n\r\n        if (this.reconnectDelayHandle) {\r\n            // We're in a reconnect delay which means the underlying connection is currently already stopped.\r\n            // Just clear the handle to stop the reconnect loop (which no one is waiting on thankfully) and\r\n            // fire the onclose callbacks.\r\n            this.logger.log(LogLevel.Debug, \"Connection stopped during reconnect delay. Done reconnecting.\");\r\n\r\n            clearTimeout(this.reconnectDelayHandle);\r\n            this.reconnectDelayHandle = undefined;\r\n\r\n            this.completeClose();\r\n            return Promise.resolve();\r\n        }\r\n\r\n        this.cleanupTimeout();\r\n        this.cleanupPingTimer();\r\n        this.stopDuringStartError = error || new Error(\"The connection was stopped before the hub handshake could complete.\");\r\n\r\n        // HttpConnection.stop() should not complete until after either HttpConnection.start() fails\r\n        // or the onclose callback is invoked. The onclose callback will transition the HubConnection\r\n        // to the disconnected state if need be before HttpConnection.stop() completes.\r\n        return this.connection.stop(error);\r\n    }\r\n\r\n    /** Invokes a streaming hub method on the server using the specified name and arguments.\r\n     *\r\n     * @typeparam T The type of the items returned by the server.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {IStreamResult<T>} An object that yields results from the server as they are received.\r\n     */\r\n    public stream<T = any>(methodName: string, ...args: any[]): IStreamResult<T> {\r\n        const [streams, streamIds] = this.replaceStreamingParams(args);\r\n        const invocationDescriptor = this.createStreamInvocation(methodName, args, streamIds);\r\n\r\n        let promiseQueue: Promise<void>;\r\n        const subject = new Subject<T>();\r\n        subject.cancelCallback = () => {\r\n            const cancelInvocation: CancelInvocationMessage = this.createCancelInvocation(invocationDescriptor.invocationId);\r\n\r\n            delete this.callbacks[invocationDescriptor.invocationId];\r\n\r\n            return promiseQueue.then(() => {\r\n                return this.sendWithProtocol(cancelInvocation);\r\n            });\r\n        };\r\n\r\n        this.callbacks[invocationDescriptor.invocationId] = (invocationEvent: CompletionMessage | StreamItemMessage | null, error?: Error) => {\r\n            if (error) {\r\n                subject.error(error);\r\n                return;\r\n            } else if (invocationEvent) {\r\n                // invocationEvent will not be null when an error is not passed to the callback\r\n                if (invocationEvent.type === MessageType.Completion) {\r\n                    if (invocationEvent.error) {\r\n                        subject.error(new Error(invocationEvent.error));\r\n                    } else {\r\n                        subject.complete();\r\n                    }\r\n                } else {\r\n                    subject.next((invocationEvent.item) as T);\r\n                }\r\n            }\r\n        };\r\n\r\n        promiseQueue = this.sendWithProtocol(invocationDescriptor)\r\n            .catch((e) => {\r\n                subject.error(e);\r\n                delete this.callbacks[invocationDescriptor.invocationId];\r\n            });\r\n\r\n        this.launchStreams(streams, promiseQueue);\r\n\r\n        return subject;\r\n    }\r\n\r\n    private sendMessage(message: any) {\r\n        this.resetKeepAliveInterval();\r\n        return this.connection.send(message);\r\n    }\r\n\r\n    /**\r\n     * Sends a js object to the server.\r\n     * @param message The js object to serialize and send.\r\n     */\r\n    private sendWithProtocol(message: any) {\r\n        return this.sendMessage(this.protocol.writeMessage(message));\r\n    }\r\n\r\n    /** Invokes a hub method on the server using the specified name and arguments. Does not wait for a response from the receiver.\r\n     *\r\n     * The Promise returned by this method resolves when the client has sent the invocation to the server. The server may still\r\n     * be processing the invocation.\r\n     *\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<void>} A Promise that resolves when the invocation has been successfully sent, or rejects with an error.\r\n     */\r\n    public send(methodName: string, ...args: any[]): Promise<void> {\r\n        const [streams, streamIds] = this.replaceStreamingParams(args);\r\n        const sendPromise = this.sendWithProtocol(this.createInvocation(methodName, args, true, streamIds));\r\n\r\n        this.launchStreams(streams, sendPromise);\r\n\r\n        return sendPromise;\r\n    }\r\n\r\n    /** Invokes a hub method on the server using the specified name and arguments.\r\n     *\r\n     * The Promise returned by this method resolves when the server indicates it has finished invoking the method. When the promise\r\n     * resolves, the server has finished invoking the method. If the server method returns a result, it is produced as the result of\r\n     * resolving the Promise.\r\n     *\r\n     * @typeparam T The expected return type.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<T>} A Promise that resolves with the result of the server method (if any), or rejects with an error.\r\n     */\r\n    public invoke<T = any>(methodName: string, ...args: any[]): Promise<T> {\r\n        const [streams, streamIds] = this.replaceStreamingParams(args);\r\n        const invocationDescriptor = this.createInvocation(methodName, args, false, streamIds);\r\n\r\n        const p = new Promise<any>((resolve, reject) => {\r\n            // invocationId will always have a value for a non-blocking invocation\r\n            this.callbacks[invocationDescriptor.invocationId!] = (invocationEvent: StreamItemMessage | CompletionMessage | null, error?: Error) => {\r\n                if (error) {\r\n                    reject(error);\r\n                    return;\r\n                } else if (invocationEvent) {\r\n                    // invocationEvent will not be null when an error is not passed to the callback\r\n                    if (invocationEvent.type === MessageType.Completion) {\r\n                        if (invocationEvent.error) {\r\n                            reject(new Error(invocationEvent.error));\r\n                        } else {\r\n                            resolve(invocationEvent.result);\r\n                        }\r\n                    } else {\r\n                        reject(new Error(`Unexpected message type: ${invocationEvent.type}`));\r\n                    }\r\n                }\r\n            };\r\n\r\n            const promiseQueue = this.sendWithProtocol(invocationDescriptor)\r\n                .catch((e) => {\r\n                    reject(e);\r\n                    // invocationId will always have a value for a non-blocking invocation\r\n                    delete this.callbacks[invocationDescriptor.invocationId!];\r\n                });\r\n\r\n            this.launchStreams(streams, promiseQueue);\r\n        });\r\n\r\n        return p;\r\n    }\r\n\r\n    /** Registers a handler that will be invoked when the hub method with the specified method name is invoked.\r\n     *\r\n     * @param {string} methodName The name of the hub method to define.\r\n     * @param {Function} newMethod The handler that will be raised when the hub method is invoked.\r\n     */\r\n    public on(methodName: string, newMethod: (...args: any[]) => void) {\r\n        if (!methodName || !newMethod) {\r\n            return;\r\n        }\r\n\r\n        methodName = methodName.toLowerCase();\r\n        if (!this.methods[methodName]) {\r\n            this.methods[methodName] = [];\r\n        }\r\n\r\n        // Preventing adding the same handler multiple times.\r\n        if (this.methods[methodName].indexOf(newMethod) !== -1) {\r\n            return;\r\n        }\r\n\r\n        this.methods[methodName].push(newMethod);\r\n    }\r\n\r\n    /** Removes all handlers for the specified hub method.\r\n     *\r\n     * @param {string} methodName The name of the method to remove handlers for.\r\n     */\r\n    public off(methodName: string): void;\r\n\r\n    /** Removes the specified handler for the specified hub method.\r\n     *\r\n     * You must pass the exact same Function instance as was previously passed to {@link @microsoft/signalr.HubConnection.on}. Passing a different instance (even if the function\r\n     * body is the same) will not remove the handler.\r\n     *\r\n     * @param {string} methodName The name of the method to remove handlers for.\r\n     * @param {Function} method The handler to remove. This must be the same Function instance as the one passed to {@link @microsoft/signalr.HubConnection.on}.\r\n     */\r\n    public off(methodName: string, method: (...args: any[]) => void): void;\r\n    public off(methodName: string, method?: (...args: any[]) => void): void {\r\n        if (!methodName) {\r\n            return;\r\n        }\r\n\r\n        methodName = methodName.toLowerCase();\r\n        const handlers = this.methods[methodName];\r\n        if (!handlers) {\r\n            return;\r\n        }\r\n        if (method) {\r\n            const removeIdx = handlers.indexOf(method);\r\n            if (removeIdx !== -1) {\r\n                handlers.splice(removeIdx, 1);\r\n                if (handlers.length === 0) {\r\n                    delete this.methods[methodName];\r\n                }\r\n            }\r\n        } else {\r\n            delete this.methods[methodName];\r\n        }\r\n\r\n    }\r\n\r\n    /** Registers a handler that will be invoked when the connection is closed.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection is closed. Optionally receives a single argument containing the error that caused the connection to close (if any).\r\n     */\r\n    public onclose(callback: (error?: Error) => void) {\r\n        if (callback) {\r\n            this.closedCallbacks.push(callback);\r\n        }\r\n    }\r\n\r\n    /** Registers a handler that will be invoked when the connection starts reconnecting.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection starts reconnecting. Optionally receives a single argument containing the error that caused the connection to start reconnecting (if any).\r\n     */\r\n    public onreconnecting(callback: (error?: Error) => void) {\r\n        if (callback) {\r\n            this.reconnectingCallbacks.push(callback);\r\n        }\r\n    }\r\n\r\n    /** Registers a handler that will be invoked when the connection successfully reconnects.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection successfully reconnects.\r\n     */\r\n    public onreconnected(callback: (connectionId?: string) => void) {\r\n        if (callback) {\r\n            this.reconnectedCallbacks.push(callback);\r\n        }\r\n    }\r\n\r\n    private processIncomingData(data: any) {\r\n        this.cleanupTimeout();\r\n\r\n        if (!this.receivedHandshakeResponse) {\r\n            data = this.processHandshakeResponse(data);\r\n            this.receivedHandshakeResponse = true;\r\n        }\r\n\r\n        // Data may have all been read when processing handshake response\r\n        if (data) {\r\n            // Parse the messages\r\n            const messages = this.protocol.parseMessages(data, this.logger);\r\n\r\n            for (const message of messages) {\r\n                switch (message.type) {\r\n                    case MessageType.Invocation:\r\n                        this.invokeClientMethod(message);\r\n                        break;\r\n                    case MessageType.StreamItem:\r\n                    case MessageType.Completion:\r\n                        const callback = this.callbacks[message.invocationId];\r\n                        if (callback) {\r\n                            if (message.type === MessageType.Completion) {\r\n                                delete this.callbacks[message.invocationId];\r\n                            }\r\n                            callback(message);\r\n                        }\r\n                        break;\r\n                    case MessageType.Ping:\r\n                        // Don't care about pings\r\n                        break;\r\n                    case MessageType.Close:\r\n                        this.logger.log(LogLevel.Information, \"Close message received from server.\");\r\n\r\n                        const error = message.error ? new Error(\"Server returned an error on close: \" + message.error) : undefined;\r\n\r\n                        if (message.allowReconnect === true) {\r\n                            // It feels wrong not to await connection.stop() here, but processIncomingData is called as part of an onreceive callback which is not async,\r\n                            // this is already the behavior for serverTimeout(), and HttpConnection.Stop() should catch and log all possible exceptions.\r\n\r\n                            // tslint:disable-next-line:no-floating-promises\r\n                            this.connection.stop(error);\r\n                        } else {\r\n                            // We cannot await stopInternal() here, but subsequent calls to stop() will await this if stopInternal() is still ongoing.\r\n                            this.stopPromise = this.stopInternal(error);\r\n                        }\r\n\r\n                        break;\r\n                    default:\r\n                        this.logger.log(LogLevel.Warning, `Invalid message type: ${message.type}.`);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.resetTimeoutPeriod();\r\n    }\r\n\r\n    private processHandshakeResponse(data: any): any {\r\n        let responseMessage: HandshakeResponseMessage;\r\n        let remainingData: any;\r\n\r\n        try {\r\n            [remainingData, responseMessage] = this.handshakeProtocol.parseHandshakeResponse(data);\r\n        } catch (e) {\r\n            const message = \"Error parsing handshake response: \" + e;\r\n            this.logger.log(LogLevel.Error, message);\r\n\r\n            const error = new Error(message);\r\n            this.handshakeRejecter(error);\r\n            throw error;\r\n        }\r\n        if (responseMessage.error) {\r\n            const message = \"Server returned handshake error: \" + responseMessage.error;\r\n            this.logger.log(LogLevel.Error, message);\r\n\r\n            const error = new Error(message);\r\n            this.handshakeRejecter(error);\r\n            throw error;\r\n        } else {\r\n            this.logger.log(LogLevel.Debug, \"Server handshake complete.\");\r\n        }\r\n\r\n        this.handshakeResolver();\r\n        return remainingData;\r\n    }\r\n\r\n    private resetKeepAliveInterval() {\r\n        if (this.connection.features.inherentKeepAlive) {\r\n            return;\r\n        }\r\n\r\n        // Set the time we want the next keep alive to be sent\r\n        // Timer will be setup on next message receive\r\n        this.nextKeepAlive = new Date().getTime() + this.keepAliveIntervalInMilliseconds;\r\n\r\n        this.cleanupPingTimer();\r\n    }\r\n\r\n    private resetTimeoutPeriod() {\r\n        if (!this.connection.features || !this.connection.features.inherentKeepAlive) {\r\n            // Set the timeout timer\r\n            this.timeoutHandle = setTimeout(() => this.serverTimeout(), this.serverTimeoutInMilliseconds);\r\n\r\n            // Set keepAlive timer if there isn't one\r\n            if (this.pingServerHandle === undefined) {\r\n                let nextPing = this.nextKeepAlive - new Date().getTime();\r\n                if (nextPing < 0) {\r\n                    nextPing = 0;\r\n                }\r\n\r\n                // The timer needs to be set from a networking callback to avoid Chrome timer throttling from causing timers to run once a minute\r\n                this.pingServerHandle = setTimeout(async () => {\r\n                    if (this.connectionState === HubConnectionState.Connected) {\r\n                        try {\r\n                            await this.sendMessage(this.cachedPingMessage);\r\n                        } catch {\r\n                            // We don't care about the error. It should be seen elsewhere in the client.\r\n                            // The connection is probably in a bad or closed state now, cleanup the timer so it stops triggering\r\n                            this.cleanupPingTimer();\r\n                        }\r\n                    }\r\n                }, nextPing);\r\n            }\r\n        }\r\n    }\r\n\r\n    private serverTimeout() {\r\n        // The server hasn't talked to us in a while. It doesn't like us anymore ... :(\r\n        // Terminate the connection, but we don't need to wait on the promise. This could trigger reconnecting.\r\n        // tslint:disable-next-line:no-floating-promises\r\n        this.connection.stop(new Error(\"Server timeout elapsed without receiving a message from the server.\"));\r\n    }\r\n\r\n    private invokeClientMethod(invocationMessage: InvocationMessage) {\r\n        const methods = this.methods[invocationMessage.target.toLowerCase()];\r\n        if (methods) {\r\n            try {\r\n                methods.forEach((m) => m.apply(this, invocationMessage.arguments));\r\n            } catch (e) {\r\n                this.logger.log(LogLevel.Error, `A callback for the method ${invocationMessage.target.toLowerCase()} threw error '${e}'.`);\r\n            }\r\n\r\n            if (invocationMessage.invocationId) {\r\n                // This is not supported in v1. So we return an error to avoid blocking the server waiting for the response.\r\n                const message = \"Server requested a response, which is not supported in this version of the client.\";\r\n                this.logger.log(LogLevel.Error, message);\r\n\r\n                // We don't want to wait on the stop itself.\r\n                this.stopPromise = this.stopInternal(new Error(message));\r\n            }\r\n        } else {\r\n            this.logger.log(LogLevel.Warning, `No client method with the name '${invocationMessage.target}' found.`);\r\n        }\r\n    }\r\n\r\n    private connectionClosed(error?: Error) {\r\n        this.logger.log(LogLevel.Debug, `HubConnection.connectionClosed(${error}) called while in state ${this.connectionState}.`);\r\n\r\n        // Triggering this.handshakeRejecter is insufficient because it could already be resolved without the continuation having run yet.\r\n        this.stopDuringStartError = this.stopDuringStartError || error || new Error(\"The underlying connection was closed before the hub handshake could complete.\");\r\n\r\n        // If the handshake is in progress, start will be waiting for the handshake promise, so we complete it.\r\n        // If it has already completed, this should just noop.\r\n        if (this.handshakeResolver) {\r\n            this.handshakeResolver();\r\n        }\r\n\r\n        this.cancelCallbacksWithError(error || new Error(\"Invocation canceled due to the underlying connection being closed.\"));\r\n\r\n        this.cleanupTimeout();\r\n        this.cleanupPingTimer();\r\n\r\n        if (this.connectionState === HubConnectionState.Disconnecting) {\r\n            this.completeClose(error);\r\n        } else if (this.connectionState === HubConnectionState.Connected && this.reconnectPolicy) {\r\n            // tslint:disable-next-line:no-floating-promises\r\n            this.reconnect(error);\r\n        } else if (this.connectionState === HubConnectionState.Connected) {\r\n            this.completeClose(error);\r\n        }\r\n\r\n        // If none of the above if conditions were true were called the HubConnection must be in either:\r\n        // 1. The Connecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail it.\r\n        // 2. The Reconnecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail the current reconnect attempt\r\n        //    and potentially continue the reconnect() loop.\r\n        // 3. The Disconnected state in which case we're already done.\r\n    }\r\n\r\n    private completeClose(error?: Error) {\r\n        if (this.connectionStarted) {\r\n            this.connectionState = HubConnectionState.Disconnected;\r\n            this.connectionStarted = false;\r\n\r\n            try {\r\n                this.closedCallbacks.forEach((c) => c.apply(this, [error]));\r\n            } catch (e) {\r\n                this.logger.log(LogLevel.Error, `An onclose callback called with error '${error}' threw error '${e}'.`);\r\n            }\r\n        }\r\n    }\r\n\r\n    private async reconnect(error?: Error) {\r\n        const reconnectStartTime = Date.now();\r\n        let previousReconnectAttempts = 0;\r\n        let retryError = error !== undefined ? error : new Error(\"Attempting to reconnect due to a unknown error.\");\r\n\r\n        let nextRetryDelay = this.getNextRetryDelay(previousReconnectAttempts++, 0, retryError);\r\n\r\n        if (nextRetryDelay === null) {\r\n            this.logger.log(LogLevel.Debug, \"Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt.\");\r\n            this.completeClose(error);\r\n            return;\r\n        }\r\n\r\n        this.connectionState = HubConnectionState.Reconnecting;\r\n\r\n        if (error) {\r\n            this.logger.log(LogLevel.Information, `Connection reconnecting because of error '${error}'.`);\r\n        } else {\r\n            this.logger.log(LogLevel.Information, \"Connection reconnecting.\");\r\n        }\r\n\r\n        if (this.onreconnecting) {\r\n            try {\r\n                this.reconnectingCallbacks.forEach((c) => c.apply(this, [error]));\r\n            } catch (e) {\r\n                this.logger.log(LogLevel.Error, `An onreconnecting callback called with error '${error}' threw error '${e}'.`);\r\n            }\r\n\r\n            // Exit early if an onreconnecting callback called connection.stop().\r\n            if (this.connectionState !== HubConnectionState.Reconnecting) {\r\n                this.logger.log(LogLevel.Debug, \"Connection left the reconnecting state in onreconnecting callback. Done reconnecting.\");\r\n                return;\r\n            }\r\n        }\r\n\r\n        while (nextRetryDelay !== null) {\r\n            this.logger.log(LogLevel.Information, `Reconnect attempt number ${previousReconnectAttempts} will start in ${nextRetryDelay} ms.`);\r\n\r\n            await new Promise((resolve) => {\r\n                this.reconnectDelayHandle = setTimeout(resolve, nextRetryDelay!);\r\n            });\r\n            this.reconnectDelayHandle = undefined;\r\n\r\n            if (this.connectionState !== HubConnectionState.Reconnecting) {\r\n                this.logger.log(LogLevel.Debug, \"Connection left the reconnecting state during reconnect delay. Done reconnecting.\");\r\n                return;\r\n            }\r\n\r\n            try {\r\n                await this.startInternal();\r\n\r\n                this.connectionState = HubConnectionState.Connected;\r\n                this.logger.log(LogLevel.Information, \"HubConnection reconnected successfully.\");\r\n\r\n                if (this.onreconnected) {\r\n                    try {\r\n                        this.reconnectedCallbacks.forEach((c) => c.apply(this, [this.connection.connectionId]));\r\n                    } catch (e) {\r\n                        this.logger.log(LogLevel.Error, `An onreconnected callback called with connectionId '${this.connection.connectionId}; threw error '${e}'.`);\r\n                    }\r\n                }\r\n\r\n                return;\r\n            } catch (e) {\r\n                this.logger.log(LogLevel.Information, `Reconnect attempt failed because of error '${e}'.`);\r\n\r\n                if (this.connectionState !== HubConnectionState.Reconnecting) {\r\n                    this.logger.log(LogLevel.Debug, `Connection moved to the '${this.connectionState}' from the reconnecting state during reconnect attempt. Done reconnecting.`);\r\n                    // The TypeScript compiler thinks that connectionState must be Connected here. The TypeScript compiler is wrong.\r\n                    if (this.connectionState as any === HubConnectionState.Disconnecting) {\r\n                        this.completeClose();\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                retryError = e instanceof Error ? e : new Error(e.toString());\r\n                nextRetryDelay = this.getNextRetryDelay(previousReconnectAttempts++, Date.now() - reconnectStartTime, retryError);\r\n            }\r\n        }\r\n\r\n        this.logger.log(LogLevel.Information, `Reconnect retries have been exhausted after ${Date.now() - reconnectStartTime} ms and ${previousReconnectAttempts} failed attempts. Connection disconnecting.`);\r\n\r\n        this.completeClose();\r\n    }\r\n\r\n    private getNextRetryDelay(previousRetryCount: number, elapsedMilliseconds: number, retryReason: Error) {\r\n        try {\r\n            return this.reconnectPolicy!.nextRetryDelayInMilliseconds({\r\n                elapsedMilliseconds,\r\n                previousRetryCount,\r\n                retryReason,\r\n            });\r\n        } catch (e) {\r\n            this.logger.log(LogLevel.Error, `IRetryPolicy.nextRetryDelayInMilliseconds(${previousRetryCount}, ${elapsedMilliseconds}) threw error '${e}'.`);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    private cancelCallbacksWithError(error: Error) {\r\n        const callbacks = this.callbacks;\r\n        this.callbacks = {};\r\n\r\n        Object.keys(callbacks)\r\n            .forEach((key) => {\r\n                const callback = callbacks[key];\r\n                callback(null, error);\r\n            });\r\n    }\r\n\r\n    private cleanupPingTimer(): void {\r\n        if (this.pingServerHandle) {\r\n            clearTimeout(this.pingServerHandle);\r\n            this.pingServerHandle = undefined;\r\n        }\r\n    }\r\n\r\n    private cleanupTimeout(): void {\r\n        if (this.timeoutHandle) {\r\n            clearTimeout(this.timeoutHandle);\r\n        }\r\n    }\r\n\r\n    private createInvocation(methodName: string, args: any[], nonblocking: boolean, streamIds: string[]): InvocationMessage {\r\n        if (nonblocking) {\r\n            if (streamIds.length !== 0) {\r\n                return {\r\n                    arguments: args,\r\n                    streamIds,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            } else {\r\n                return {\r\n                    arguments: args,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n        } else {\r\n            const invocationId = this.invocationId;\r\n            this.invocationId++;\r\n\r\n            if (streamIds.length !== 0) {\r\n                return {\r\n                    arguments: args,\r\n                    invocationId: invocationId.toString(),\r\n                    streamIds,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            } else {\r\n                return {\r\n                    arguments: args,\r\n                    invocationId: invocationId.toString(),\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n    private launchStreams(streams: Array<IStreamResult<any>>, promiseQueue: Promise<void>): void {\r\n        if (streams.length === 0) {\r\n            return;\r\n        }\r\n\r\n        // Synchronize stream data so they arrive in-order on the server\r\n        if (!promiseQueue) {\r\n            promiseQueue = Promise.resolve();\r\n        }\r\n\r\n        // We want to iterate over the keys, since the keys are the stream ids\r\n        // tslint:disable-next-line:forin\r\n        for (const streamId in streams) {\r\n            streams[streamId].subscribe({\r\n                complete: () => {\r\n                    promiseQueue = promiseQueue.then(() => this.sendWithProtocol(this.createCompletionMessage(streamId)));\r\n                },\r\n                error: (err) => {\r\n                    let message: string;\r\n                    if (err instanceof Error) {\r\n                        message = err.message;\r\n                    } else if (err && err.toString) {\r\n                        message = err.toString();\r\n                    } else {\r\n                        message = \"Unknown error\";\r\n                    }\r\n\r\n                    promiseQueue = promiseQueue.then(() => this.sendWithProtocol(this.createCompletionMessage(streamId, message)));\r\n                },\r\n                next: (item) => {\r\n                    promiseQueue = promiseQueue.then(() => this.sendWithProtocol(this.createStreamItemMessage(streamId, item)));\r\n                },\r\n            });\r\n        }\r\n    }\r\n\r\n    private replaceStreamingParams(args: any[]): [Array<IStreamResult<any>>, string[]] {\r\n        const streams: Array<IStreamResult<any>> = [];\r\n        const streamIds: string[] = [];\r\n        for (let i = 0; i < args.length; i++) {\r\n            const argument = args[i];\r\n            if (this.isObservable(argument)) {\r\n                const streamId = this.invocationId;\r\n                this.invocationId++;\r\n                // Store the stream for later use\r\n                streams[streamId] = argument;\r\n                streamIds.push(streamId.toString());\r\n\r\n                // remove stream from args\r\n                args.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        return [streams, streamIds];\r\n    }\r\n\r\n    private isObservable(arg: any): arg is IStreamResult<any> {\r\n        // This allows other stream implementations to just work (like rxjs)\r\n        return arg && arg.subscribe && typeof arg.subscribe === \"function\";\r\n    }\r\n\r\n    private createStreamInvocation(methodName: string, args: any[], streamIds: string[]): StreamInvocationMessage {\r\n        const invocationId = this.invocationId;\r\n        this.invocationId++;\r\n\r\n        if (streamIds.length !== 0) {\r\n            return {\r\n                arguments: args,\r\n                invocationId: invocationId.toString(),\r\n                streamIds,\r\n                target: methodName,\r\n                type: MessageType.StreamInvocation,\r\n            };\r\n        } else {\r\n            return {\r\n                arguments: args,\r\n                invocationId: invocationId.toString(),\r\n                target: methodName,\r\n                type: MessageType.StreamInvocation,\r\n            };\r\n        }\r\n    }\r\n\r\n    private createCancelInvocation(id: string): CancelInvocationMessage {\r\n        return {\r\n            invocationId: id,\r\n            type: MessageType.CancelInvocation,\r\n        };\r\n    }\r\n\r\n    private createStreamItemMessage(id: string, item: any): StreamItemMessage {\r\n        return {\r\n            invocationId: id,\r\n            item,\r\n            type: MessageType.StreamItem,\r\n        };\r\n    }\r\n\r\n    private createCompletionMessage(id: string, error?: any, result?: any): CompletionMessage {\r\n        if (error) {\r\n            return {\r\n                error,\r\n                invocationId: id,\r\n                type: MessageType.Completion,\r\n            };\r\n        }\r\n\r\n        return {\r\n            invocationId: id,\r\n            result,\r\n            type: MessageType.Completion,\r\n        };\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { IRetryPolicy, RetryContext } from \"./IRetryPolicy\";\r\n\r\n// 0, 2, 10, 30 second delays before reconnect attempts.\r\nconst DEFAULT_RETRY_DELAYS_IN_MILLISECONDS = [0, 2000, 10000, 30000, null];\r\n\r\n/** @private */\r\nexport class DefaultReconnectPolicy implements IRetryPolicy {\r\n    private readonly retryDelays: Array<number | null>;\r\n\r\n    constructor(retryDelays?: number[]) {\r\n        this.retryDelays = retryDelays !== undefined ? [...retryDelays, null] : DEFAULT_RETRY_DELAYS_IN_MILLISECONDS;\r\n    }\r\n\r\n    public nextRetryDelayInMilliseconds(retryContext: RetryContext): number | null {\r\n        return this.retryDelays[retryContext.previousRetryCount];\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// This will be treated as a bit flag in the future, so we keep it using power-of-two values.\r\n/** Specifies a specific HTTP transport type. */\r\nexport enum HttpTransportType {\r\n    /** Specifies no transport preference. */\r\n    None = 0,\r\n    /** Specifies the WebSockets transport. */\r\n    WebSockets = 1,\r\n    /** Specifies the Server-Sent Events transport. */\r\n    ServerSentEvents = 2,\r\n    /** Specifies the Long Polling transport. */\r\n    LongPolling = 4,\r\n}\r\n\r\n/** Specifies the transfer format for a connection. */\r\nexport enum TransferFormat {\r\n    /** Specifies that only text data will be transmitted over the connection. */\r\n    Text = 1,\r\n    /** Specifies that binary data will be transmitted over the connection. */\r\n    Binary = 2,\r\n}\r\n\r\n/** An abstraction over the behavior of transports. This is designed to support the framework and not intended for use by applications. */\r\nexport interface ITransport {\r\n    connect(url: string, transferFormat: TransferFormat): Promise<void>;\r\n    send(data: any): Promise<void>;\r\n    stop(): Promise<void>;\r\n    onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    onclose: ((error?: Error) => void) | null;\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// Rough polyfill of https://developer.mozilla.org/en-US/docs/Web/API/AbortController\r\n// We don't actually ever use the API being polyfilled, we always use the polyfill because\r\n// it's a very new API right now.\r\n\r\n// Not exported from index.\r\n/** @private */\r\nexport class AbortController implements AbortSignal {\r\n    private isAborted: boolean = false;\r\n    public onabort: (() => void) | null = null;\r\n\r\n    public abort() {\r\n        if (!this.isAborted) {\r\n            this.isAborted = true;\r\n            if (this.onabort) {\r\n                this.onabort();\r\n            }\r\n        }\r\n    }\r\n\r\n    get signal(): AbortSignal {\r\n        return this;\r\n    }\r\n\r\n    get aborted(): boolean {\r\n        return this.isAborted;\r\n    }\r\n}\r\n\r\n/** Represents a signal that can be monitored to determine if a request has been aborted. */\r\nexport interface AbortSignal {\r\n    /** Indicates if the request has been aborted. */\r\n    aborted: boolean;\r\n    /** Set this to a handler that will be invoked when the request is aborted. */\r\n    onabort: (() => void) | null;\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { AbortController } from \"./AbortController\";\r\nimport { HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpRequest } from \"./HttpClient\";\r\nimport { MessageHeaders } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { ITransport, TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, sendMessage } from \"./Utils\";\r\n\r\n// Not exported from 'index', this type is internal.\r\n/** @private */\r\nexport class LongPollingTransport implements ITransport {\r\n    private readonly httpClient: HttpClient;\r\n    private readonly accessTokenFactory: (() => string | Promise<string>) | undefined;\r\n    private readonly logger: ILogger;\r\n    private readonly logMessageContent: boolean;\r\n    private readonly withCredentials: boolean;\r\n    private readonly pollAbort: AbortController;\r\n    private readonly headers: MessageHeaders;\r\n\r\n    private url?: string;\r\n    private running: boolean;\r\n    private receiving?: Promise<void>;\r\n    private closeError?: Error;\r\n\r\n    public onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    public onclose: ((error?: Error) => void) | null;\r\n\r\n    // This is an internal type, not exported from 'index' so this is really just internal.\r\n    public get pollAborted() {\r\n        return this.pollAbort.aborted;\r\n    }\r\n\r\n    constructor(httpClient: HttpClient, accessTokenFactory: (() => string | Promise<string>) | undefined, logger: ILogger, logMessageContent: boolean, withCredentials: boolean, headers: MessageHeaders) {\r\n        this.httpClient = httpClient;\r\n        this.accessTokenFactory = accessTokenFactory;\r\n        this.logger = logger;\r\n        this.pollAbort = new AbortController();\r\n        this.logMessageContent = logMessageContent;\r\n        this.withCredentials = withCredentials;\r\n        this.headers = headers;\r\n\r\n        this.running = false;\r\n\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n\r\n    public async connect(url: string, transferFormat: TransferFormat): Promise<void> {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n\r\n        this.url = url;\r\n\r\n        this.logger.log(LogLevel.Trace, \"(LongPolling transport) Connecting.\");\r\n\r\n        // Allow binary format on Node and Browsers that support binary content (indicated by the presence of responseType property)\r\n        if (transferFormat === TransferFormat.Binary &&\r\n            (typeof XMLHttpRequest !== \"undefined\" && typeof new XMLHttpRequest().responseType !== \"string\")) {\r\n            throw new Error(\"Binary protocols over XmlHttpRequest not implementing advanced features are not supported.\");\r\n        }\r\n\r\n        const [name, value] = getUserAgentHeader();\r\n        const headers = { [name]: value, ...this.headers };\r\n\r\n        const pollOptions: HttpRequest = {\r\n            abortSignal: this.pollAbort.signal,\r\n            headers,\r\n            timeout: 100000,\r\n            withCredentials: this.withCredentials,\r\n        };\r\n\r\n        if (transferFormat === TransferFormat.Binary) {\r\n            pollOptions.responseType = \"arraybuffer\";\r\n        }\r\n\r\n        const token = await this.getAccessToken();\r\n        this.updateHeaderToken(pollOptions, token);\r\n\r\n        // Make initial long polling request\r\n        // Server uses first long polling request to finish initializing connection and it returns without data\r\n        const pollUrl = `${url}&_=${Date.now()}`;\r\n        this.logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);\r\n        const response = await this.httpClient.get(pollUrl, pollOptions);\r\n        if (response.statusCode !== 200) {\r\n            this.logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);\r\n\r\n            // Mark running as false so that the poll immediately ends and runs the close logic\r\n            this.closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n            this.running = false;\r\n        } else {\r\n            this.running = true;\r\n        }\r\n\r\n        this.receiving = this.poll(this.url, pollOptions);\r\n    }\r\n\r\n    private async getAccessToken(): Promise<string | null> {\r\n        if (this.accessTokenFactory) {\r\n            return await this.accessTokenFactory();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    private updateHeaderToken(request: HttpRequest, token: string | null) {\r\n        if (!request.headers) {\r\n            request.headers = {};\r\n        }\r\n        if (token) {\r\n            // tslint:disable-next-line:no-string-literal\r\n            request.headers[\"Authorization\"] = `Bearer ${token}`;\r\n            return;\r\n        }\r\n        // tslint:disable-next-line:no-string-literal\r\n        if (request.headers[\"Authorization\"]) {\r\n            // tslint:disable-next-line:no-string-literal\r\n            delete request.headers[\"Authorization\"];\r\n        }\r\n    }\r\n\r\n    private async poll(url: string, pollOptions: HttpRequest): Promise<void> {\r\n        try {\r\n            while (this.running) {\r\n                // We have to get the access token on each poll, in case it changes\r\n                const token = await this.getAccessToken();\r\n                this.updateHeaderToken(pollOptions, token);\r\n\r\n                try {\r\n                    const pollUrl = `${url}&_=${Date.now()}`;\r\n                    this.logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);\r\n                    const response = await this.httpClient.get(pollUrl, pollOptions);\r\n\r\n                    if (response.statusCode === 204) {\r\n                        this.logger.log(LogLevel.Information, \"(LongPolling transport) Poll terminated by server.\");\r\n\r\n                        this.running = false;\r\n                    } else if (response.statusCode !== 200) {\r\n                        this.logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);\r\n\r\n                        // Unexpected status code\r\n                        this.closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n                        this.running = false;\r\n                    } else {\r\n                        // Process the response\r\n                        if (response.content) {\r\n                            this.logger.log(LogLevel.Trace, `(LongPolling transport) data received. ${getDataDetail(response.content, this.logMessageContent)}.`);\r\n                            if (this.onreceive) {\r\n                                this.onreceive(response.content);\r\n                            }\r\n                        } else {\r\n                            // This is another way timeout manifest.\r\n                            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    if (!this.running) {\r\n                        // Log but disregard errors that occur after stopping\r\n                        this.logger.log(LogLevel.Trace, `(LongPolling transport) Poll errored after shutdown: ${e.message}`);\r\n                    } else {\r\n                        if (e instanceof TimeoutError) {\r\n                            // Ignore timeouts and reissue the poll.\r\n                            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                        } else {\r\n                            // Close the connection with the error as the result.\r\n                            this.closeError = e;\r\n                            this.running = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } finally {\r\n            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Polling complete.\");\r\n\r\n            // We will reach here with pollAborted==false when the server returned a response causing the transport to stop.\r\n            // If pollAborted==true then client initiated the stop and the stop method will raise the close event after DELETE is sent.\r\n            if (!this.pollAborted) {\r\n                this.raiseOnClose();\r\n            }\r\n        }\r\n    }\r\n\r\n    public async send(data: any): Promise<void> {\r\n        if (!this.running) {\r\n            return Promise.reject(new Error(\"Cannot send until the transport is connected\"));\r\n        }\r\n        return sendMessage(this.logger, \"LongPolling\", this.httpClient, this.url!, this.accessTokenFactory, data, this.logMessageContent, this.withCredentials, this.headers);\r\n    }\r\n\r\n    public async stop(): Promise<void> {\r\n        this.logger.log(LogLevel.Trace, \"(LongPolling transport) Stopping polling.\");\r\n\r\n        // Tell receiving loop to stop, abort any current request, and then wait for it to finish\r\n        this.running = false;\r\n        this.pollAbort.abort();\r\n\r\n        try {\r\n            await this.receiving;\r\n\r\n            // Send DELETE to clean up long polling on the server\r\n            this.logger.log(LogLevel.Trace, `(LongPolling transport) sending DELETE request to ${this.url}.`);\r\n\r\n            const headers = {};\r\n            const [name, value] = getUserAgentHeader();\r\n            headers[name] = value;\r\n\r\n            const deleteOptions: HttpRequest = {\r\n                headers: { ...headers, ...this.headers },\r\n                withCredentials: this.withCredentials,\r\n            };\r\n            const token = await this.getAccessToken();\r\n            this.updateHeaderToken(deleteOptions, token);\r\n            await this.httpClient.delete(this.url!, deleteOptions);\r\n\r\n            this.logger.log(LogLevel.Trace, \"(LongPolling transport) DELETE request sent.\");\r\n        } finally {\r\n            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Stop finished.\");\r\n\r\n            // Raise close event here instead of in polling\r\n            // It needs to happen after the DELETE request is sent\r\n            this.raiseOnClose();\r\n        }\r\n    }\r\n\r\n    private raiseOnClose() {\r\n        if (this.onclose) {\r\n            let logMessage = \"(LongPolling transport) Firing onclose event.\";\r\n            if (this.closeError) {\r\n                logMessage += \" Error: \" + this.closeError;\r\n            }\r\n            this.logger.log(LogLevel.Trace, logMessage);\r\n            this.onclose(this.closeError);\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { MessageHeaders } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { ITransport, TransferFormat } from \"./ITransport\";\r\nimport { EventSourceConstructor } from \"./Polyfills\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, Platform, sendMessage } from \"./Utils\";\r\n\r\n/** @private */\r\nexport class ServerSentEventsTransport implements ITransport {\r\n    private readonly httpClient: HttpClient;\r\n    private readonly accessTokenFactory: (() => string | Promise<string>) | undefined;\r\n    private readonly logger: ILogger;\r\n    private readonly logMessageContent: boolean;\r\n    private readonly withCredentials: boolean;\r\n    private readonly eventSourceConstructor: EventSourceConstructor;\r\n    private eventSource?: EventSource;\r\n    private url?: string;\r\n    private headers: MessageHeaders;\r\n\r\n    public onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    public onclose: ((error?: Error) => void) | null;\r\n\r\n    constructor(httpClient: HttpClient, accessTokenFactory: (() => string | Promise<string>) | undefined, logger: ILogger,\r\n                logMessageContent: boolean, eventSourceConstructor: EventSourceConstructor, withCredentials: boolean, headers: MessageHeaders) {\r\n        this.httpClient = httpClient;\r\n        this.accessTokenFactory = accessTokenFactory;\r\n        this.logger = logger;\r\n        this.logMessageContent = logMessageContent;\r\n        this.withCredentials = withCredentials;\r\n        this.eventSourceConstructor = eventSourceConstructor;\r\n        this.headers = headers;\r\n\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n\r\n    public async connect(url: string, transferFormat: TransferFormat): Promise<void> {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n\r\n        this.logger.log(LogLevel.Trace, \"(SSE transport) Connecting.\");\r\n\r\n        // set url before accessTokenFactory because this.url is only for send and we set the auth header instead of the query string for send\r\n        this.url = url;\r\n\r\n        if (this.accessTokenFactory) {\r\n            const token = await this.accessTokenFactory();\r\n            if (token) {\r\n                url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + `access_token=${encodeURIComponent(token)}`;\r\n            }\r\n        }\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            let opened = false;\r\n            if (transferFormat !== TransferFormat.Text) {\r\n                reject(new Error(\"The Server-Sent Events transport only supports the 'Text' transfer format\"));\r\n                return;\r\n            }\r\n\r\n            let eventSource: EventSource;\r\n            if (Platform.isBrowser || Platform.isWebWorker) {\r\n                eventSource = new this.eventSourceConstructor(url, { withCredentials: this.withCredentials });\r\n            } else {\r\n                // Non-browser passes cookies via the dictionary\r\n                const cookies = this.httpClient.getCookieString(url);\r\n                const headers: MessageHeaders = {};\r\n                headers.Cookie = cookies;\r\n                const [name, value] = getUserAgentHeader();\r\n                headers[name] = value;\r\n\r\n                eventSource = new this.eventSourceConstructor(url, { withCredentials: this.withCredentials, headers: { ...headers, ...this.headers} } as EventSourceInit);\r\n            }\r\n\r\n            try {\r\n                eventSource.onmessage = (e: MessageEvent) => {\r\n                    if (this.onreceive) {\r\n                        try {\r\n                            this.logger.log(LogLevel.Trace, `(SSE transport) data received. ${getDataDetail(e.data, this.logMessageContent)}.`);\r\n                            this.onreceive(e.data);\r\n                        } catch (error) {\r\n                            this.close(error);\r\n                            return;\r\n                        }\r\n                    }\r\n                };\r\n\r\n                eventSource.onerror = (e: MessageEvent) => {\r\n                    const error = new Error(e.data || \"Error occurred\");\r\n                    if (opened) {\r\n                        this.close(error);\r\n                    } else {\r\n                        reject(error);\r\n                    }\r\n                };\r\n\r\n                eventSource.onopen = () => {\r\n                    this.logger.log(LogLevel.Information, `SSE connected to ${this.url}`);\r\n                    this.eventSource = eventSource;\r\n                    opened = true;\r\n                    resolve();\r\n                };\r\n            } catch (e) {\r\n                reject(e);\r\n                return;\r\n            }\r\n        });\r\n    }\r\n\r\n    public async send(data: any): Promise<void> {\r\n        if (!this.eventSource) {\r\n            return Promise.reject(new Error(\"Cannot send until the transport is connected\"));\r\n        }\r\n        return sendMessage(this.logger, \"SSE\", this.httpClient, this.url!, this.accessTokenFactory, data, this.logMessageContent, this.withCredentials, this.headers);\r\n    }\r\n\r\n    public stop(): Promise<void> {\r\n        this.close();\r\n        return Promise.resolve();\r\n    }\r\n\r\n    private close(e?: Error) {\r\n        if (this.eventSource) {\r\n            this.eventSource.close();\r\n            this.eventSource = undefined;\r\n\r\n            if (this.onclose) {\r\n                this.onclose(e);\r\n            }\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { MessageHeaders } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { ITransport, TransferFormat } from \"./ITransport\";\r\nimport { WebSocketConstructor } from \"./Polyfills\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, Platform } from \"./Utils\";\r\n\r\n/** @private */\r\nexport class WebSocketTransport implements ITransport {\r\n    private readonly logger: ILogger;\r\n    private readonly accessTokenFactory: (() => string | Promise<string>) | undefined;\r\n    private readonly logMessageContent: boolean;\r\n    private readonly webSocketConstructor: WebSocketConstructor;\r\n    private readonly httpClient: HttpClient;\r\n    private webSocket?: WebSocket;\r\n    private headers: MessageHeaders;\r\n\r\n    public onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    public onclose: ((error?: Error) => void) | null;\r\n\r\n    constructor(httpClient: HttpClient, accessTokenFactory: (() => string | Promise<string>) | undefined, logger: ILogger,\r\n                logMessageContent: boolean, webSocketConstructor: WebSocketConstructor, headers: MessageHeaders) {\r\n        this.logger = logger;\r\n        this.accessTokenFactory = accessTokenFactory;\r\n        this.logMessageContent = logMessageContent;\r\n        this.webSocketConstructor = webSocketConstructor;\r\n        this.httpClient = httpClient;\r\n\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n        this.headers = headers;\r\n    }\r\n\r\n    public async connect(url: string, transferFormat: TransferFormat): Promise<void> {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this.logger.log(LogLevel.Trace, \"(WebSockets transport) Connecting.\");\r\n\r\n        if (this.accessTokenFactory) {\r\n            const token = await this.accessTokenFactory();\r\n            if (token) {\r\n                url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + `access_token=${encodeURIComponent(token)}`;\r\n            }\r\n        }\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            url = url.replace(/^http/, \"ws\");\r\n            let webSocket: WebSocket | undefined;\r\n            const cookies = this.httpClient.getCookieString(url);\r\n            let opened = false;\r\n\r\n            if (Platform.isNode) {\r\n                const headers = {};\r\n                const [name, value] = getUserAgentHeader();\r\n                headers[name] = value;\r\n\r\n                if (cookies) {\r\n                    headers[`Cookie`] = `${cookies}`;\r\n                }\r\n\r\n                // Only pass headers when in non-browser environments\r\n                webSocket = new this.webSocketConstructor(url, undefined, {\r\n                    headers: { ...headers, ...this.headers },\r\n                });\r\n            }\r\n\r\n            if (!webSocket) {\r\n                // Chrome is not happy with passing 'undefined' as protocol\r\n                webSocket = new this.webSocketConstructor(url);\r\n            }\r\n\r\n            if (transferFormat === TransferFormat.Binary) {\r\n                webSocket.binaryType = \"arraybuffer\";\r\n            }\r\n\r\n            // tslint:disable-next-line:variable-name\r\n            webSocket.onopen = (_event: Event) => {\r\n                this.logger.log(LogLevel.Information, `WebSocket connected to ${url}.`);\r\n                this.webSocket = webSocket;\r\n                opened = true;\r\n                resolve();\r\n            };\r\n\r\n            webSocket.onerror = (event: Event) => {\r\n                let error: any = null;\r\n                // ErrorEvent is a browser only type we need to check if the type exists before using it\r\n                if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\r\n                    error = event.error;\r\n                } else {\r\n                    error = new Error(\"There was an error with the transport.\");\r\n                }\r\n\r\n                reject(error);\r\n            };\r\n\r\n            webSocket.onmessage = (message: MessageEvent) => {\r\n                this.logger.log(LogLevel.Trace, `(WebSockets transport) data received. ${getDataDetail(message.data, this.logMessageContent)}.`);\r\n                if (this.onreceive) {\r\n                    try {\r\n                        this.onreceive(message.data);\r\n                    } catch (error) {\r\n                        this.close(error);\r\n                        return;\r\n                    }\r\n                }\r\n            };\r\n\r\n            webSocket.onclose = (event: CloseEvent) => {\r\n                // Don't call close handler if connection was never established\r\n                // We'll reject the connect call instead\r\n                if (opened) {\r\n                    this.close(event);\r\n                } else {\r\n                    let error: any = null;\r\n                    // ErrorEvent is a browser only type we need to check if the type exists before using it\r\n                    if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\r\n                        error = event.error;\r\n                    } else {\r\n                        error = new Error(\"There was an error with the transport.\");\r\n                    }\r\n\r\n                    reject(error);\r\n                }\r\n            };\r\n        });\r\n    }\r\n\r\n    public send(data: any): Promise<void> {\r\n        if (this.webSocket && this.webSocket.readyState === this.webSocketConstructor.OPEN) {\r\n            this.logger.log(LogLevel.Trace, `(WebSockets transport) sending data. ${getDataDetail(data, this.logMessageContent)}.`);\r\n            this.webSocket.send(data);\r\n            return Promise.resolve();\r\n        }\r\n\r\n        return Promise.reject(\"WebSocket is not in the OPEN state\");\r\n    }\r\n\r\n    public stop(): Promise<void> {\r\n        if (this.webSocket) {\r\n            // Manually invoke onclose callback inline so we know the HttpConnection was closed properly before returning\r\n            // This also solves an issue where websocket.onclose could take 18+ seconds to trigger during network disconnects\r\n            this.close(undefined);\r\n        }\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    private close(event?: CloseEvent | Error): void {\r\n        // webSocket will be null if the transport did not start successfully\r\n        if (this.webSocket) {\r\n            // Clear websocket handlers because we are considering the socket closed now\r\n            this.webSocket.onclose = () => {};\r\n            this.webSocket.onmessage = () => {};\r\n            this.webSocket.onerror = () => {};\r\n            this.webSocket.close();\r\n            this.webSocket = undefined;\r\n        }\r\n\r\n        this.logger.log(LogLevel.Trace, \"(WebSockets transport) socket closed.\");\r\n        if (this.onclose) {\r\n            if (this.isCloseEvent(event) && (event.wasClean === false || event.code !== 1000)) {\r\n                this.onclose(new Error(`WebSocket closed with status code: ${event.code} (${event.reason}).`));\r\n            } else if (event instanceof Error) {\r\n                this.onclose(event);\r\n            } else {\r\n                this.onclose();\r\n            }\r\n        }\r\n    }\r\n\r\n    private isCloseEvent(event?: any): event is CloseEvent {\r\n        return event && typeof event.wasClean === \"boolean\" && typeof event.code === \"number\";\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { DefaultHttpClient } from \"./DefaultHttpClient\";\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { IConnection } from \"./IConnection\";\r\nimport { IHttpConnectionOptions } from \"./IHttpConnectionOptions\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { HttpTransportType, ITransport, TransferFormat } from \"./ITransport\";\r\nimport { LongPollingTransport } from \"./LongPollingTransport\";\r\nimport { ServerSentEventsTransport } from \"./ServerSentEventsTransport\";\r\nimport { Arg, createLogger, getUserAgentHeader, Platform } from \"./Utils\";\r\nimport { WebSocketTransport } from \"./WebSocketTransport\";\r\n\r\n/** @private */\r\nconst enum ConnectionState {\r\n    Connecting = \"Connecting\",\r\n    Connected = \"Connected\",\r\n    Disconnected = \"Disconnected\",\r\n    Disconnecting = \"Disconnecting\",\r\n}\r\n\r\n/** @private */\r\nexport interface INegotiateResponse {\r\n    connectionId?: string;\r\n    connectionToken?: string;\r\n    negotiateVersion?: number;\r\n    availableTransports?: IAvailableTransport[];\r\n    url?: string;\r\n    accessToken?: string;\r\n    error?: string;\r\n}\r\n\r\n/** @private */\r\nexport interface IAvailableTransport {\r\n    transport: keyof typeof HttpTransportType;\r\n    transferFormats: Array<keyof typeof TransferFormat>;\r\n}\r\n\r\nconst MAX_REDIRECTS = 100;\r\n\r\n/** @private */\r\nexport class HttpConnection implements IConnection {\r\n    private connectionState: ConnectionState;\r\n    // connectionStarted is tracked independently from connectionState, so we can check if the\r\n    // connection ever did successfully transition from connecting to connected before disconnecting.\r\n    private connectionStarted: boolean;\r\n    private readonly httpClient: HttpClient;\r\n    private readonly logger: ILogger;\r\n    private readonly options: IHttpConnectionOptions;\r\n    private transport?: ITransport;\r\n    private startInternalPromise?: Promise<void>;\r\n    private stopPromise?: Promise<void>;\r\n    private stopPromiseResolver: (value?: PromiseLike<void>) => void = () => {};\r\n    private stopError?: Error;\r\n    private accessTokenFactory?: () => string | Promise<string>;\r\n    private sendQueue?: TransportSendQueue;\r\n\r\n    public readonly features: any = {};\r\n    public baseUrl: string;\r\n    public connectionId?: string;\r\n    public onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    public onclose: ((e?: Error) => void) | null;\r\n\r\n    private readonly negotiateVersion: number = 1;\r\n\r\n    constructor(url: string, options: IHttpConnectionOptions = {}) {\r\n        Arg.isRequired(url, \"url\");\r\n\r\n        this.logger = createLogger(options.logger);\r\n        this.baseUrl = this.resolveUrl(url);\r\n\r\n        options = options || {};\r\n        options.logMessageContent = options.logMessageContent === undefined ? false : options.logMessageContent;\r\n        if (typeof options.withCredentials === \"boolean\" || options.withCredentials === undefined) {\r\n            options.withCredentials = options.withCredentials === undefined ? true : options.withCredentials;\r\n        } else {\r\n            throw new Error(\"withCredentials option was not a 'boolean' or 'undefined' value\");\r\n        }\r\n\r\n        let webSocketModule: any = null;\r\n        let eventSourceModule: any = null;\r\n\r\n        if (Platform.isNode && typeof require !== \"undefined\") {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n            webSocketModule = requireFunc(\"ws\");\r\n            eventSourceModule = requireFunc(\"eventsource\");\r\n        }\r\n\r\n        if (!Platform.isNode && typeof WebSocket !== \"undefined\" && !options.WebSocket) {\r\n            options.WebSocket = WebSocket;\r\n        } else if (Platform.isNode && !options.WebSocket) {\r\n            if (webSocketModule) {\r\n                options.WebSocket = webSocketModule;\r\n            }\r\n        }\r\n\r\n        if (!Platform.isNode && typeof EventSource !== \"undefined\" && !options.EventSource) {\r\n            options.EventSource = EventSource;\r\n        } else if (Platform.isNode && !options.EventSource) {\r\n            if (typeof eventSourceModule !== \"undefined\") {\r\n                options.EventSource = eventSourceModule;\r\n            }\r\n        }\r\n\r\n        this.httpClient = options.httpClient || new DefaultHttpClient(this.logger);\r\n        this.connectionState = ConnectionState.Disconnected;\r\n        this.connectionStarted = false;\r\n        this.options = options;\r\n\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n\r\n    public start(): Promise<void>;\r\n    public start(transferFormat: TransferFormat): Promise<void>;\r\n    public async start(transferFormat?: TransferFormat): Promise<void> {\r\n        transferFormat = transferFormat || TransferFormat.Binary;\r\n\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n\r\n        this.logger.log(LogLevel.Debug, `Starting connection with transfer format '${TransferFormat[transferFormat]}'.`);\r\n\r\n        if (this.connectionState !== ConnectionState.Disconnected) {\r\n            return Promise.reject(new Error(\"Cannot start an HttpConnection that is not in the 'Disconnected' state.\"));\r\n        }\r\n\r\n        this.connectionState = ConnectionState.Connecting;\r\n\r\n        this.startInternalPromise = this.startInternal(transferFormat);\r\n        await this.startInternalPromise;\r\n\r\n        // The TypeScript compiler thinks that connectionState must be Connecting here. The TypeScript compiler is wrong.\r\n        if (this.connectionState as any === ConnectionState.Disconnecting) {\r\n            // stop() was called and transitioned the client into the Disconnecting state.\r\n            const message = \"Failed to start the HttpConnection before stop() was called.\";\r\n            this.logger.log(LogLevel.Error, message);\r\n\r\n            // We cannot await stopPromise inside startInternal since stopInternal awaits the startInternalPromise.\r\n            await this.stopPromise;\r\n\r\n            return Promise.reject(new Error(message));\r\n        } else if (this.connectionState as any !== ConnectionState.Connected) {\r\n            // stop() was called and transitioned the client into the Disconnecting state.\r\n            const message = \"HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!\";\r\n            this.logger.log(LogLevel.Error, message);\r\n            return Promise.reject(new Error(message));\r\n        }\r\n\r\n        this.connectionStarted = true;\r\n    }\r\n\r\n    public send(data: string | ArrayBuffer): Promise<void> {\r\n        if (this.connectionState !== ConnectionState.Connected) {\r\n            return Promise.reject(new Error(\"Cannot send data if the connection is not in the 'Connected' State.\"));\r\n        }\r\n\r\n        if (!this.sendQueue) {\r\n            this.sendQueue = new TransportSendQueue(this.transport!);\r\n        }\r\n\r\n        // Transport will not be null if state is connected\r\n        return this.sendQueue.send(data);\r\n    }\r\n\r\n    public async stop(error?: Error): Promise<void> {\r\n        if (this.connectionState === ConnectionState.Disconnected) {\r\n            this.logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnected state.`);\r\n            return Promise.resolve();\r\n        }\r\n\r\n        if (this.connectionState === ConnectionState.Disconnecting) {\r\n            this.logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnecting state.`);\r\n            return this.stopPromise;\r\n        }\r\n\r\n        this.connectionState = ConnectionState.Disconnecting;\r\n\r\n        this.stopPromise = new Promise((resolve) => {\r\n            // Don't complete stop() until stopConnection() completes.\r\n            this.stopPromiseResolver = resolve;\r\n        });\r\n\r\n        // stopInternal should never throw so just observe it.\r\n        await this.stopInternal(error);\r\n        await this.stopPromise;\r\n    }\r\n\r\n    private async stopInternal(error?: Error): Promise<void> {\r\n        // Set error as soon as possible otherwise there is a race between\r\n        // the transport closing and providing an error and the error from a close message\r\n        // We would prefer the close message error.\r\n        this.stopError = error;\r\n\r\n        try {\r\n            await this.startInternalPromise;\r\n        } catch (e) {\r\n            // This exception is returned to the user as a rejected Promise from the start method.\r\n        }\r\n\r\n        // The transport's onclose will trigger stopConnection which will run our onclose event.\r\n        // The transport should always be set if currently connected. If it wasn't set, it's likely because\r\n        // stop was called during start() and start() failed.\r\n        if (this.transport) {\r\n            try {\r\n                await this.transport.stop();\r\n            } catch (e) {\r\n                this.logger.log(LogLevel.Error, `HttpConnection.transport.stop() threw error '${e}'.`);\r\n                this.stopConnection();\r\n            }\r\n\r\n            this.transport = undefined;\r\n        } else {\r\n            this.logger.log(LogLevel.Debug, \"HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.\");\r\n        }\r\n    }\r\n\r\n    private async startInternal(transferFormat: TransferFormat): Promise<void> {\r\n        // Store the original base url and the access token factory since they may change\r\n        // as part of negotiating\r\n        let url = this.baseUrl;\r\n        this.accessTokenFactory = this.options.accessTokenFactory;\r\n\r\n        try {\r\n            if (this.options.skipNegotiation) {\r\n                if (this.options.transport === HttpTransportType.WebSockets) {\r\n                    // No need to add a connection ID in this case\r\n                    this.transport = this.constructTransport(HttpTransportType.WebSockets);\r\n                    // We should just call connect directly in this case.\r\n                    // No fallback or negotiate in this case.\r\n                    await this.startTransport(url, transferFormat);\r\n                } else {\r\n                    throw new Error(\"Negotiation can only be skipped when using the WebSocket transport directly.\");\r\n                }\r\n            } else {\r\n                let negotiateResponse: INegotiateResponse | null = null;\r\n                let redirects = 0;\r\n\r\n                do {\r\n                    negotiateResponse = await this.getNegotiationResponse(url);\r\n                    // the user tries to stop the connection when it is being started\r\n                    if (this.connectionState === ConnectionState.Disconnecting || this.connectionState === ConnectionState.Disconnected) {\r\n                        throw new Error(\"The connection was stopped during negotiation.\");\r\n                    }\r\n\r\n                    if (negotiateResponse.error) {\r\n                        throw new Error(negotiateResponse.error);\r\n                    }\r\n\r\n                    if ((negotiateResponse as any).ProtocolVersion) {\r\n                        throw new Error(\"Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.\");\r\n                    }\r\n\r\n                    if (negotiateResponse.url) {\r\n                        url = negotiateResponse.url;\r\n                    }\r\n\r\n                    if (negotiateResponse.accessToken) {\r\n                        // Replace the current access token factory with one that uses\r\n                        // the returned access token\r\n                        const accessToken = negotiateResponse.accessToken;\r\n                        this.accessTokenFactory = () => accessToken;\r\n                    }\r\n\r\n                    redirects++;\r\n                }\r\n                while (negotiateResponse.url && redirects < MAX_REDIRECTS);\r\n\r\n                if (redirects === MAX_REDIRECTS && negotiateResponse.url) {\r\n                    throw new Error(\"Negotiate redirection limit exceeded.\");\r\n                }\r\n\r\n                await this.createTransport(url, this.options.transport, negotiateResponse, transferFormat);\r\n            }\r\n\r\n            if (this.transport instanceof LongPollingTransport) {\r\n                this.features.inherentKeepAlive = true;\r\n            }\r\n\r\n            if (this.connectionState === ConnectionState.Connecting) {\r\n                // Ensure the connection transitions to the connected state prior to completing this.startInternalPromise.\r\n                // start() will handle the case when stop was called and startInternal exits still in the disconnecting state.\r\n                this.logger.log(LogLevel.Debug, \"The HttpConnection connected successfully.\");\r\n                this.connectionState = ConnectionState.Connected;\r\n            }\r\n\r\n            // stop() is waiting on us via this.startInternalPromise so keep this.transport around so it can clean up.\r\n            // This is the only case startInternal can exit in neither the connected nor disconnected state because stopConnection()\r\n            // will transition to the disconnected state. start() will wait for the transition using the stopPromise.\r\n        } catch (e) {\r\n            this.logger.log(LogLevel.Error, \"Failed to start the connection: \" + e);\r\n            this.connectionState = ConnectionState.Disconnected;\r\n            this.transport = undefined;\r\n\r\n            // if start fails, any active calls to stop assume that start will complete the stop promise\r\n            this.stopPromiseResolver();\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n\r\n    private async getNegotiationResponse(url: string): Promise<INegotiateResponse> {\r\n        const headers = {};\r\n        if (this.accessTokenFactory) {\r\n            const token = await this.accessTokenFactory();\r\n            if (token) {\r\n                headers[`Authorization`] = `Bearer ${token}`;\r\n            }\r\n        }\r\n\r\n        const [name, value] = getUserAgentHeader();\r\n        headers[name] = value;\r\n\r\n        const negotiateUrl = this.resolveNegotiateUrl(url);\r\n        this.logger.log(LogLevel.Debug, `Sending negotiation request: ${negotiateUrl}.`);\r\n        try {\r\n            const response = await this.httpClient.post(negotiateUrl, {\r\n                content: \"\",\r\n                headers: { ...headers, ...this.options.headers },\r\n                withCredentials: this.options.withCredentials,\r\n            });\r\n\r\n            if (response.statusCode !== 200) {\r\n                return Promise.reject(new Error(`Unexpected status code returned from negotiate '${response.statusCode}'`));\r\n            }\r\n\r\n            const negotiateResponse = JSON.parse(response.content as string) as INegotiateResponse;\r\n            if (!negotiateResponse.negotiateVersion || negotiateResponse.negotiateVersion < 1) {\r\n                // Negotiate version 0 doesn't use connectionToken\r\n                // So we set it equal to connectionId so all our logic can use connectionToken without being aware of the negotiate version\r\n                negotiateResponse.connectionToken = negotiateResponse.connectionId;\r\n            }\r\n            return negotiateResponse;\r\n        } catch (e) {\r\n            this.logger.log(LogLevel.Error, \"Failed to complete negotiation with the server: \" + e);\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n\r\n    private createConnectUrl(url: string, connectionToken: string | null | undefined) {\r\n        if (!connectionToken) {\r\n            return url;\r\n        }\r\n\r\n        return url + (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + `id=${connectionToken}`;\r\n    }\r\n\r\n    private async createTransport(url: string, requestedTransport: HttpTransportType | ITransport | undefined, negotiateResponse: INegotiateResponse, requestedTransferFormat: TransferFormat): Promise<void> {\r\n        let connectUrl = this.createConnectUrl(url, negotiateResponse.connectionToken);\r\n        if (this.isITransport(requestedTransport)) {\r\n            this.logger.log(LogLevel.Debug, \"Connection was provided an instance of ITransport, using that directly.\");\r\n            this.transport = requestedTransport;\r\n            await this.startTransport(connectUrl, requestedTransferFormat);\r\n\r\n            this.connectionId = negotiateResponse.connectionId;\r\n            return;\r\n        }\r\n\r\n        const transportExceptions: any[] = [];\r\n        const transports = negotiateResponse.availableTransports || [];\r\n        let negotiate: INegotiateResponse | undefined = negotiateResponse;\r\n        for (const endpoint of transports) {\r\n            const transportOrError = this.resolveTransportOrError(endpoint, requestedTransport, requestedTransferFormat);\r\n            if (transportOrError instanceof Error) {\r\n                // Store the error and continue, we don't want to cause a re-negotiate in these cases\r\n                transportExceptions.push(`${endpoint.transport} failed: ${transportOrError}`);\r\n            } else if (this.isITransport(transportOrError)) {\r\n                this.transport = transportOrError;\r\n                if (!negotiate) {\r\n                    try {\r\n                        negotiate = await this.getNegotiationResponse(url);\r\n                    } catch (ex) {\r\n                        return Promise.reject(ex);\r\n                    }\r\n                    connectUrl = this.createConnectUrl(url, negotiate.connectionToken);\r\n                }\r\n                try {\r\n                    await this.startTransport(connectUrl, requestedTransferFormat);\r\n                    this.connectionId = negotiate.connectionId;\r\n                    return;\r\n                } catch (ex) {\r\n                    this.logger.log(LogLevel.Error, `Failed to start the transport '${endpoint.transport}': ${ex}`);\r\n                    negotiate = undefined;\r\n                    transportExceptions.push(`${endpoint.transport} failed: ${ex}`);\r\n\r\n                    if (this.connectionState !== ConnectionState.Connecting) {\r\n                        const message = \"Failed to select transport before stop() was called.\";\r\n                        this.logger.log(LogLevel.Debug, message);\r\n                        return Promise.reject(new Error(message));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (transportExceptions.length > 0) {\r\n            return Promise.reject(new Error(`Unable to connect to the server with any of the available transports. ${transportExceptions.join(\" \")}`));\r\n        }\r\n        return Promise.reject(new Error(\"None of the transports supported by the client are supported by the server.\"));\r\n    }\r\n\r\n    private constructTransport(transport: HttpTransportType): ITransport {\r\n        switch (transport) {\r\n            case HttpTransportType.WebSockets:\r\n                if (!this.options.WebSocket) {\r\n                    throw new Error(\"'WebSocket' is not supported in your environment.\");\r\n                }\r\n                return new WebSocketTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent || false, this.options.WebSocket, this.options.headers || {});\r\n            case HttpTransportType.ServerSentEvents:\r\n                if (!this.options.EventSource) {\r\n                    throw new Error(\"'EventSource' is not supported in your environment.\");\r\n                }\r\n                return new ServerSentEventsTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent || false, this.options.EventSource, this.options.withCredentials!, this.options.headers || {});\r\n            case HttpTransportType.LongPolling:\r\n                return new LongPollingTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent || false, this.options.withCredentials!, this.options.headers || {});\r\n            default:\r\n                throw new Error(`Unknown transport: ${transport}.`);\r\n        }\r\n    }\r\n\r\n    private startTransport(url: string, transferFormat: TransferFormat): Promise<void> {\r\n        this.transport!.onreceive = this.onreceive;\r\n        this.transport!.onclose = (e) => this.stopConnection(e);\r\n        return this.transport!.connect(url, transferFormat);\r\n    }\r\n\r\n    private resolveTransportOrError(endpoint: IAvailableTransport, requestedTransport: HttpTransportType | undefined, requestedTransferFormat: TransferFormat): ITransport | Error {\r\n        const transport = HttpTransportType[endpoint.transport];\r\n        if (transport === null || transport === undefined) {\r\n            this.logger.log(LogLevel.Debug, `Skipping transport '${endpoint.transport}' because it is not supported by this client.`);\r\n            return new Error(`Skipping transport '${endpoint.transport}' because it is not supported by this client.`);\r\n        } else {\r\n            if (transportMatches(requestedTransport, transport)) {\r\n                const transferFormats = endpoint.transferFormats.map((s) => TransferFormat[s]);\r\n                if (transferFormats.indexOf(requestedTransferFormat) >= 0) {\r\n                    if ((transport === HttpTransportType.WebSockets && !this.options.WebSocket) ||\r\n                        (transport === HttpTransportType.ServerSentEvents && !this.options.EventSource)) {\r\n                        this.logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it is not supported in your environment.'`);\r\n                        return new Error(`'${HttpTransportType[transport]}' is not supported in your environment.`);\r\n                    } else {\r\n                        this.logger.log(LogLevel.Debug, `Selecting transport '${HttpTransportType[transport]}'.`);\r\n                        try {\r\n                            return this.constructTransport(transport);\r\n                        } catch (ex) {\r\n                            return ex;\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it does not support the requested transfer format '${TransferFormat[requestedTransferFormat]}'.`);\r\n                    return new Error(`'${HttpTransportType[transport]}' does not support ${TransferFormat[requestedTransferFormat]}.`);\r\n                }\r\n            } else {\r\n                this.logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it was disabled by the client.`);\r\n                return new Error(`'${HttpTransportType[transport]}' is disabled by the client.`);\r\n            }\r\n        }\r\n    }\r\n\r\n    private isITransport(transport: any): transport is ITransport {\r\n        return transport && typeof (transport) === \"object\" && \"connect\" in transport;\r\n    }\r\n\r\n    private stopConnection(error?: Error): void {\r\n        this.logger.log(LogLevel.Debug, `HttpConnection.stopConnection(${error}) called while in state ${this.connectionState}.`);\r\n\r\n        this.transport = undefined;\r\n\r\n        // If we have a stopError, it takes precedence over the error from the transport\r\n        error = this.stopError || error;\r\n        this.stopError = undefined;\r\n\r\n        if (this.connectionState === ConnectionState.Disconnected) {\r\n            this.logger.log(LogLevel.Debug, `Call to HttpConnection.stopConnection(${error}) was ignored because the connection is already in the disconnected state.`);\r\n            return;\r\n        }\r\n\r\n        if (this.connectionState === ConnectionState.Connecting) {\r\n            this.logger.log(LogLevel.Warning, `Call to HttpConnection.stopConnection(${error}) was ignored because the connection is still in the connecting state.`);\r\n            throw new Error(`HttpConnection.stopConnection(${error}) was called while the connection is still in the connecting state.`);\r\n        }\r\n\r\n        if (this.connectionState === ConnectionState.Disconnecting) {\r\n            // A call to stop() induced this call to stopConnection and needs to be completed.\r\n            // Any stop() awaiters will be scheduled to continue after the onclose callback fires.\r\n            this.stopPromiseResolver();\r\n        }\r\n\r\n        if (error) {\r\n            this.logger.log(LogLevel.Error, `Connection disconnected with error '${error}'.`);\r\n        } else {\r\n            this.logger.log(LogLevel.Information, \"Connection disconnected.\");\r\n        }\r\n\r\n        if (this.sendQueue) {\r\n            this.sendQueue.stop().catch((e) => {\r\n                this.logger.log(LogLevel.Error, `TransportSendQueue.stop() threw error '${e}'.`);\r\n            });\r\n            this.sendQueue = undefined;\r\n        }\r\n\r\n        this.connectionId = undefined;\r\n        this.connectionState = ConnectionState.Disconnected;\r\n\r\n        if (this.connectionStarted) {\r\n            this.connectionStarted = false;\r\n            try {\r\n                if (this.onclose) {\r\n                    this.onclose(error);\r\n                }\r\n            } catch (e) {\r\n                this.logger.log(LogLevel.Error, `HttpConnection.onclose(${error}) threw error '${e}'.`);\r\n            }\r\n        }\r\n    }\r\n\r\n    private resolveUrl(url: string): string {\r\n        // startsWith is not supported in IE\r\n        if (url.lastIndexOf(\"https://\", 0) === 0 || url.lastIndexOf(\"http://\", 0) === 0) {\r\n            return url;\r\n        }\r\n\r\n        if (!Platform.isBrowser || !window.document) {\r\n            throw new Error(`Cannot resolve '${url}'.`);\r\n        }\r\n\r\n        // Setting the url to the href propery of an anchor tag handles normalization\r\n        // for us. There are 3 main cases.\r\n        // 1. Relative path normalization e.g \"b\" -> \"http://localhost:5000/a/b\"\r\n        // 2. Absolute path normalization e.g \"/a/b\" -> \"http://localhost:5000/a/b\"\r\n        // 3. Networkpath reference normalization e.g \"//localhost:5000/a/b\" -> \"http://localhost:5000/a/b\"\r\n        const aTag = window.document.createElement(\"a\");\r\n        aTag.href = url;\r\n\r\n        this.logger.log(LogLevel.Information, `Normalizing '${url}' to '${aTag.href}'.`);\r\n        return aTag.href;\r\n    }\r\n\r\n    private resolveNegotiateUrl(url: string): string {\r\n        const index = url.indexOf(\"?\");\r\n        let negotiateUrl = url.substring(0, index === -1 ? url.length : index);\r\n        if (negotiateUrl[negotiateUrl.length - 1] !== \"/\") {\r\n            negotiateUrl += \"/\";\r\n        }\r\n        negotiateUrl += \"negotiate\";\r\n        negotiateUrl += index === -1 ? \"\" : url.substring(index);\r\n\r\n        if (negotiateUrl.indexOf(\"negotiateVersion\") === -1) {\r\n            negotiateUrl += index === -1 ? \"?\" : \"&\";\r\n            negotiateUrl += \"negotiateVersion=\" + this.negotiateVersion;\r\n        }\r\n        return negotiateUrl;\r\n    }\r\n}\r\n\r\nfunction transportMatches(requestedTransport: HttpTransportType | undefined, actualTransport: HttpTransportType) {\r\n    return !requestedTransport || ((actualTransport & requestedTransport) !== 0);\r\n}\r\n\r\n/** @private */\r\nexport class TransportSendQueue {\r\n    private buffer: any[] = [];\r\n    private sendBufferedData: PromiseSource;\r\n    private executing: boolean = true;\r\n    private transportResult?: PromiseSource;\r\n    private sendLoopPromise: Promise<void>;\r\n\r\n    constructor(private readonly transport: ITransport) {\r\n        this.sendBufferedData = new PromiseSource();\r\n        this.transportResult = new PromiseSource();\r\n\r\n        this.sendLoopPromise = this.sendLoop();\r\n    }\r\n\r\n    public send(data: string | ArrayBuffer): Promise<void> {\r\n        this.bufferData(data);\r\n        if (!this.transportResult) {\r\n            this.transportResult = new PromiseSource();\r\n        }\r\n        return this.transportResult.promise;\r\n    }\r\n\r\n    public stop(): Promise<void> {\r\n        this.executing = false;\r\n        this.sendBufferedData.resolve();\r\n        return this.sendLoopPromise;\r\n    }\r\n\r\n    private bufferData(data: string | ArrayBuffer): void {\r\n        if (this.buffer.length && typeof(this.buffer[0]) !== typeof(data)) {\r\n            throw new Error(`Expected data to be of type ${typeof(this.buffer)} but was of type ${typeof(data)}`);\r\n        }\r\n\r\n        this.buffer.push(data);\r\n        this.sendBufferedData.resolve();\r\n    }\r\n\r\n    private async sendLoop(): Promise<void> {\r\n        while (true) {\r\n            await this.sendBufferedData.promise;\r\n\r\n            if (!this.executing) {\r\n                if (this.transportResult) {\r\n                    this.transportResult.reject(\"Connection stopped.\");\r\n                }\r\n\r\n                break;\r\n            }\r\n\r\n            this.sendBufferedData = new PromiseSource();\r\n\r\n            const transportResult = this.transportResult!;\r\n            this.transportResult = undefined;\r\n\r\n            const data = typeof(this.buffer[0]) === \"string\" ?\r\n                this.buffer.join(\"\") :\r\n                TransportSendQueue.concatBuffers(this.buffer);\r\n\r\n            this.buffer.length = 0;\r\n\r\n            try {\r\n                await this.transport.send(data);\r\n                transportResult.resolve();\r\n            } catch (error) {\r\n                transportResult.reject(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    private static concatBuffers(arrayBuffers: ArrayBuffer[]): ArrayBuffer {\r\n        const totalLength = arrayBuffers.map((b) => b.byteLength).reduce((a, b) => a + b);\r\n        const result = new Uint8Array(totalLength);\r\n        let offset = 0;\r\n        for (const item of arrayBuffers) {\r\n            result.set(new Uint8Array(item), offset);\r\n            offset += item.byteLength;\r\n        }\r\n\r\n        return result.buffer;\r\n    }\r\n}\r\n\r\nclass PromiseSource {\r\n    private resolver?: () => void;\r\n    private rejecter!: (reason?: any) => void;\r\n    public promise: Promise<void>;\r\n\r\n    constructor() {\r\n        this.promise = new Promise((resolve, reject) => [this.resolver, this.rejecter] = [resolve, reject]);\r\n    }\r\n\r\n    public resolve(): void {\r\n        this.resolver!();\r\n    }\r\n\r\n    public reject(reason?: any): void {\r\n        this.rejecter!(reason);\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { CompletionMessage, HubMessage, IHubProtocol, InvocationMessage, MessageType, StreamItemMessage } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\n\r\nconst JSON_HUB_PROTOCOL_NAME: string = \"json\";\r\n\r\n/** Implements the JSON Hub Protocol. */\r\nexport class JsonHubProtocol implements IHubProtocol {\r\n\r\n    /** @inheritDoc */\r\n    public readonly name: string = JSON_HUB_PROTOCOL_NAME;\r\n    /** @inheritDoc */\r\n    public readonly version: number = 1;\r\n\r\n    /** @inheritDoc */\r\n    public readonly transferFormat: TransferFormat = TransferFormat.Text;\r\n\r\n    /** Creates an array of {@link @microsoft/signalr.HubMessage} objects from the specified serialized representation.\r\n     *\r\n     * @param {string} input A string containing the serialized representation.\r\n     * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.\r\n     */\r\n    public parseMessages(input: string, logger: ILogger): HubMessage[] {\r\n        // The interface does allow \"ArrayBuffer\" to be passed in, but this implementation does not. So let's throw a useful error.\r\n        if (typeof input !== \"string\") {\r\n            throw new Error(\"Invalid input for JSON hub protocol. Expected a string.\");\r\n        }\r\n\r\n        if (!input) {\r\n            return [];\r\n        }\r\n\r\n        if (logger === null) {\r\n            logger = NullLogger.instance;\r\n        }\r\n\r\n        // Parse the messages\r\n        const messages = TextMessageFormat.parse(input);\r\n\r\n        const hubMessages = [];\r\n        for (const message of messages) {\r\n            const parsedMessage = JSON.parse(message) as HubMessage;\r\n            if (typeof parsedMessage.type !== \"number\") {\r\n                throw new Error(\"Invalid payload.\");\r\n            }\r\n            switch (parsedMessage.type) {\r\n                case MessageType.Invocation:\r\n                    this.isInvocationMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.StreamItem:\r\n                    this.isStreamItemMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Completion:\r\n                    this.isCompletionMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Ping:\r\n                    // Single value, no need to validate\r\n                    break;\r\n                case MessageType.Close:\r\n                    // All optional values, no need to validate\r\n                    break;\r\n                default:\r\n                    // Future protocol changes can add message types, old clients can ignore them\r\n                    logger.log(LogLevel.Information, \"Unknown message type '\" + parsedMessage.type + \"' ignored.\");\r\n                    continue;\r\n            }\r\n            hubMessages.push(parsedMessage);\r\n        }\r\n\r\n        return hubMessages;\r\n    }\r\n\r\n    /** Writes the specified {@link @microsoft/signalr.HubMessage} to a string and returns it.\r\n     *\r\n     * @param {HubMessage} message The message to write.\r\n     * @returns {string} A string containing the serialized representation of the message.\r\n     */\r\n    public writeMessage(message: HubMessage): string {\r\n        return TextMessageFormat.write(JSON.stringify(message));\r\n    }\r\n\r\n    private isInvocationMessage(message: InvocationMessage): void {\r\n        this.assertNotEmptyString(message.target, \"Invalid payload for Invocation message.\");\r\n\r\n        if (message.invocationId !== undefined) {\r\n            this.assertNotEmptyString(message.invocationId, \"Invalid payload for Invocation message.\");\r\n        }\r\n    }\r\n\r\n    private isStreamItemMessage(message: StreamItemMessage): void {\r\n        this.assertNotEmptyString(message.invocationId, \"Invalid payload for StreamItem message.\");\r\n\r\n        if (message.item === undefined) {\r\n            throw new Error(\"Invalid payload for StreamItem message.\");\r\n        }\r\n    }\r\n\r\n    private isCompletionMessage(message: CompletionMessage): void {\r\n        if (message.result && message.error) {\r\n            throw new Error(\"Invalid payload for Completion message.\");\r\n        }\r\n\r\n        if (!message.result && message.error) {\r\n            this.assertNotEmptyString(message.error, \"Invalid payload for Completion message.\");\r\n        }\r\n\r\n        this.assertNotEmptyString(message.invocationId, \"Invalid payload for Completion message.\");\r\n    }\r\n\r\n    private assertNotEmptyString(value: any, errorMessage: string): void {\r\n        if (typeof value !== \"string\" || value === \"\") {\r\n            throw new Error(errorMessage);\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { DefaultReconnectPolicy } from \"./DefaultReconnectPolicy\";\r\nimport { HttpConnection } from \"./HttpConnection\";\r\nimport { HubConnection } from \"./HubConnection\";\r\nimport { IHttpConnectionOptions } from \"./IHttpConnectionOptions\";\r\nimport { IHubProtocol } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { IRetryPolicy } from \"./IRetryPolicy\";\r\nimport { HttpTransportType } from \"./ITransport\";\r\nimport { JsonHubProtocol } from \"./JsonHubProtocol\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { Arg, ConsoleLogger } from \"./Utils\";\r\n\r\n// tslint:disable:object-literal-sort-keys\r\nconst LogLevelNameMapping = {\r\n    trace: LogLevel.Trace,\r\n    debug: LogLevel.Debug,\r\n    info: LogLevel.Information,\r\n    information: LogLevel.Information,\r\n    warn: LogLevel.Warning,\r\n    warning: LogLevel.Warning,\r\n    error: LogLevel.Error,\r\n    critical: LogLevel.Critical,\r\n    none: LogLevel.None,\r\n};\r\n\r\nfunction parseLogLevel(name: string): LogLevel {\r\n    // Case-insensitive matching via lower-casing\r\n    // Yes, I know case-folding is a complicated problem in Unicode, but we only support\r\n    // the ASCII strings defined in LogLevelNameMapping anyway, so it's fine -anurse.\r\n    const mapping = LogLevelNameMapping[name.toLowerCase()];\r\n    if (typeof mapping !== \"undefined\") {\r\n        return mapping;\r\n    } else {\r\n        throw new Error(`Unknown log level: ${name}`);\r\n    }\r\n}\r\n\r\n/** A builder for configuring {@link @microsoft/signalr.HubConnection} instances. */\r\nexport class HubConnectionBuilder {\r\n    /** @internal */\r\n    public protocol?: IHubProtocol;\r\n    /** @internal */\r\n    public httpConnectionOptions?: IHttpConnectionOptions;\r\n    /** @internal */\r\n    public url?: string;\r\n    /** @internal */\r\n    public logger?: ILogger;\r\n\r\n    /** If defined, this indicates the client should automatically attempt to reconnect if the connection is lost. */\r\n    /** @internal */\r\n    public reconnectPolicy?: IRetryPolicy;\r\n\r\n    /** Configures console logging for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @param {LogLevel} logLevel The minimum level of messages to log. Anything at this level, or a more severe level, will be logged.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public configureLogging(logLevel: LogLevel): HubConnectionBuilder;\r\n\r\n    /** Configures custom logging for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @param {ILogger} logger An object implementing the {@link @microsoft/signalr.ILogger} interface, which will be used to write all log messages.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public configureLogging(logger: ILogger): HubConnectionBuilder;\r\n\r\n    /** Configures custom logging for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @param {string} logLevel A string representing a LogLevel setting a minimum level of messages to log.\r\n     *    See {@link https://docs.microsoft.com/aspnet/core/signalr/configuration#configure-logging|the documentation for client logging configuration} for more details.\r\n     */\r\n    public configureLogging(logLevel: string): HubConnectionBuilder;\r\n\r\n    /** Configures custom logging for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @param {LogLevel | string | ILogger} logging A {@link @microsoft/signalr.LogLevel}, a string representing a LogLevel, or an object implementing the {@link @microsoft/signalr.ILogger} interface.\r\n     *    See {@link https://docs.microsoft.com/aspnet/core/signalr/configuration#configure-logging|the documentation for client logging configuration} for more details.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public configureLogging(logging: LogLevel | string | ILogger): HubConnectionBuilder;\r\n    public configureLogging(logging: LogLevel | string | ILogger): HubConnectionBuilder {\r\n        Arg.isRequired(logging, \"logging\");\r\n\r\n        if (isLogger(logging)) {\r\n            this.logger = logging;\r\n        } else if (typeof logging === \"string\") {\r\n            const logLevel = parseLogLevel(logging);\r\n            this.logger = new ConsoleLogger(logLevel);\r\n        } else {\r\n            this.logger = new ConsoleLogger(logging);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use HTTP-based transports to connect to the specified URL.\r\n     *\r\n     * The transport will be selected automatically based on what the server and client support.\r\n     *\r\n     * @param {string} url The URL the connection will use.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public withUrl(url: string): HubConnectionBuilder;\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use the specified HTTP-based transport to connect to the specified URL.\r\n     *\r\n     * @param {string} url The URL the connection will use.\r\n     * @param {HttpTransportType} transportType The specific transport to use.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public withUrl(url: string, transportType: HttpTransportType): HubConnectionBuilder;\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use HTTP-based transports to connect to the specified URL.\r\n     *\r\n     * @param {string} url The URL the connection will use.\r\n     * @param {IHttpConnectionOptions} options An options object used to configure the connection.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public withUrl(url: string, options: IHttpConnectionOptions): HubConnectionBuilder;\r\n    public withUrl(url: string, transportTypeOrOptions?: IHttpConnectionOptions | HttpTransportType): HubConnectionBuilder {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isNotEmpty(url, \"url\");\r\n\r\n        this.url = url;\r\n\r\n        // Flow-typing knows where it's at. Since HttpTransportType is a number and IHttpConnectionOptions is guaranteed\r\n        // to be an object, we know (as does TypeScript) this comparison is all we need to figure out which overload was called.\r\n        if (typeof transportTypeOrOptions === \"object\") {\r\n            this.httpConnectionOptions = { ...this.httpConnectionOptions, ...transportTypeOrOptions };\r\n        } else {\r\n            this.httpConnectionOptions = {\r\n                ...this.httpConnectionOptions,\r\n                transport: transportTypeOrOptions,\r\n            };\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use the specified Hub Protocol.\r\n     *\r\n     * @param {IHubProtocol} protocol The {@link @microsoft/signalr.IHubProtocol} implementation to use.\r\n     */\r\n    public withHubProtocol(protocol: IHubProtocol): HubConnectionBuilder {\r\n        Arg.isRequired(protocol, \"protocol\");\r\n\r\n        this.protocol = protocol;\r\n        return this;\r\n    }\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to automatically attempt to reconnect if the connection is lost.\r\n     * By default, the client will wait 0, 2, 10 and 30 seconds respectively before trying up to 4 reconnect attempts.\r\n     */\r\n    public withAutomaticReconnect(): HubConnectionBuilder;\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to automatically attempt to reconnect if the connection is lost.\r\n     *\r\n     * @param {number[]} retryDelays An array containing the delays in milliseconds before trying each reconnect attempt.\r\n     * The length of the array represents how many failed reconnect attempts it takes before the client will stop attempting to reconnect.\r\n     */\r\n    public withAutomaticReconnect(retryDelays: number[]): HubConnectionBuilder;\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to automatically attempt to reconnect if the connection is lost.\r\n     *\r\n     * @param {IRetryPolicy} reconnectPolicy An {@link @microsoft/signalR.IRetryPolicy} that controls the timing and number of reconnect attempts.\r\n     */\r\n    public withAutomaticReconnect(reconnectPolicy: IRetryPolicy): HubConnectionBuilder;\r\n    public withAutomaticReconnect(retryDelaysOrReconnectPolicy?: number[] | IRetryPolicy): HubConnectionBuilder {\r\n        if (this.reconnectPolicy) {\r\n            throw new Error(\"A reconnectPolicy has already been set.\");\r\n        }\r\n\r\n        if (!retryDelaysOrReconnectPolicy) {\r\n            this.reconnectPolicy = new DefaultReconnectPolicy();\r\n        } else if (Array.isArray(retryDelaysOrReconnectPolicy)) {\r\n            this.reconnectPolicy = new DefaultReconnectPolicy(retryDelaysOrReconnectPolicy);\r\n        } else {\r\n            this.reconnectPolicy = retryDelaysOrReconnectPolicy;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /** Creates a {@link @microsoft/signalr.HubConnection} from the configuration options specified in this builder.\r\n     *\r\n     * @returns {HubConnection} The configured {@link @microsoft/signalr.HubConnection}.\r\n     */\r\n    public build(): HubConnection {\r\n        // If httpConnectionOptions has a logger, use it. Otherwise, override it with the one\r\n        // provided to configureLogger\r\n        const httpConnectionOptions = this.httpConnectionOptions || {};\r\n\r\n        // If it's 'null', the user **explicitly** asked for null, don't mess with it.\r\n        if (httpConnectionOptions.logger === undefined) {\r\n            // If our logger is undefined or null, that's OK, the HttpConnection constructor will handle it.\r\n            httpConnectionOptions.logger = this.logger;\r\n        }\r\n\r\n        // Now create the connection\r\n        if (!this.url) {\r\n            throw new Error(\"The 'HubConnectionBuilder.withUrl' method must be called before building the connection.\");\r\n        }\r\n        const connection = new HttpConnection(this.url, httpConnectionOptions);\r\n\r\n        return HubConnection.create(\r\n            connection,\r\n            this.logger || NullLogger.instance,\r\n            this.protocol || new JsonHubProtocol(),\r\n            this.reconnectPolicy);\r\n    }\r\n}\r\n\r\nfunction isLogger(logger: any): logger is ILogger {\r\n    return logger.log !== undefined;\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// Everything that users need to access must be exported here. Including interfaces.\r\nexport { AbortSignal } from \"./AbortController\";\r\nexport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nexport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nexport { DefaultHttpClient } from \"./DefaultHttpClient\";\r\nexport { IHttpConnectionOptions } from \"./IHttpConnectionOptions\";\r\nexport { HubConnection, HubConnectionState } from \"./HubConnection\";\r\nexport { HubConnectionBuilder } from \"./HubConnectionBuilder\";\r\nexport { MessageType, MessageHeaders, HubMessage, HubMessageBase, HubInvocationMessage, InvocationMessage, StreamInvocationMessage, StreamItemMessage, CompletionMessage,\r\n    PingMessage, CloseMessage, CancelInvocationMessage, IHubProtocol } from \"./IHubProtocol\";\r\nexport { ILogger, LogLevel } from \"./ILogger\";\r\nexport { HttpTransportType, TransferFormat, ITransport } from \"./ITransport\";\r\nexport { IStreamSubscriber, IStreamResult, ISubscription } from \"./Stream\";\r\nexport { NullLogger } from \"./Loggers\";\r\nexport { JsonHubProtocol } from \"./JsonHubProtocol\";\r\nexport { Subject } from \"./Subject\";\r\nexport { IRetryPolicy, RetryContext } from \"./IRetryPolicy\";\r\nexport { VERSION } from \"./Utils\";\r\n","import * as signalR from \"@microsoft/signalr\";\r\n\r\nconst negotiateUrl = \"http://localhost:7071/api\";\r\n// const negotiateUrl = \"https://smarthighwayfunctionapp.azurewebsites.net/api\";\r\nconst lights = {\"t1\": [\"north\", \"south\"], \"t2\": [\"west\", \"east\"]};\r\nconst state_to_color = {0: \"Red\", 1:\"Green\"};\r\nconst laneIds = [\"north_t1\", \"south_t1\", \"east_t2\", \"west_t2\"];\r\nconst laneNames = {\"east_t2\": \"East to West\", \"west_t2\": \"West to East\",\r\n                    \"north_t1\": \"North to South\", \"south_t1\": \"South to North\"};\r\n\r\nconst connection = new signalR.HubConnectionBuilder()\r\n    .withUrl(`${negotiateUrl}`)\r\n    .withAutomaticReconnect()\r\n    .configureLogging(signalR.LogLevel.Information)\r\n    .build();\r\n\r\nasync function start() {\r\n    try {\r\n        await connection.start();\r\n        console.assert(connection.state === signalR.HubConnectionState.Connected);\r\n        console.log(\"SignalR Connected.\");\r\n    } catch (err) {\r\n        console.assert(connection.state === signalR.HubConnectionState.Disconnected);\r\n        console.log(err);\r\n        setTimeout(() => start(), 5000);\r\n    }\r\n};\r\n\r\n\r\nconnection.onclose(async () => {\r\n        await start();\r\n});\r\n\r\nconnection.on(\"newMessage\", (values, numCarsDict) => {\r\n    for (const [lightId, directions] of Object.entries(lights)){\r\n        for (var i = 0; i < directions.length; i++){\r\n            var direction = directions[i];\r\n            var lightElem = document.getElementById(`light_${direction}_${lightId}`);\r\n            if (typeof(Storage) != \"undefined\"){\r\n                localStorage.setItem(`light_${direction}_${lightId}`, state_to_color[values[lightId]]);\r\n            }\r\n            var oppositeDirection = directions[1 - i];\r\n            var content = document.createTextNode(`${direction} to ${oppositeDirection} is ${state_to_color[values[lightId]]}`);\r\n            if (lightElem.innerHTML != null){\r\n                lightElem.innerHTML = ``;\r\n            }\r\n            var fontElem = document.createElement(\"font\");\r\n            fontElem.appendChild(content);\r\n            fontElem.setAttribute(\"color\", state_to_color[values[lightId]].toLowerCase());\r\n            lightElem.appendChild(fontElem);\r\n        }\r\n    }\r\n    // var t1_north = document.getElementById(\"light_north_t1\");\r\n    // var t2 = document.getElementById(\"t2\");\r\n    \r\n    // var t1_content = document.createTextNode(`North to South and South to North is ${state_to_color[values[\"t1\"]]}`);\r\n    // var t2_content = document.createTextNode(`East to West and West to East is ${state_to_color[values[\"t2\"]]}`);\r\n\r\n    // t1.innerHTML = '';\r\n    // t2.innerHTML = '';\r\n    // t1.appendChild(t1_content);\r\n    // t2.appendChild(t2_content);\r\n\r\n    var laneDiv = document.getElementById(\"lanes\");\r\n    for (const laneId of laneIds){\r\n        var numCars = numCarsDict[laneId]\r\n        laneElem = laneDiv.querySelector(`#${laneId}`);\r\n        if (laneElem == null){\r\n            laneElem = document.createElement(\"h2\");\r\n            laneElem.setAttribute(\"id\", laneId);\r\n            laneDiv.appendChild(laneElem);\r\n        }\r\n        else{\r\n            if (laneElem.innerHTML != null){\r\n                laneElem.innerHTML = ``;\r\n            }\r\n        }\r\n        if (typeof(Storage) != \"undefined\"){\r\n            localStorage.setItem(laneId, numCars);\r\n        }\r\n        laneElem.setAttribute(\"class\", \"lane_info\");\r\n        laneElem.appendChild(document.createTextNode(`${laneNames[laneId]}: ${numCars} 🚗`));\r\n    }\r\n});\r\n\r\n\r\nfunction loadPreviousData(){\r\n    if (typeof(Storage) == \"undefined\"){\r\n        console.log(\"localStorage is not supported\");\r\n        return;\r\n    }\r\n    console.log(\"localStorage is supported!\");\r\n    for (const [lightId, directions] of Object.entries(lights)){\r\n        for (var i = 0; i < directions.length; i++){\r\n            var direction = directions[i];\r\n            var color = localStorage.getItem(`light_${direction}_${lightId}`);\r\n            if (color == null){ // was not previously stored\r\n                console.log(`color is not stored for light_${direction}_${lightId}`);\r\n                continue;\r\n            }\r\n            var direction = directions[i];\r\n            var lightElem = document.getElementById(`light_${direction}_${lightId}`);\r\n            console.log(`lightElem = ${lightElem}, light_${direction}_${lightId}`);\r\n            var oppositeDirection = directions[1 - i];\r\n            var content = document.createTextNode(`${direction} to ${oppositeDirection} is ${color}`);\r\n            if (lightElem.innerHTML != null){\r\n                lightElem.innerHTML = ``;\r\n            }            var fontElem = document.createElement(\"font\");\r\n            fontElem.appendChild(content);\r\n            fontElem.setAttribute(\"color\", color.toLowerCase());\r\n            lightElem.appendChild(fontElem);\r\n        }\r\n    }\r\n\r\n    var laneDiv = document.getElementById(\"lanes\");\r\n    for (const laneId of laneIds){\r\n        var numCars = localStorage.getItem(laneId);\r\n        if (numCars == null){ // was not previously stored\r\n            continue;\r\n        }\r\n        laneElem = laneDiv.querySelector(`#${laneId}`);\r\n        if (laneElem == null){\r\n            laneElem = document.createElement(\"h2\");\r\n            laneElem.setAttribute(\"id\", laneId);\r\n            laneDiv.appendChild(laneElem);\r\n        }\r\n        else{\r\n            if (laneElem.innerHTML != null){\r\n                laneElem.innerHTML = ``;\r\n            }\r\n        }\r\n        laneElem.setAttribute(\"class\", \"lane_info\");\r\n        laneElem.appendChild(document.createTextNode(`${laneNames[laneId]}\\n${numCars} 🚗`));\r\n    }\r\n}\r\n\r\nasync function main() {\r\n    // start the signalR connection\r\n    start();\r\n\r\n    loadPreviousData();\r\n    \r\n}\r\n\r\nfunction simulate(){\r\n    var simulateUrl = \"http://localhost:7071/api/Simulate\";\r\n    // var simulateUrl = \"https://smarthighwayfunctionapp.azurewebsites.net/api/Simulate?\";\r\n    $.ajax(simulateUrl, {\r\n    type: 'GET',\r\n    data: {\r\n      num_times: 1\r\n    }\r\n  });\r\n}\r\n\r\nwindow.onload = function() {\r\n    var btn = document.getElementById(\"simulateBtn\");\r\n    btn.onclick = simulate;\r\n    main();\r\n}\r\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}